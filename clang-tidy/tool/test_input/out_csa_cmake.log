nice docker run --rm clang-tidy-cmake -m clang-analyzer -b ninja -t 'ctest -j16'
 in dir /fast_data2/clang-tidy-bb/buildmaster/workers/workstation/cmake/build (timeout 1200 secs)
 watching logfiles {}
 argv: [b'nice', b'docker', b'run', b'--rm', b'clang-tidy-cmake', b'-m', b'clang-analyzer', b'-b', b'ninja', b'-t', b'ctest -j16']
 environment:
  AUTOFEATURE=true autotest
  BASH_IT=/home/jonas/.bash_it
  BASH_IT_THEME=bakke
  DBUS_SESSION_BUS_ADDRESS=unix:path=/run/user/1000/bus
  EDITOR=vim
  GIT_HOSTING=git@gitolite
  GPGKEY=7B144D7A
  GREP_COLOR=1;33
  HISTCONTROL=ignoreboth
  HISTSIZE=1000
  HOME=/home/jonas
  IRC_CLIENT=irssi
  LANG=de_DE.UTF-8
  LESSCLOSE=/usr/bin/lesspipe %s %s
  LESSOPEN=| /usr/bin/lesspipe %s
  LOGNAME=jonas
  LSCOLORS=Gxfxcxdxdxegedabagacad
  LS_COLORS=rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.Z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:
  MAIL=/var/mail/jonas
  OLDPWD=/fast_data2/clang-tidy-bb
  PATH=/home/jonas/.cargo/bin:/home/jonas/bin:/home/jonas/.local/bin:/home/jonas/.cargo/bin:/home/jonas/.cargo/bin:/home/jonas/bin:/home/jonas/.local/bin:/home/jonas/.cargo/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin
  PWD=/fast_data2/clang-tidy-bb/buildmaster/workers/workstation/cmake/build
  SCM_CHECK=true
  SHELL=/bin/bash
  SHLVL=2
  SHORT_TERM_LINE=true
  SSH_CLIENT=192.168.10.35 41798 22
  SSH_CONNECTION=192.168.10.35 41798 192.168.10.37 22
  SSH_TTY=/dev/pts/0
  S_COLORS=auto
  TERM=xterm-256color
  THEME_CLOCK_FORMAT=%H:%M:%S
  THEME_SHOW_CLOCK=true
  TMUX=/tmp/tmux-1000/default,28172,0
  TMUX_PANE=%19
  USER=jonas
  XDG_DATA_DIRS=/usr/local/share:/usr/share:/var/lib/snapd/desktop
  XDG_RUNTIME_DIR=/run/user/1000
  XDG_SESSION_ID=124
  _=/usr/local/bin/buildbot
 using PTY: False
['run-clang-tidy.py', '-checks=-*,clang-analyzer-*', '-fix', '/project/git/']
Is Shell: False
Enabled checks:
    clang-analyzer-apiModeling.StdCLibraryFunctions
    clang-analyzer-apiModeling.TrustNonnull
    clang-analyzer-apiModeling.google.GTest
    clang-analyzer-core.CallAndMessage
    clang-analyzer-core.DivideZero
    clang-analyzer-core.DynamicTypePropagation
    clang-analyzer-core.NonNullParamChecker
    clang-analyzer-core.NonnilStringConstants
    clang-analyzer-core.NullDereference
    clang-analyzer-core.StackAddressEscape
    clang-analyzer-core.UndefinedBinaryOperatorResult
    clang-analyzer-core.VLASize
    clang-analyzer-core.builtin.BuiltinFunctions
    clang-analyzer-core.builtin.NoReturnFunctions
    clang-analyzer-core.uninitialized.ArraySubscript
    clang-analyzer-core.uninitialized.Assign
    clang-analyzer-core.uninitialized.Branch
    clang-analyzer-core.uninitialized.CapturedBlockVariable
    clang-analyzer-core.uninitialized.UndefReturn
    clang-analyzer-cplusplus.InnerPointer
    clang-analyzer-cplusplus.NewDelete
    clang-analyzer-cplusplus.NewDeleteLeaks
    clang-analyzer-cplusplus.SelfAssignment
    clang-analyzer-deadcode.DeadStores
    clang-analyzer-llvm.Conventions
    clang-analyzer-nullability.NullPassedToNonnull
    clang-analyzer-nullability.NullReturnedFromNonnull
    clang-analyzer-nullability.NullableDereferenced
    clang-analyzer-nullability.NullablePassedToNonnull
    clang-analyzer-nullability.NullableReturnedFromNonnull
    clang-analyzer-optin.cplusplus.VirtualCall
    clang-analyzer-optin.mpi.MPI-Checker
    clang-analyzer-optin.osx.cocoa.localizability.EmptyLocalizationContextChecker
    clang-analyzer-optin.osx.cocoa.localizability.NonLocalizedStringChecker
    clang-analyzer-optin.performance.GCDAntipattern
    clang-analyzer-optin.performance.Padding
    clang-analyzer-optin.portability.UnixAPI
    clang-analyzer-osx.API
    clang-analyzer-osx.NumberObjectConversion
    clang-analyzer-osx.ObjCProperty
    clang-analyzer-osx.SecKeychainAPI
    clang-analyzer-osx.cocoa.AtSync
    clang-analyzer-osx.cocoa.AutoreleaseWrite
    clang-analyzer-osx.cocoa.ClassRelease
    clang-analyzer-osx.cocoa.Dealloc
    clang-analyzer-osx.cocoa.IncompatibleMethodTypes
    clang-analyzer-osx.cocoa.Loops
    clang-analyzer-osx.cocoa.MissingSuperCall
    clang-analyzer-osx.cocoa.NSAutoreleasePool
    clang-analyzer-osx.cocoa.NSError
    clang-analyzer-osx.cocoa.NilArg
    clang-analyzer-osx.cocoa.NonNilReturnValue
    clang-analyzer-osx.cocoa.ObjCGenerics
    clang-analyzer-osx.cocoa.RetainCount
    clang-analyzer-osx.cocoa.RunLoopAutoreleaseLeak
    clang-analyzer-osx.cocoa.SelfInit
    clang-analyzer-osx.cocoa.SuperDealloc
    clang-analyzer-osx.cocoa.UnusedIvars
    clang-analyzer-osx.cocoa.VariadicMethodTypes
    clang-analyzer-osx.coreFoundation.CFError
    clang-analyzer-osx.coreFoundation.CFNumber
    clang-analyzer-osx.coreFoundation.CFRetainRelease
    clang-analyzer-osx.coreFoundation.containers.OutOfBounds
    clang-analyzer-osx.coreFoundation.containers.PointerSizedValues
    clang-analyzer-security.FloatLoopCounter
    clang-analyzer-security.insecureAPI.UncheckedReturn
    clang-analyzer-security.insecureAPI.bcmp
    clang-analyzer-security.insecureAPI.bcopy
    clang-analyzer-security.insecureAPI.bzero
    clang-analyzer-security.insecureAPI.getpw
    clang-analyzer-security.insecureAPI.gets
    clang-analyzer-security.insecureAPI.mkstemp
    clang-analyzer-security.insecureAPI.mktemp
    clang-analyzer-security.insecureAPI.rand
    clang-analyzer-security.insecureAPI.strcpy
    clang-analyzer-security.insecureAPI.vfork
    clang-analyzer-unix.API
    clang-analyzer-unix.Malloc
    clang-analyzer-unix.MallocSizeof
    clang-analyzer-unix.MismatchedDeallocator
    clang-analyzer-unix.Vfork
    clang-analyzer-unix.cstring.BadSizeArg
    clang-analyzer-unix.cstring.NullArg
    clang-analyzer-valist.CopyToSelf
    clang-analyzer-valist.Uninitialized
    clang-analyzer-valist.Unterminated

clang-apply-replacements version 8.0.0
1 warning generated.

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpbu8R64.yaml -p=/project/git /project/git/Source/kwsys/testConfigure.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpFkV6Av.yaml -p=/project/git /project/git/Source/kwsys/String.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmprPRLh8.yaml -p=/project/git /project/git/Source/kwsys/Directory.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpe_x9X0.yaml -p=/project/git /project/git/Source/kwsys/testCommandLineArguments.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpYnGj2t.yaml -p=/project/git /project/git/Source/kwsys/EncodingC.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmp7OM821.yaml -p=/project/git /project/git/Source/kwsys/Base64.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpPlq8Bb.yaml -p=/project/git /project/git/Source/kwsys/DynamicLoader.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpPqwOSA.yaml -p=/project/git /project/git/Source/kwsys/testConsoleBuf.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpg1dPbg.yaml -p=/project/git /project/git/Source/kwsys/testDirectory.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpMdEcwM.yaml -p=/project/git /project/git/Source/kwsys/EncodingCXX.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmp7B1zZW.yaml -p=/project/git /project/git/Source/kwsys/System.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpvDfeMh.yaml -p=/project/git /project/git/Source/kwsys/IOStream.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpPNM4NC.yaml -p=/project/git /project/git/Source/kwsys/testDynload.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpXUKN2f.yaml -p=/project/git /project/git/Source/kwsys/FStream.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpJYISbP.yaml -p=/project/git /project/git/Source/kwsys/Base64.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmp8sS9io.yaml -p=/project/git /project/git/Source/kwsys/EncodingC.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpCXU74X.yaml -p=/project/git /project/git/Source/kwsys/testEncoding.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpes18Bf.yaml -p=/project/git /project/git/Source/kwsys/testCommandLineArguments1.cxx
/project/git/Source/kwsys/testCommandLineArguments1.cxx:83:16: warning: Null pointer passed as an argument to a 'nonnull' parameter [clang-analyzer-core.NonNullParamChecker]
               strcmp(valid_unused_args[cc], newArgv[cc]) != 0) {
               ^
/project/git/Source/kwsys/testCommandLineArguments1.cxx:35:7: note: Assuming the condition is false
  if (!arg.Parse()) {
      ^
/project/git/Source/kwsys/testCommandLineArguments1.cxx:35:3: note: Taking false branch
  if (!arg.Parse()) {
  ^
/project/git/Source/kwsys/testCommandLineArguments1.cxx:39:7: note: Assuming 'n' is equal to 24
  if (n != 24) {
      ^
/project/git/Source/kwsys/testCommandLineArguments1.cxx:39:3: note: Taking false branch
  if (n != 24) {
  ^
/project/git/Source/kwsys/testCommandLineArguments1.cxx:43:7: note: Assuming 'm' is non-null
  if (!m || strcmp(m, "test value") != 0) {
      ^
/project/git/Source/kwsys/testCommandLineArguments1.cxx:43:7: note: Left side of '||' is false
1 warning generated.

1 warning generated.

/project/git/Source/kwsys/testCommandLineArguments1.cxx:43:3: note: Taking false branch
  if (!m || strcmp(m, "test value") != 0) {
  ^
/project/git/Source/kwsys/testCommandLineArguments1.cxx:47:3: note: Taking true branch
  if (p != "1") {
  ^
/project/git/Source/kwsys/testCommandLineArguments1.cxx:54:3: note: Taking true branch
  if (m) {
  ^
/project/git/Source/kwsys/testCommandLineArguments1.cxx:71:7: note: Assuming 'newArgc' is equal to 9
  if (newArgc != 9) {
      ^
/project/git/Source/kwsys/testCommandLineArguments1.cxx:71:3: note: Taking false branch
  if (newArgc != 9) {
  ^
/project/git/Source/kwsys/testCommandLineArguments1.cxx:75:3: note: Loop condition is true.  Entering loop body
  for (cc = 0; cc < newArgc; ++cc) {
  ^
/project/git/Source/kwsys/testCommandLineArguments1.cxx:79:5: note: Taking false branch
    if (cc >= 9) {
    ^
/project/git/Source/kwsys/testCommandLineArguments1.cxx:82:38: note: Left side of '&&' is false
    } else if (valid_unused_args[cc] &&
                                     ^
/project/git/Source/kwsys/testCommandLineArguments1.cxx:75:3: note: Loop condition is true.  Entering loop body
  for (cc = 0; cc < newArgc; ++cc) {
  ^
/project/git/Source/kwsys/testCommandLineArguments1.cxx:77:5: note: Calling 'operator<<<std::char_traits<char>>'
    std::cout << "Unused argument[" << cc << "] = [" << newArgv[cc] << "]"
    ^
/usr/bin/../lib/gcc/x86_64-linux-gnu/7.3.0/../../../../include/c++/7.3.0/ostream:558:11: note: Assuming '__s' is null
      if (!__s)
          ^
/usr/bin/../lib/gcc/x86_64-linux-gnu/7.3.0/../../../../include/c++/7.3.0/ostream:558:7: note: Taking true branch
      if (!__s)
      ^
/project/git/Source/kwsys/testCommandLineArguments1.cxx:77:5: note: Returning from 'operator<<<std::char_traits<char>>'
    std::cout << "Unused argument[" << cc << "] = [" << newArgv[cc] << "]"
    ^
/project/git/Source/kwsys/testCommandLineArguments1.cxx:79:5: note: Taking false branch
    if (cc >= 9) {
    ^
/project/git/Source/kwsys/testCommandLineArguments1.cxx:82:16: note: Left side of '&&' is true
    } else if (valid_unused_args[cc] &&
               ^
/project/git/Source/kwsys/testCommandLineArguments1.cxx:83:16: note: Null pointer passed as an argument to a 'nonnull' parameter
               strcmp(valid_unused_args[cc], newArgv[cc]) != 0) {
               ^

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmp2mS05Q.yaml -p=/project/git /project/git/Source/kwsys/Terminal.c
/project/git/Source/kwsys/Terminal.c:72:5: warning: Function 'vfprintf' is called with an uninitialized va_list argument [clang-analyzer-valist.Uninitialized]
    vfprintf(stream, format, var_args);
    ^
/project/git/Source/kwsys/Terminal.c:62:7: note: Left side of '&&' is true
  if (!pipeIsConsole &&
      ^
/project/git/Source/kwsys/Terminal.c:63:7: note: Assuming the condition is false
      kwsysTerminalStreamIsVT100(stream, default_vt100, default_tty)) {
      ^
/project/git/Source/kwsys/Terminal.c:62:3: note: Taking false branch
  if (!pipeIsConsole &&
  ^
/project/git/Source/kwsys/Terminal.c:72:5: note: Function 'vfprintf' is called with an uninitialized va_list argument
    vfprintf(stream, format, var_args);
    ^

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmp6QOAAV.yaml -p=/project/git /project/git/Source/kwsys/String.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpdnFaZw.yaml -p=/project/git /project/git/Source/kwsys/testConsoleBufChild.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpnEIAgk.yaml -p=/project/git /project/git/Source/kwsys/testProcess.c
/project/git/Source/kwsys/testProcess.c:138:19: warning: Dereference of null pointer (loaded from variable 'invalidAddress') [clang-analyzer-core.NullDereference]
  *invalidAddress = 0;
                  ^
/project/git/Source/kwsys/testProcess.c:595:7: note: Assuming 'argc' is not equal to 2
  if (argc == 2) {
      ^
/project/git/Source/kwsys/testProcess.c:595:3: note: Taking false branch
  if (argc == 2) {
  ^
/project/git/Source/kwsys/testProcess.c:597:14: note: Assuming 'argc' is equal to 3
  } else if (argc == 3 && strcmp(argv[1], "run") == 0) {
             ^
/project/git/Source/kwsys/testProcess.c:597:14: note: Left side of '&&' is true
/project/git/Source/kwsys/testProcess.c:597:10: note: Taking true branch
  } else if (argc == 3 && strcmp(argv[1], "run") == 0) {
         ^
/project/git/Source/kwsys/testProcess.c:601:9: note: Assuming 'n' is >= 1
  if (((n >= 1 && n <= 10) || n == 108 || n == 109 || n == 110) && argc == 3) {
        ^
/project/git/Source/kwsys/testProcess.c:601:9: note: Left side of '&&' is true
/project/git/Source/kwsys/testProcess.c:601:19: note: Assuming 'n' is <= 10
  if (((n >= 1 && n <= 10) || n == 108 || n == 109 || n == 110) && argc == 3) {
                  ^
/project/git/Source/kwsys/testProcess.c:601:28: note: Left side of '||' is true
  if (((n >= 1 && n <= 10) || n == 108 || n == 109 || n == 110) && argc == 3) {
                           ^
/project/git/Source/kwsys/testProcess.c:601:3: note: Taking true branch
  if (((n >= 1 && n <= 10) || n == 108 || n == 109 || n == 110) && argc == 3) {
  ^
/project/git/Source/kwsys/testProcess.c:603:5: note: Control jumps to 'case 4:'  at line 610
    switch (n) {
    ^
/project/git/Source/kwsys/testProcess.c:611:16: note: Calling 'test4'
        return test4(argc, argv);
               ^
/project/git/Source/kwsys/testProcess.c:117:21: note: '?' condition is true
  invalidAddress += argc ? 1 : 2;
                    ^
/project/git/Source/kwsys/testProcess.c:117:3: note: Null pointer value stored to 'invalidAddress'
  invalidAddress += argc ? 1 : 2;
  ^
/project/git/Source/kwsys/testProcess.c:138:19: note: Dereference of null pointer (loaded from variable 'invalidAddress')
  *invalidAddress = 0;
                  ^

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpOMG2FZ.yaml -p=/project/git /project/git/Source/kwsys/testEncode.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpies0EK.yaml -p=/project/git /project/git/Source/kwsys/testTerminal.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmplhaDjZ.yaml -p=/project/git /project/git/Utilities/KWIML/test/test.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpKhsfs0.yaml -p=/project/git /project/git/Utilities/KWIML/test/test_abi_C.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmp8JR7rp.yaml -p=/project/git /project/git/Utilities/KWIML/test/test_int_C.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpbhVsBZ.yaml -p=/project/git /project/git/Source/kwsys/System.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmp4zwFFO.yaml -p=/project/git /project/git/Utilities/KWIML/test/test_include_C.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpeFqzSo.yaml -p=/project/git /project/git/Utilities/KWIML/test/test_abi_CXX.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpEOQ3cX.yaml -p=/project/git /project/git/Utilities/KWIML/test/test_int_CXX.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpqOlWLX.yaml -p=/project/git /project/git/Utilities/cmlibrhash/librhash/algorithms.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpuc_vkR.yaml -p=/project/git /project/git/Utilities/cmlibrhash/librhash/byte_order.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpTVKGF5.yaml -p=/project/git /project/git/Source/kwsys/MD5.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpzqZIvT.yaml -p=/project/git /project/git/Utilities/KWIML/test/test_include_CXX.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpkv5WoW.yaml -p=/project/git /project/git/Source/kwsys/Glob.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmple6orW.yaml -p=/project/git /project/git/Source/kwsys/testSystemTools.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpntCeJB.yaml -p=/project/git /project/git/Source/kwsys/testFStream.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmps6ay3a.yaml -p=/project/git /project/git/Source/kwsys/testSystemInformation.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpVWH41k.yaml -p=/project/git /project/git/Source/kwsys/RegularExpression.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpPBvPsi.yaml -p=/project/git /project/git/Utilities/cmlibrhash/librhash/sha1.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpct9nCf.yaml -p=/project/git /project/git/Utilities/cmzlib/adler32.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmptJFx7m.yaml -p=/project/git /project/git/Utilities/cmzlib/compress.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpMMcqmd.yaml -p=/project/git /project/git/Utilities/cmlibrhash/librhash/rhash.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmp6tAiFy.yaml -p=/project/git /project/git/Utilities/cmlibrhash/librhash/hex.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpVFTFAQ.yaml -p=/project/git /project/git/Utilities/cmzlib/crc32.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpPJEvcT.yaml -p=/project/git /project/git/Utilities/cmlibrhash/librhash/sha512.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpixWzFa.yaml -p=/project/git /project/git/Utilities/cmzlib/inftrees.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpIDtQ4T.yaml -p=/project/git /project/git/Utilities/cmlibrhash/librhash/md5.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpH7QwTj.yaml -p=/project/git /project/git/Utilities/cmzlib/uncompr.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmp0xa56e.yaml -p=/project/git /project/git/Utilities/cmzlib/zutil.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpbPzXuw.yaml -p=/project/git /project/git/Utilities/cmcurl/curltest.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmp3pfFKJ.yaml -p=/project/git /project/git/Utilities/cmlibrhash/librhash/sha3.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpI2z5Lc.yaml -p=/project/git /project/git/Utilities/cmlibrhash/librhash/sha256.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpdWov4F.yaml -p=/project/git /project/git/Utilities/cmcurl/lib/timeval.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpK1r3UP.yaml -p=/project/git /project/git/Utilities/cmcurl/lib/base64.c
/project/git/Utilities/cmcurl/lib/urldata.h:1209:8: warning: Excessive padding in 'struct UrlState' (61 padding bytes, where 5 is optimal). 
Optimal fields order: 
conn_cache, 
lastconnect, 
headerbuff, 
headersize, 
buffer, 
ulbuf, 
current_speed, 
first_host, 
session, 
sessionage, 
scratch, 
prev_signal, 
resolver, 
most_recent_ftp_entrypath, 
crlf_conversions, 
pathbuffer, 
path, 
range, 
resume_from, 
rtsp_next_client_CSeq, 
rtsp_next_server_CSeq, 
rtsp_CSeq_recv, 
infilesize, 
drain, 
fread_func, 
in, 
stream_depends_on, 
keeps_speed, 
expiretime, 
authhost, 
authproxy, 
timeoutlist, 
timenode, 
digest, 
proxydigest, 
tempwrite, 
expires, 
first_remote_port, 
tempcount, 
os_errno, 
httpversion, 
stream_weight, 
multi_owned_by_easy, 
this_is_a_follow, 
refused_stream, 
errorbuf, 
allow_port, 
authproblem, 
ftp_trying_alternative, 
wildcardmatch, 
expect100header, 
prev_block_had_trailing_cr, 
slash_removed, 
use_range, 
rangestringalloc, 
done, 
stream_depends_e, 
consider reordering the fields or adding explicit padding members [clang-analyzer-optin.performance.Padding]
struct UrlState {
       ^
/project/git/Utilities/cmcurl/lib/urldata.h:1209:8: note: Excessive padding in 'struct UrlState' (61 padding bytes, where 5 is optimal). Optimal fields order: conn_cache, lastconnect, headerbuff, headersize, buffer, ulbuf, current_speed, first_host, session, sessionage, scratch, prev_signal, resolver, most_recent_ftp_entrypath, crlf_conversions, pathbuffer, path, range, resume_from, rtsp_next_client_CSeq, rtsp_next_server_CSeq, rtsp_CSeq_recv, infilesize, drain, fread_func, in, stream_depends_on, keeps_speed, expiretime, authhost, authproxy, timeoutlist, timenode, digest, proxydigest, tempwrite, expires, first_remote_port, tempcount, os_errno, httpversion, stream_weight, multi_owned_by_easy, this_is_a_follow, refused_stream, errorbuf, allow_port, authproblem, ftp_trying_alternative, wildcardmatch, expect100header, prev_block_had_trailing_cr, slash_removed, use_range, rangestringalloc, done, stream_depends_e, consider reordering the fields or adding explicit padding members
/project/git/Utilities/cmcurl/lib/urldata.h:1457:8: warning: Excessive padding in 'struct UserDefined' (120 padding bytes, where 0 is optimal). 
Optimal fields order: 
err, 
debugdata, 
errorbuffer, 
proxyport, 
out, 
in_set, 
writeheader, 
rtp_out, 
use_port, 
httpauth, 
proxyauth, 
socks5auth, 
followlocation, 
maxredirs, 
postfields, 
seek_func, 
postfieldsize, 
fwrite_func, 
fwrite_header, 
fwrite_rtp, 
fread_func_set, 
fprogress, 
fxferinfo, 
fdebug, 
ioctl_func, 
fsockopt, 
sockopt_client, 
fopensocket, 
opensocket_client, 
fclosesocket, 
closesocket_client, 
seek_client, 
convfromnetwork, 
convtonetwork, 
convfromutf8, 
progress_client, 
ioctl_client, 
timeout, 
connecttimeout, 
accepttimeout, 
happy_eyeballs_timeout, 
server_response_timeout, 
tftp_blksize, 
filesize, 
low_speed_limit, 
low_speed_time, 
max_send_speed, 
max_recv_speed, 
set_resume_from, 
headers, 
proxyheaders, 
httppost, 
quote, 
postquote, 
prequote, 
source_quote, 
source_prequote, 
source_postquote, 
telnet_options, 
resolve, 
connect_to, 
timevalue, 
httpversion, 
general_ssl, 
dns_cache_timeout, 
buffer_size, 
upload_buffer_size, 
private_data, 
http200aliases, 
ipver, 
max_filesize, 
ssh_keyfunc, 
ssh_keyfunc_userp, 
ssh_auth_types, 
new_file_perms, 
new_directory_perms, 
allowed_protocols, 
redir_protocols, 
mail_rcpt, 
rtspversion, 
chunk_bgn, 
chunk_end, 
fnmatch, 
fnmatch_data, 
gssapi_delegation, 
tcp_keepidle, 
tcp_keepintvl, 
maxconnects, 
expect_100_timeout, 
stream_depends_on, 
stream_dependents, 
resolver_start, 
resolver_start_client, 
ssl, 
proxy_ssl, 
mimepost, 
str, 
keep_post, 
localportrange, 
is_fread_set, 
is_fwrite_set, 
timecondition, 
httpreq, 
proxytype, 
ftp_filemethod, 
ftp_create_missing_dirs, 
use_netrc, 
use_ssl, 
ftpsslauth, 
ftp_ccc, 
scope_id, 
rtspreq, 
stream_weight, 
localport, 
free_referer, 
tftp_no_options, 
sep_headers, 
cookiesession, 
crlf, 
strip_path_slash, 
ssh_compression, 
get_filetime, 
tunnel_thru_httpproxy, 
prefer_ascii, 
ftp_append, 
ftp_list_only, 
ftp_use_port, 
hide_progress, 
http_fail_on_error, 
http_keep_sending_on_error, 
http_follow_location, 
http_transfer_encoding, 
allow_auth_to_other_hosts, 
include_header, 
http_set_referer, 
http_auto_referer, 
opt_no_body, 
upload, 
2 warnings generated.

verbose, 
krb, 
reuse_forbid, 
reuse_fresh, 
ftp_use_epsv, 
ftp_use_eprt, 
ftp_use_pret, 
no_signal, 
global_dns_cache, 
tcp_nodelay, 
ignorecl, 
ftp_skip_ip, 
connect_only, 
http_te_skip, 
http_ce_skip, 
proxy_transfer_mode, 
sasl_ir, 
wildcard_enabled, 
tcp_keepalive, 
tcp_fastopen, 
ssl_enable_npn, 
ssl_enable_alpn, 
path_as_is, 
pipewait, 
suppress_connect_headers, 
dns_shuffle_addresses, 
stream_depends_e, 
haproxyprotocol, 
abstract_unix_socket, 
disallow_username_in_url, 
consider reordering the fields or adding explicit padding members [clang-analyzer-optin.performance.Padding]
struct UserDefined {
       ^
/project/git/Utilities/cmcurl/lib/urldata.h:1457:8: note: Excessive padding in 'struct UserDefined' (120 padding bytes, where 0 is optimal). Optimal fields order: err, debugdata, errorbuffer, proxyport, out, in_set, writeheader, rtp_out, use_port, httpauth, proxyauth, socks5auth, followlocation, maxredirs, postfields, seek_func, postfieldsize, fwrite_func, fwrite_header, fwrite_rtp, fread_func_set, fprogress, fxferinfo, fdebug, ioctl_func, fsockopt, sockopt_client, fopensocket, opensocket_client, fclosesocket, closesocket_client, seek_client, convfromnetwork, convtonetwork, convfromutf8, progress_client, ioctl_client, timeout, connecttimeout, accepttimeout, happy_eyeballs_timeout, server_response_timeout, tftp_blksize, filesize, low_speed_limit, low_speed_time, max_send_speed, max_recv_speed, set_resume_from, headers, proxyheaders, httppost, quote, postquote, prequote, source_quote, source_prequote, source_postquote, telnet_options, resolve, connect_to, timevalue, httpversion, general_ssl, dns_cache_timeout, buffer_size, upload_buffer_size, private_data, http200aliases, ipver, max_filesize, ssh_keyfunc, ssh_keyfunc_userp, ssh_auth_types, new_file_perms, new_directory_perms, allowed_protocols, redir_protocols, mail_rcpt, rtspversion, chunk_bgn, chunk_end, fnmatch, fnmatch_data, gssapi_delegation, tcp_keepidle, tcp_keepintvl, maxconnects, expect_100_timeout, stream_depends_on, stream_dependents, resolver_start, resolver_start_client, ssl, proxy_ssl, mimepost, str, keep_post, localportrange, is_fread_set, is_fwrite_set, timecondition, httpreq, proxytype, ftp_filemethod, ftp_create_missing_dirs, use_netrc, use_ssl, ftpsslauth, ftp_ccc, scope_id, rtspreq, stream_weight, localport, free_referer, tftp_no_options, sep_headers, cookiesession, crlf, strip_path_slash, ssh_compression, get_filetime, tunnel_thru_httpproxy, prefer_ascii, ftp_append, ftp_list_only, ftp_use_port, hide_progress, http_fail_on_error, http_keep_sending_on_error, http_follow_location, http_transfer_encoding, allow_auth_to_other_hosts, include_header, http_set_referer, http_auto_referer, opt_no_body, upload, verbose, krb, reuse_forbid, reuse_fresh, ftp_use_epsv, ftp_use_eprt, ftp_use_pret, no_signal, global_dns_cache, tcp_nodelay, ignorecl, ftp_skip_ip, connect_only, http_te_skip, http_ce_skip, proxy_transfer_mode, sasl_ir, wildcard_enabled, tcp_keepalive, tcp_fastopen, ssl_enable_npn, ssl_enable_alpn, path_as_is, pipewait, suppress_connect_headers, dns_shuffle_addresses, stream_depends_e, haproxyprotocol, abstract_unix_socket, disallow_username_in_url, consider reordering the fields or adding explicit padding members

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpNNWfux.yaml -p=/project/git /project/git/Utilities/cmcurl/lib/file.c
/project/git/Utilities/cmcurl/lib/urldata.h:1209:8: warning: Excessive padding in 'struct UrlState' (61 padding bytes, where 5 is optimal). 
Optimal fields order: 
conn_cache, 
lastconnect, 
headerbuff, 
headersize, 
buffer, 
ulbuf, 
current_speed, 
first_host, 
session, 
sessionage, 
scratch, 
prev_signal, 
resolver, 
most_recent_ftp_entrypath, 
crlf_conversions, 
pathbuffer, 
path, 
range, 
resume_from, 
rtsp_next_client_CSeq, 
rtsp_next_server_CSeq, 
rtsp_CSeq_recv, 
infilesize, 
drain, 
fread_func, 
in, 
stream_depends_on, 
keeps_speed, 
expiretime, 
authhost, 
authproxy, 
timeoutlist, 
timenode, 
digest, 
proxydigest, 
tempwrite, 
expires, 
first_remote_port, 
tempcount, 
os_errno, 
httpversion, 
stream_weight, 
multi_owned_by_easy, 
this_is_a_follow, 
refused_stream, 
errorbuf, 
allow_port, 
authproblem, 
ftp_trying_alternative, 
wildcardmatch, 
expect100header, 
prev_block_had_trailing_cr, 
slash_removed, 
use_range, 
rangestringalloc, 
done, 
stream_depends_e, 
consider reordering the fields or adding explicit padding members [clang-analyzer-optin.performance.Padding]
struct UrlState {
       ^
/project/git/Utilities/cmcurl/lib/urldata.h:1209:8: note: Excessive padding in 'struct UrlState' (61 padding bytes, where 5 is optimal). Optimal fields order: conn_cache, lastconnect, headerbuff, headersize, buffer, ulbuf, current_speed, first_host, session, sessionage, scratch, prev_signal, resolver, most_recent_ftp_entrypath, crlf_conversions, pathbuffer, path, range, resume_from, rtsp_next_client_CSeq, rtsp_next_server_CSeq, rtsp_CSeq_recv, infilesize, drain, fread_func, in, stream_depends_on, keeps_speed, expiretime, authhost, authproxy, timeoutlist, timenode, digest, proxydigest, tempwrite, expires, first_remote_port, tempcount, os_errno, httpversion, stream_weight, multi_owned_by_easy, this_is_a_follow, refused_stream, errorbuf, allow_port, authproblem, ftp_trying_alternative, wildcardmatch, expect100header, prev_block_had_trailing_cr, slash_removed, use_range, rangestringalloc, done, stream_depends_e, consider reordering the fields or adding explicit padding members
/project/git/Utilities/cmcurl/lib/urldata.h:1457:8: warning: Excessive padding in 'struct UserDefined' (120 padding bytes, where 0 is optimal). 
Optimal fields order: 
err, 
debugdata, 
errorbuffer, 
proxyport, 
out, 
in_set, 
writeheader, 
rtp_out, 
use_port, 
httpauth, 
proxyauth, 
socks5auth, 
followlocation, 
maxredirs, 
postfields, 
seek_func, 
postfieldsize, 
fwrite_func, 
fwrite_header, 
fwrite_rtp, 
fread_func_set, 
fprogress, 
fxferinfo, 
fdebug, 
ioctl_func, 
fsockopt, 
sockopt_client, 
fopensocket, 
opensocket_client, 
fclosesocket, 
closesocket_client, 
seek_client, 
convfromnetwork, 
convtonetwork, 
convfromutf8, 
progress_client, 
ioctl_client, 
timeout, 
connecttimeout, 
accepttimeout, 
happy_eyeballs_timeout, 
server_response_timeout, 
tftp_blksize, 
filesize, 
low_speed_limit, 
low_speed_time, 
max_send_speed, 
max_recv_speed, 
set_resume_from, 
headers, 
proxyheaders, 
httppost, 
quote, 
postquote, 
prequote, 
source_quote, 
source_prequote, 
source_postquote, 
telnet_options, 
resolve, 
connect_to, 
timevalue, 
httpversion, 
general_ssl, 
dns_cache_timeout, 
buffer_size, 
upload_buffer_size, 
private_data, 
http200aliases, 
ipver, 
max_filesize, 
ssh_keyfunc, 
ssh_keyfunc_userp, 
ssh_auth_types, 
new_file_perms, 
new_directory_perms, 
allowed_protocols, 
redir_protocols, 
mail_rcpt, 
rtspversion, 
chunk_bgn, 
chunk_end, 
fnmatch, 
fnmatch_data, 
gssapi_delegation, 
tcp_keepidle, 
tcp_keepintvl, 
maxconnects, 
expect_100_timeout, 
stream_depends_on, 
stream_dependents, 
resolver_start, 
resolver_start_client, 
ssl, 
proxy_ssl, 
mimepost, 
str, 
keep_post, 
localportrange, 
is_fread_set, 
is_fwrite_set, 
timecondition, 
httpreq, 
proxytype, 
ftp_filemethod, 
ftp_create_missing_dirs, 
use_netrc, 
use_ssl, 
ftpsslauth, 
ftp_ccc, 
scope_id, 
rtspreq, 
stream_weight, 
localport, 
free_referer, 
tftp_no_options, 
sep_headers, 
cookiesession, 
crlf, 
strip_path_slash, 
ssh_compression, 
get_filetime, 
tunnel_thru_httpproxy, 
prefer_ascii, 
ftp_append, 
ftp_list_only, 
ftp_use_port, 
hide_progress, 
http_fail_on_error, 
http_keep_sending_on_error, 
http_follow_location, 
http_transfer_encoding, 
allow_auth_to_other_hosts, 
include_header, 
http_set_referer, 
http_auto_referer, 
opt_no_body, 
upload, 
verbose, 
krb, 
reuse_forbid, 
reuse_fresh, 
ftp_use_epsv, 
ftp_use_eprt, 
ftp_use_pret, 
no_signal, 
global_dns_cache, 
tcp_nodelay, 
ignorecl, 
ftp_skip_ip, 
connect_only, 
http_te_skip, 
http_ce_skip, 
proxy_transfer_mode, 
sasl_ir, 
wildcard_enabled, 
tcp_keepalive, 
tcp_fastopen, 
ssl_enable_npn, 
ssl_enable_alpn, 
path_as_is, 
pipewait, 
suppress_connect_headers, 
dns_shuffle_addresses, 
stream_depends_e, 
2 warnings generated.

haproxyprotocol, 
abstract_unix_socket, 
disallow_username_in_url, 
consider reordering the fields or adding explicit padding members [clang-analyzer-optin.performance.Padding]
struct UserDefined {
       ^
/project/git/Utilities/cmcurl/lib/urldata.h:1457:8: note: Excessive padding in 'struct UserDefined' (120 padding bytes, where 0 is optimal). Optimal fields order: err, debugdata, errorbuffer, proxyport, out, in_set, writeheader, rtp_out, use_port, httpauth, proxyauth, socks5auth, followlocation, maxredirs, postfields, seek_func, postfieldsize, fwrite_func, fwrite_header, fwrite_rtp, fread_func_set, fprogress, fxferinfo, fdebug, ioctl_func, fsockopt, sockopt_client, fopensocket, opensocket_client, fclosesocket, closesocket_client, seek_client, convfromnetwork, convtonetwork, convfromutf8, progress_client, ioctl_client, timeout, connecttimeout, accepttimeout, happy_eyeballs_timeout, server_response_timeout, tftp_blksize, filesize, low_speed_limit, low_speed_time, max_send_speed, max_recv_speed, set_resume_from, headers, proxyheaders, httppost, quote, postquote, prequote, source_quote, source_prequote, source_postquote, telnet_options, resolve, connect_to, timevalue, httpversion, general_ssl, dns_cache_timeout, buffer_size, upload_buffer_size, private_data, http200aliases, ipver, max_filesize, ssh_keyfunc, ssh_keyfunc_userp, ssh_auth_types, new_file_perms, new_directory_perms, allowed_protocols, redir_protocols, mail_rcpt, rtspversion, chunk_bgn, chunk_end, fnmatch, fnmatch_data, gssapi_delegation, tcp_keepidle, tcp_keepintvl, maxconnects, expect_100_timeout, stream_depends_on, stream_dependents, resolver_start, resolver_start_client, ssl, proxy_ssl, mimepost, str, keep_post, localportrange, is_fread_set, is_fwrite_set, timecondition, httpreq, proxytype, ftp_filemethod, ftp_create_missing_dirs, use_netrc, use_ssl, ftpsslauth, ftp_ccc, scope_id, rtspreq, stream_weight, localport, free_referer, tftp_no_options, sep_headers, cookiesession, crlf, strip_path_slash, ssh_compression, get_filetime, tunnel_thru_httpproxy, prefer_ascii, ftp_append, ftp_list_only, ftp_use_port, hide_progress, http_fail_on_error, http_keep_sending_on_error, http_follow_location, http_transfer_encoding, allow_auth_to_other_hosts, include_header, http_set_referer, http_auto_referer, opt_no_body, upload, verbose, krb, reuse_forbid, reuse_fresh, ftp_use_epsv, ftp_use_eprt, ftp_use_pret, no_signal, global_dns_cache, tcp_nodelay, ignorecl, ftp_skip_ip, connect_only, http_te_skip, http_ce_skip, proxy_transfer_mode, sasl_ir, wildcard_enabled, tcp_keepalive, tcp_fastopen, ssl_enable_npn, ssl_enable_alpn, path_as_is, pipewait, suppress_connect_headers, dns_shuffle_addresses, stream_depends_e, haproxyprotocol, abstract_unix_socket, disallow_username_in_url, consider reordering the fields or adding explicit padding members

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpf7w81J.yaml -p=/project/git /project/git/Source/kwsys/CommandLineArguments.cxx
/project/git/Source/kwsys/CommandLineArguments.cxx:286:3: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
  strcpy(args[0], this->Internals->Argv0.c_str());
  ^
/project/git/Source/kwsys/CommandLineArguments.cxx:286:3: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
/project/git/Source/kwsys/CommandLineArguments.cxx:293:5: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
    strcpy(args[cnt], this->Internals->Argv[cc].c_str());
    ^
6 warnings generated.

3 warnings generated.

/project/git/Source/kwsys/CommandLineArguments.cxx:293:5: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
/project/git/Source/kwsys/CommandLineArguments.cxx:309:3: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
  strcpy(args[0], this->Internals->Argv0.c_str());
  ^
/project/git/Source/kwsys/CommandLineArguments.cxx:309:3: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
/project/git/Source/kwsys/CommandLineArguments.cxx:316:5: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
    strcpy(args[cnt], str.c_str());
    ^
/project/git/Source/kwsys/CommandLineArguments.cxx:316:5: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
/project/git/Source/kwsys/CommandLineArguments.cxx:648:3: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
  strcpy(*variable, value.c_str());
  ^
/project/git/Source/kwsys/CommandLineArguments.cxx:648:3: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
/project/git/Source/kwsys/CommandLineArguments.cxx:695:3: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
  strcpy(var, value.c_str());
  ^
/project/git/Source/kwsys/CommandLineArguments.cxx:695:3: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpX7GKr4.yaml -p=/project/git /project/git/Utilities/cmzlib/inffast.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpw1SlS8.yaml -p=/project/git /project/git/Utilities/cmcurl/lib/progress.c
/project/git/Utilities/cmcurl/lib/progress.c:40:5: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
    strcpy(r, "--:--:--");
    ^
/project/git/Utilities/cmcurl/lib/progress.c:40:5: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
/project/git/Utilities/cmcurl/lib/urldata.h:1209:8: warning: Excessive padding in 'struct UrlState' (61 padding bytes, where 5 is optimal). 
Optimal fields order: 
conn_cache, 
lastconnect, 
headerbuff, 
headersize, 
buffer, 
ulbuf, 
current_speed, 
first_host, 
session, 
sessionage, 
scratch, 
prev_signal, 
resolver, 
most_recent_ftp_entrypath, 
crlf_conversions, 
pathbuffer, 
path, 
range, 
resume_from, 
rtsp_next_client_CSeq, 
rtsp_next_server_CSeq, 
rtsp_CSeq_recv, 
infilesize, 
drain, 
fread_func, 
in, 
stream_depends_on, 
keeps_speed, 
expiretime, 
authhost, 
authproxy, 
timeoutlist, 
timenode, 
digest, 
proxydigest, 
tempwrite, 
expires, 
first_remote_port, 
tempcount, 
os_errno, 
httpversion, 
stream_weight, 
multi_owned_by_easy, 
this_is_a_follow, 
refused_stream, 
errorbuf, 
allow_port, 
authproblem, 
ftp_trying_alternative, 
wildcardmatch, 
expect100header, 
prev_block_had_trailing_cr, 
slash_removed, 
use_range, 
rangestringalloc, 
done, 
stream_depends_e, 
consider reordering the fields or adding explicit padding members [clang-analyzer-optin.performance.Padding]
struct UrlState {
       ^
/project/git/Utilities/cmcurl/lib/urldata.h:1209:8: note: Excessive padding in 'struct UrlState' (61 padding bytes, where 5 is optimal). Optimal fields order: conn_cache, lastconnect, headerbuff, headersize, buffer, ulbuf, current_speed, first_host, session, sessionage, scratch, prev_signal, resolver, most_recent_ftp_entrypath, crlf_conversions, pathbuffer, path, range, resume_from, rtsp_next_client_CSeq, rtsp_next_server_CSeq, rtsp_CSeq_recv, infilesize, drain, fread_func, in, stream_depends_on, keeps_speed, expiretime, authhost, authproxy, timeoutlist, timenode, digest, proxydigest, tempwrite, expires, first_remote_port, tempcount, os_errno, httpversion, stream_weight, multi_owned_by_easy, this_is_a_follow, refused_stream, errorbuf, allow_port, authproblem, ftp_trying_alternative, wildcardmatch, expect100header, prev_block_had_trailing_cr, slash_removed, use_range, rangestringalloc, done, stream_depends_e, consider reordering the fields or adding explicit padding members
/project/git/Utilities/cmcurl/lib/urldata.h:1457:8: warning: Excessive padding in 'struct UserDefined' (120 padding bytes, where 0 is optimal). 
Optimal fields order: 
err, 
debugdata, 
errorbuffer, 
proxyport, 
out, 
in_set, 
writeheader, 
rtp_out, 
use_port, 
httpauth, 
proxyauth, 
socks5auth, 
followlocation, 
maxredirs, 
postfields, 
seek_func, 
postfieldsize, 
fwrite_func, 
fwrite_header, 
fwrite_rtp, 
fread_func_set, 
fprogress, 
fxferinfo, 
fdebug, 
ioctl_func, 
fsockopt, 
sockopt_client, 
fopensocket, 
opensocket_client, 
fclosesocket, 
closesocket_client, 
seek_client, 
convfromnetwork, 
convtonetwork, 
convfromutf8, 
progress_client, 
ioctl_client, 
timeout, 
connecttimeout, 
accepttimeout, 
happy_eyeballs_timeout, 
server_response_timeout, 
tftp_blksize, 
filesize, 
low_speed_limit, 
low_speed_time, 
max_send_speed, 
max_recv_speed, 
set_resume_from, 
headers, 
proxyheaders, 
httppost, 
quote, 
postquote, 
prequote, 
source_quote, 
source_prequote, 
source_postquote, 
telnet_options, 
resolve, 
connect_to, 
timevalue, 
httpversion, 
general_ssl, 
dns_cache_timeout, 
buffer_size, 
upload_buffer_size, 
private_data, 
http200aliases, 
ipver, 
max_filesize, 
ssh_keyfunc, 
ssh_keyfunc_userp, 
ssh_auth_types, 
new_file_perms, 
new_directory_perms, 
allowed_protocols, 
redir_protocols, 
mail_rcpt, 
rtspversion, 
chunk_bgn, 
chunk_end, 
fnmatch, 
fnmatch_data, 
gssapi_delegation, 
tcp_keepidle, 
tcp_keepintvl, 
maxconnects, 
expect_100_timeout, 
stream_depends_on, 
stream_dependents, 
resolver_start, 
resolver_start_client, 
ssl, 
proxy_ssl, 
mimepost, 
str, 
keep_post, 
localportrange, 
is_fread_set, 
is_fwrite_set, 
timecondition, 
httpreq, 
proxytype, 
ftp_filemethod, 
ftp_create_missing_dirs, 
use_netrc, 
use_ssl, 
ftpsslauth, 
ftp_ccc, 
scope_id, 
rtspreq, 
stream_weight, 
localport, 
free_referer, 
tftp_no_options, 
sep_headers, 
cookiesession, 
crlf, 
strip_path_slash, 
ssh_compression, 
get_filetime, 
tunnel_thru_httpproxy, 
prefer_ascii, 
ftp_append, 
ftp_list_only, 
ftp_use_port, 
hide_progress, 
http_fail_on_error, 
http_keep_sending_on_error, 
http_follow_location, 
http_transfer_encoding, 
allow_auth_to_other_hosts, 
include_header, 
http_set_referer, 
http_auto_referer, 
opt_no_body, 
upload, 
verbose, 
krb, 
reuse_forbid, 
reuse_fresh, 
ftp_use_epsv, 
ftp_use_eprt, 
ftp_use_pret, 
no_signal, 
global_dns_cache, 
2 warnings generated.

tcp_nodelay, 
ignorecl, 
ftp_skip_ip, 
connect_only, 
http_te_skip, 
http_ce_skip, 
proxy_transfer_mode, 
sasl_ir, 
wildcard_enabled, 
tcp_keepalive, 
tcp_fastopen, 
ssl_enable_npn, 
ssl_enable_alpn, 
path_as_is, 
pipewait, 
suppress_connect_headers, 
dns_shuffle_addresses, 
stream_depends_e, 
haproxyprotocol, 
abstract_unix_socket, 
disallow_username_in_url, 
consider reordering the fields or adding explicit padding members [clang-analyzer-optin.performance.Padding]
struct UserDefined {
       ^
/project/git/Utilities/cmcurl/lib/urldata.h:1457:8: note: Excessive padding in 'struct UserDefined' (120 padding bytes, where 0 is optimal). Optimal fields order: err, debugdata, errorbuffer, proxyport, out, in_set, writeheader, rtp_out, use_port, httpauth, proxyauth, socks5auth, followlocation, maxredirs, postfields, seek_func, postfieldsize, fwrite_func, fwrite_header, fwrite_rtp, fread_func_set, fprogress, fxferinfo, fdebug, ioctl_func, fsockopt, sockopt_client, fopensocket, opensocket_client, fclosesocket, closesocket_client, seek_client, convfromnetwork, convtonetwork, convfromutf8, progress_client, ioctl_client, timeout, connecttimeout, accepttimeout, happy_eyeballs_timeout, server_response_timeout, tftp_blksize, filesize, low_speed_limit, low_speed_time, max_send_speed, max_recv_speed, set_resume_from, headers, proxyheaders, httppost, quote, postquote, prequote, source_quote, source_prequote, source_postquote, telnet_options, resolve, connect_to, timevalue, httpversion, general_ssl, dns_cache_timeout, buffer_size, upload_buffer_size, private_data, http200aliases, ipver, max_filesize, ssh_keyfunc, ssh_keyfunc_userp, ssh_auth_types, new_file_perms, new_directory_perms, allowed_protocols, redir_protocols, mail_rcpt, rtspversion, chunk_bgn, chunk_end, fnmatch, fnmatch_data, gssapi_delegation, tcp_keepidle, tcp_keepintvl, maxconnects, expect_100_timeout, stream_depends_on, stream_dependents, resolver_start, resolver_start_client, ssl, proxy_ssl, mimepost, str, keep_post, localportrange, is_fread_set, is_fwrite_set, timecondition, httpreq, proxytype, ftp_filemethod, ftp_create_missing_dirs, use_netrc, use_ssl, ftpsslauth, ftp_ccc, scope_id, rtspreq, stream_weight, localport, free_referer, tftp_no_options, sep_headers, cookiesession, crlf, strip_path_slash, ssh_compression, get_filetime, tunnel_thru_httpproxy, prefer_ascii, ftp_append, ftp_list_only, ftp_use_port, hide_progress, http_fail_on_error, http_keep_sending_on_error, http_follow_location, http_transfer_encoding, allow_auth_to_other_hosts, include_header, http_set_referer, http_auto_referer, opt_no_body, upload, verbose, krb, reuse_forbid, reuse_fresh, ftp_use_epsv, ftp_use_eprt, ftp_use_pret, no_signal, global_dns_cache, tcp_nodelay, ignorecl, ftp_skip_ip, connect_only, http_te_skip, http_ce_skip, proxy_transfer_mode, sasl_ir, wildcard_enabled, tcp_keepalive, tcp_fastopen, ssl_enable_npn, ssl_enable_alpn, path_as_is, pipewait, suppress_connect_headers, dns_shuffle_addresses, stream_depends_e, haproxyprotocol, abstract_unix_socket, disallow_username_in_url, consider reordering the fields or adding explicit padding members

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmp7Hxwuw.yaml -p=/project/git /project/git/Utilities/cmzlib/trees.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpWaZT64.yaml -p=/project/git /project/git/Utilities/cmcurl/lib/hostip.c
/project/git/Utilities/cmcurl/lib/urldata.h:1209:8: warning: Excessive padding in 'struct UrlState' (61 padding bytes, where 5 is optimal). 
Optimal fields order: 
conn_cache, 
lastconnect, 
headerbuff, 
headersize, 
buffer, 
ulbuf, 
current_speed, 
first_host, 
session, 
sessionage, 
scratch, 
prev_signal, 
resolver, 
most_recent_ftp_entrypath, 
crlf_conversions, 
pathbuffer, 
path, 
range, 
resume_from, 
rtsp_next_client_CSeq, 
rtsp_next_server_CSeq, 
rtsp_CSeq_recv, 
infilesize, 
drain, 
fread_func, 
in, 
stream_depends_on, 
keeps_speed, 
expiretime, 
authhost, 
authproxy, 
timeoutlist, 
timenode, 
digest, 
proxydigest, 
tempwrite, 
expires, 
first_remote_port, 
tempcount, 
os_errno, 
httpversion, 
stream_weight, 
multi_owned_by_easy, 
this_is_a_follow, 
refused_stream, 
errorbuf, 
allow_port, 
authproblem, 
ftp_trying_alternative, 
wildcardmatch, 
expect100header, 
prev_block_had_trailing_cr, 
slash_removed, 
use_range, 
rangestringalloc, 
done, 
stream_depends_e, 
consider reordering the fields or adding explicit padding members [clang-analyzer-optin.performance.Padding]
struct UrlState {
       ^
/project/git/Utilities/cmcurl/lib/urldata.h:1209:8: note: Excessive padding in 'struct UrlState' (61 padding bytes, where 5 is optimal). Optimal fields order: conn_cache, lastconnect, headerbuff, headersize, buffer, ulbuf, current_speed, first_host, session, sessionage, scratch, prev_signal, resolver, most_recent_ftp_entrypath, crlf_conversions, pathbuffer, path, range, resume_from, rtsp_next_client_CSeq, rtsp_next_server_CSeq, rtsp_CSeq_recv, infilesize, drain, fread_func, in, stream_depends_on, keeps_speed, expiretime, authhost, authproxy, timeoutlist, timenode, digest, proxydigest, tempwrite, expires, first_remote_port, tempcount, os_errno, httpversion, stream_weight, multi_owned_by_easy, this_is_a_follow, refused_stream, errorbuf, allow_port, authproblem, ftp_trying_alternative, wildcardmatch, expect100header, prev_block_had_trailing_cr, slash_removed, use_range, rangestringalloc, done, stream_depends_e, consider reordering the fields or adding explicit padding members
/project/git/Utilities/cmcurl/lib/urldata.h:1457:8: warning: Excessive padding in 'struct UserDefined' (120 padding bytes, where 0 is optimal). 
Optimal fields order: 
err, 
debugdata, 
errorbuffer, 
proxyport, 
out, 
in_set, 
writeheader, 
rtp_out, 
use_port, 
httpauth, 
proxyauth, 
socks5auth, 
followlocation, 
maxredirs, 
postfields, 
seek_func, 
postfieldsize, 
fwrite_func, 
fwrite_header, 
fwrite_rtp, 
fread_func_set, 
fprogress, 
fxferinfo, 
fdebug, 
ioctl_func, 
fsockopt, 
sockopt_client, 
fopensocket, 
opensocket_client, 
fclosesocket, 
closesocket_client, 
seek_client, 
convfromnetwork, 
convtonetwork, 
convfromutf8, 
progress_client, 
ioctl_client, 
timeout, 
connecttimeout, 
accepttimeout, 
happy_eyeballs_timeout, 
server_response_timeout, 
tftp_blksize, 
filesize, 
low_speed_limit, 
low_speed_time, 
max_send_speed, 
max_recv_speed, 
set_resume_from, 
headers, 
proxyheaders, 
httppost, 
quote, 
postquote, 
prequote, 
source_quote, 
source_prequote, 
source_postquote, 
telnet_options, 
resolve, 
connect_to, 
timevalue, 
httpversion, 
general_ssl, 
dns_cache_timeout, 
buffer_size, 
upload_buffer_size, 
private_data, 
http200aliases, 
ipver, 
max_filesize, 
ssh_keyfunc, 
ssh_keyfunc_userp, 
ssh_auth_types, 
new_file_perms, 
new_directory_perms, 
allowed_protocols, 
redir_protocols, 
mail_rcpt, 
rtspversion, 
chunk_bgn, 
chunk_end, 
fnmatch, 
fnmatch_data, 
gssapi_delegation, 
tcp_keepidle, 
tcp_keepintvl, 
maxconnects, 
expect_100_timeout, 
stream_depends_on, 
stream_dependents, 
resolver_start, 
resolver_start_client, 
ssl, 
proxy_ssl, 
mimepost, 
str, 
keep_post, 
localportrange, 
is_fread_set, 
is_fwrite_set, 
timecondition, 
httpreq, 
proxytype, 
ftp_filemethod, 
ftp_create_missing_dirs, 
use_netrc, 
use_ssl, 
ftpsslauth, 
ftp_ccc, 
scope_id, 
rtspreq, 
stream_weight, 
localport, 
free_referer, 
tftp_no_options, 
sep_headers, 
cookiesession, 
crlf, 
strip_path_slash, 
ssh_compression, 
get_filetime, 
tunnel_thru_httpproxy, 
prefer_ascii, 
ftp_append, 
ftp_list_only, 
ftp_use_port, 
hide_progress, 
http_fail_on_error, 
http_keep_sending_on_error, 
http_follow_location, 
http_transfer_encoding, 
allow_auth_to_other_hosts, 
include_header, 
http_set_referer, 
http_auto_referer, 
opt_no_body, 
upload, 
verbose, 
krb, 
reuse_forbid, 
reuse_fresh, 
ftp_use_epsv, 
ftp_use_eprt, 
ftp_use_pret, 
no_signal, 
global_dns_cache, 
tcp_nodelay, 
ignorecl, 
ftp_skip_ip, 
connect_only, 
http_te_skip, 
http_ce_skip, 
proxy_transfer_mode, 
sasl_ir, 
wildcard_enabled, 
tcp_keepalive, 
tcp_fastopen, 
ssl_enable_npn, 
ssl_enable_alpn, 
path_as_is, 
pipewait, 
2 warnings generated.

suppress_connect_headers, 
dns_shuffle_addresses, 
stream_depends_e, 
haproxyprotocol, 
abstract_unix_socket, 
disallow_username_in_url, 
consider reordering the fields or adding explicit padding members [clang-analyzer-optin.performance.Padding]
struct UserDefined {
       ^
/project/git/Utilities/cmcurl/lib/urldata.h:1457:8: note: Excessive padding in 'struct UserDefined' (120 padding bytes, where 0 is optimal). Optimal fields order: err, debugdata, errorbuffer, proxyport, out, in_set, writeheader, rtp_out, use_port, httpauth, proxyauth, socks5auth, followlocation, maxredirs, postfields, seek_func, postfieldsize, fwrite_func, fwrite_header, fwrite_rtp, fread_func_set, fprogress, fxferinfo, fdebug, ioctl_func, fsockopt, sockopt_client, fopensocket, opensocket_client, fclosesocket, closesocket_client, seek_client, convfromnetwork, convtonetwork, convfromutf8, progress_client, ioctl_client, timeout, connecttimeout, accepttimeout, happy_eyeballs_timeout, server_response_timeout, tftp_blksize, filesize, low_speed_limit, low_speed_time, max_send_speed, max_recv_speed, set_resume_from, headers, proxyheaders, httppost, quote, postquote, prequote, source_quote, source_prequote, source_postquote, telnet_options, resolve, connect_to, timevalue, httpversion, general_ssl, dns_cache_timeout, buffer_size, upload_buffer_size, private_data, http200aliases, ipver, max_filesize, ssh_keyfunc, ssh_keyfunc_userp, ssh_auth_types, new_file_perms, new_directory_perms, allowed_protocols, redir_protocols, mail_rcpt, rtspversion, chunk_bgn, chunk_end, fnmatch, fnmatch_data, gssapi_delegation, tcp_keepidle, tcp_keepintvl, maxconnects, expect_100_timeout, stream_depends_on, stream_dependents, resolver_start, resolver_start_client, ssl, proxy_ssl, mimepost, str, keep_post, localportrange, is_fread_set, is_fwrite_set, timecondition, httpreq, proxytype, ftp_filemethod, ftp_create_missing_dirs, use_netrc, use_ssl, ftpsslauth, ftp_ccc, scope_id, rtspreq, stream_weight, localport, free_referer, tftp_no_options, sep_headers, cookiesession, crlf, strip_path_slash, ssh_compression, get_filetime, tunnel_thru_httpproxy, prefer_ascii, ftp_append, ftp_list_only, ftp_use_port, hide_progress, http_fail_on_error, http_keep_sending_on_error, http_follow_location, http_transfer_encoding, allow_auth_to_other_hosts, include_header, http_set_referer, http_auto_referer, opt_no_body, upload, verbose, krb, reuse_forbid, reuse_fresh, ftp_use_epsv, ftp_use_eprt, ftp_use_pret, no_signal, global_dns_cache, tcp_nodelay, ignorecl, ftp_skip_ip, connect_only, http_te_skip, http_ce_skip, proxy_transfer_mode, sasl_ir, wildcard_enabled, tcp_keepalive, tcp_fastopen, ssl_enable_npn, ssl_enable_alpn, path_as_is, pipewait, suppress_connect_headers, dns_shuffle_addresses, stream_depends_e, haproxyprotocol, abstract_unix_socket, disallow_username_in_url, consider reordering the fields or adding explicit padding members

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmp2_VwPa.yaml -p=/project/git /project/git/Utilities/cmzlib/inflate.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpmbPUyS.yaml -p=/project/git /project/git/Utilities/cmcurl/lib/dict.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpWUaAkd.yaml -p=/project/git /project/git/Utilities/cmcurl/lib/if2ip.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpVM5gcf.yaml -p=/project/git /project/git/Utilities/cmcurl/lib/speedcheck.c
/project/git/Utilities/cmcurl/lib/urldata.h:1209:8: warning: Excessive padding in 'struct UrlState' (61 padding bytes, where 5 is optimal). 
Optimal fields order: 
conn_cache, 
lastconnect, 
headerbuff, 
headersize, 
buffer, 
ulbuf, 
current_speed, 
first_host, 
session, 
sessionage, 
scratch, 
prev_signal, 
resolver, 
most_recent_ftp_entrypath, 
crlf_conversions, 
pathbuffer, 
path, 
range, 
resume_from, 
rtsp_next_client_CSeq, 
rtsp_next_server_CSeq, 
rtsp_CSeq_recv, 
infilesize, 
drain, 
fread_func, 
in, 
stream_depends_on, 
keeps_speed, 
expiretime, 
authhost, 
authproxy, 
timeoutlist, 
timenode, 
digest, 
proxydigest, 
tempwrite, 
expires, 
first_remote_port, 
tempcount, 
os_errno, 
httpversion, 
stream_weight, 
multi_owned_by_easy, 
this_is_a_follow, 
refused_stream, 
errorbuf, 
allow_port, 
authproblem, 
ftp_trying_alternative, 
wildcardmatch, 
expect100header, 
prev_block_had_trailing_cr, 
slash_removed, 
use_range, 
rangestringalloc, 
done, 
stream_depends_e, 
consider reordering the fields or adding explicit padding members [clang-analyzer-optin.performance.Padding]
struct UrlState {
       ^
/project/git/Utilities/cmcurl/lib/urldata.h:1209:8: note: Excessive padding in 'struct UrlState' (61 padding bytes, where 5 is optimal). Optimal fields order: conn_cache, lastconnect, headerbuff, headersize, buffer, ulbuf, current_speed, first_host, session, sessionage, scratch, prev_signal, resolver, most_recent_ftp_entrypath, crlf_conversions, pathbuffer, path, range, resume_from, rtsp_next_client_CSeq, rtsp_next_server_CSeq, rtsp_CSeq_recv, infilesize, drain, fread_func, in, stream_depends_on, keeps_speed, expiretime, authhost, authproxy, timeoutlist, timenode, digest, proxydigest, tempwrite, expires, first_remote_port, tempcount, os_errno, httpversion, stream_weight, multi_owned_by_easy, this_is_a_follow, refused_stream, errorbuf, allow_port, authproblem, ftp_trying_alternative, wildcardmatch, expect100header, prev_block_had_trailing_cr, slash_removed, use_range, rangestringalloc, done, stream_depends_e, consider reordering the fields or adding explicit padding members
/project/git/Utilities/cmcurl/lib/urldata.h:1457:8: warning: Excessive padding in 'struct UserDefined' (120 padding bytes, where 0 is optimal). 
Optimal fields order: 
err, 
debugdata, 
errorbuffer, 
proxyport, 
out, 
in_set, 
writeheader, 
rtp_out, 
use_port, 
httpauth, 
proxyauth, 
socks5auth, 
followlocation, 
maxredirs, 
postfields, 
seek_func, 
postfieldsize, 
fwrite_func, 
fwrite_header, 
fwrite_rtp, 
fread_func_set, 
fprogress, 
fxferinfo, 
fdebug, 
ioctl_func, 
fsockopt, 
sockopt_client, 
fopensocket, 
opensocket_client, 
fclosesocket, 
closesocket_client, 
seek_client, 
convfromnetwork, 
convtonetwork, 
convfromutf8, 
progress_client, 
ioctl_client, 
timeout, 
connecttimeout, 
accepttimeout, 
happy_eyeballs_timeout, 
server_response_timeout, 
tftp_blksize, 
filesize, 
low_speed_limit, 
low_speed_time, 
max_send_speed, 
max_recv_speed, 
set_resume_from, 
headers, 
proxyheaders, 
httppost, 
quote, 
postquote, 
prequote, 
source_quote, 
source_prequote, 
source_postquote, 
telnet_options, 
resolve, 
connect_to, 
timevalue, 
httpversion, 
general_ssl, 
dns_cache_timeout, 
buffer_size, 
upload_buffer_size, 
private_data, 
http200aliases, 
ipver, 
max_filesize, 
ssh_keyfunc, 
ssh_keyfunc_userp, 
ssh_auth_types, 
new_file_perms, 
new_directory_perms, 
allowed_protocols, 
redir_protocols, 
mail_rcpt, 
rtspversion, 
chunk_bgn, 
chunk_end, 
fnmatch, 
fnmatch_data, 
gssapi_delegation, 
tcp_keepidle, 
tcp_keepintvl, 
maxconnects, 
expect_100_timeout, 
stream_depends_on, 
stream_dependents, 
resolver_start, 
resolver_start_client, 
ssl, 
proxy_ssl, 
mimepost, 
str, 
keep_post, 
localportrange, 
is_fread_set, 
is_fwrite_set, 
timecondition, 
httpreq, 
proxytype, 
ftp_filemethod, 
ftp_create_missing_dirs, 
use_netrc, 
use_ssl, 
ftpsslauth, 
ftp_ccc, 
scope_id, 
rtspreq, 
stream_weight, 
localport, 
free_referer, 
tftp_no_options, 
sep_headers, 
cookiesession, 
crlf, 
strip_path_slash, 
ssh_compression, 
get_filetime, 
tunnel_thru_httpproxy, 
prefer_ascii, 
ftp_append, 
ftp_list_only, 
ftp_use_port, 
hide_progress, 
http_fail_on_error, 
http_keep_sending_on_error, 
http_follow_location, 
http_transfer_encoding, 
allow_auth_to_other_hosts, 
include_header, 
http_set_referer, 
http_auto_referer, 
opt_no_body, 
upload, 
verbose, 
krb, 
reuse_forbid, 
reuse_fresh, 
ftp_use_epsv, 
ftp_use_eprt, 
ftp_use_pret, 
no_signal, 
global_dns_cache, 
tcp_nodelay, 
ignorecl, 
ftp_skip_ip, 
connect_only, 
http_te_skip, 
http_ce_skip, 
proxy_transfer_mode, 
sasl_ir, 
5 warnings generated.

wildcard_enabled, 
tcp_keepalive, 
tcp_fastopen, 
ssl_enable_npn, 
ssl_enable_alpn, 
path_as_is, 
pipewait, 
suppress_connect_headers, 
dns_shuffle_addresses, 
stream_depends_e, 
haproxyprotocol, 
abstract_unix_socket, 
disallow_username_in_url, 
consider reordering the fields or adding explicit padding members [clang-analyzer-optin.performance.Padding]
struct UserDefined {
       ^
/project/git/Utilities/cmcurl/lib/urldata.h:1457:8: note: Excessive padding in 'struct UserDefined' (120 padding bytes, where 0 is optimal). Optimal fields order: err, debugdata, errorbuffer, proxyport, out, in_set, writeheader, rtp_out, use_port, httpauth, proxyauth, socks5auth, followlocation, maxredirs, postfields, seek_func, postfieldsize, fwrite_func, fwrite_header, fwrite_rtp, fread_func_set, fprogress, fxferinfo, fdebug, ioctl_func, fsockopt, sockopt_client, fopensocket, opensocket_client, fclosesocket, closesocket_client, seek_client, convfromnetwork, convtonetwork, convfromutf8, progress_client, ioctl_client, timeout, connecttimeout, accepttimeout, happy_eyeballs_timeout, server_response_timeout, tftp_blksize, filesize, low_speed_limit, low_speed_time, max_send_speed, max_recv_speed, set_resume_from, headers, proxyheaders, httppost, quote, postquote, prequote, source_quote, source_prequote, source_postquote, telnet_options, resolve, connect_to, timevalue, httpversion, general_ssl, dns_cache_timeout, buffer_size, upload_buffer_size, private_data, http200aliases, ipver, max_filesize, ssh_keyfunc, ssh_keyfunc_userp, ssh_auth_types, new_file_perms, new_directory_perms, allowed_protocols, redir_protocols, mail_rcpt, rtspversion, chunk_bgn, chunk_end, fnmatch, fnmatch_data, gssapi_delegation, tcp_keepidle, tcp_keepintvl, maxconnects, expect_100_timeout, stream_depends_on, stream_dependents, resolver_start, resolver_start_client, ssl, proxy_ssl, mimepost, str, keep_post, localportrange, is_fread_set, is_fwrite_set, timecondition, httpreq, proxytype, ftp_filemethod, ftp_create_missing_dirs, use_netrc, use_ssl, ftpsslauth, ftp_ccc, scope_id, rtspreq, stream_weight, localport, free_referer, tftp_no_options, sep_headers, cookiesession, crlf, strip_path_slash, ssh_compression, get_filetime, tunnel_thru_httpproxy, prefer_ascii, ftp_append, ftp_list_only, ftp_use_port, hide_progress, http_fail_on_error, http_keep_sending_on_error, http_follow_location, http_transfer_encoding, allow_auth_to_other_hosts, include_header, http_set_referer, http_auto_referer, opt_no_body, upload, verbose, krb, reuse_forbid, reuse_fresh, ftp_use_epsv, ftp_use_eprt, ftp_use_pret, no_signal, global_dns_cache, tcp_nodelay, ignorecl, ftp_skip_ip, connect_only, http_te_skip, http_ce_skip, proxy_transfer_mode, sasl_ir, wildcard_enabled, tcp_keepalive, tcp_fastopen, ssl_enable_npn, ssl_enable_alpn, path_as_is, pipewait, suppress_connect_headers, dns_shuffle_addresses, stream_depends_e, haproxyprotocol, abstract_unix_socket, disallow_username_in_url, consider reordering the fields or adding explicit padding members

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpLKGuHJ.yaml -p=/project/git /project/git/Utilities/cmcurl/lib/ldap.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpoAc_qn.yaml -p=/project/git /project/git/Utilities/cmcurl/lib/version.c
/project/git/Utilities/cmcurl/lib/urldata.h:1209:8: warning: Excessive padding in 'struct UrlState' (61 padding bytes, where 5 is optimal). 
Optimal fields order: 
conn_cache, 
lastconnect, 
headerbuff, 
headersize, 
buffer, 
ulbuf, 
current_speed, 
first_host, 
session, 
sessionage, 
scratch, 
prev_signal, 
resolver, 
most_recent_ftp_entrypath, 
crlf_conversions, 
pathbuffer, 
path, 
range, 
resume_from, 
rtsp_next_client_CSeq, 
rtsp_next_server_CSeq, 
rtsp_CSeq_recv, 
infilesize, 
drain, 
fread_func, 
in, 
stream_depends_on, 
keeps_speed, 
expiretime, 
authhost, 
authproxy, 
timeoutlist, 
timenode, 
digest, 
proxydigest, 
tempwrite, 
expires, 
first_remote_port, 
tempcount, 
os_errno, 
httpversion, 
stream_weight, 
multi_owned_by_easy, 
this_is_a_follow, 
refused_stream, 
errorbuf, 
allow_port, 
authproblem, 
ftp_trying_alternative, 
wildcardmatch, 
expect100header, 
prev_block_had_trailing_cr, 
slash_removed, 
use_range, 
rangestringalloc, 
done, 
stream_depends_e, 
consider reordering the fields or adding explicit padding members [clang-analyzer-optin.performance.Padding]
struct UrlState {
       ^
/project/git/Utilities/cmcurl/lib/urldata.h:1209:8: note: Excessive padding in 'struct UrlState' (61 padding bytes, where 5 is optimal). Optimal fields order: conn_cache, lastconnect, headerbuff, headersize, buffer, ulbuf, current_speed, first_host, session, sessionage, scratch, prev_signal, resolver, most_recent_ftp_entrypath, crlf_conversions, pathbuffer, path, range, resume_from, rtsp_next_client_CSeq, rtsp_next_server_CSeq, rtsp_CSeq_recv, infilesize, drain, fread_func, in, stream_depends_on, keeps_speed, expiretime, authhost, authproxy, timeoutlist, timenode, digest, proxydigest, tempwrite, expires, first_remote_port, tempcount, os_errno, httpversion, stream_weight, multi_owned_by_easy, this_is_a_follow, refused_stream, errorbuf, allow_port, authproblem, ftp_trying_alternative, wildcardmatch, expect100header, prev_block_had_trailing_cr, slash_removed, use_range, rangestringalloc, done, stream_depends_e, consider reordering the fields or adding explicit padding members
/project/git/Utilities/cmcurl/lib/urldata.h:1457:8: warning: Excessive padding in 'struct UserDefined' (120 padding bytes, where 0 is optimal). 
Optimal fields order: 
err, 
debugdata, 
errorbuffer, 
proxyport, 
out, 
in_set, 
writeheader, 
rtp_out, 
use_port, 
httpauth, 
proxyauth, 
socks5auth, 
followlocation, 
maxredirs, 
postfields, 
seek_func, 
postfieldsize, 
fwrite_func, 
fwrite_header, 
fwrite_rtp, 
fread_func_set, 
fprogress, 
fxferinfo, 
fdebug, 
ioctl_func, 
fsockopt, 
sockopt_client, 
fopensocket, 
opensocket_client, 
fclosesocket, 
closesocket_client, 
seek_client, 
convfromnetwork, 
convtonetwork, 
convfromutf8, 
progress_client, 
ioctl_client, 
timeout, 
connecttimeout, 
accepttimeout, 
happy_eyeballs_timeout, 
server_response_timeout, 
tftp_blksize, 
filesize, 
low_speed_limit, 
low_speed_time, 
max_send_speed, 
max_recv_speed, 
set_resume_from, 
headers, 
proxyheaders, 
httppost, 
quote, 
postquote, 
prequote, 
source_quote, 
source_prequote, 
source_postquote, 
telnet_options, 
resolve, 
connect_to, 
timevalue, 
httpversion, 
general_ssl, 
dns_cache_timeout, 
buffer_size, 
upload_buffer_size, 
private_data, 
http200aliases, 
ipver, 
max_filesize, 
ssh_keyfunc, 
ssh_keyfunc_userp, 
ssh_auth_types, 
new_file_perms, 
new_directory_perms, 
allowed_protocols, 
redir_protocols, 
mail_rcpt, 
rtspversion, 
chunk_bgn, 
chunk_end, 
fnmatch, 
fnmatch_data, 
gssapi_delegation, 
tcp_keepidle, 
tcp_keepintvl, 
maxconnects, 
expect_100_timeout, 
stream_depends_on, 
stream_dependents, 
resolver_start, 
resolver_start_client, 
ssl, 
proxy_ssl, 
mimepost, 
str, 
keep_post, 
localportrange, 
is_fread_set, 
is_fwrite_set, 
timecondition, 
httpreq, 
proxytype, 
ftp_filemethod, 
ftp_create_missing_dirs, 
use_netrc, 
use_ssl, 
ftpsslauth, 
ftp_ccc, 
scope_id, 
rtspreq, 
stream_weight, 
localport, 
free_referer, 
tftp_no_options, 
sep_headers, 
cookiesession, 
crlf, 
strip_path_slash, 
ssh_compression, 
get_filetime, 
tunnel_thru_httpproxy, 
prefer_ascii, 
ftp_append, 
ftp_list_only, 
ftp_use_port, 
hide_progress, 
http_fail_on_error, 
http_keep_sending_on_error, 
http_follow_location, 
http_transfer_encoding, 
allow_auth_to_other_hosts, 
include_header, 
http_set_referer, 
http_auto_referer, 
opt_no_body, 
upload, 
verbose, 
krb, 
reuse_forbid, 
reuse_fresh, 
ftp_use_epsv, 
ftp_use_eprt, 
ftp_use_pret, 
no_signal, 
global_dns_cache, 
tcp_nodelay, 
ignorecl, 
ftp_skip_ip, 
connect_only, 
http_te_skip, 
http_ce_skip, 
proxy_transfer_mode, 
sasl_ir, 
wildcard_enabled, 
tcp_keepalive, 
tcp_fastopen, 
ssl_enable_npn, 
ssl_enable_alpn, 
path_as_is, 
pipewait, 
suppress_connect_headers, 
dns_shuffle_addresses, 
stream_depends_e, 
haproxyprotocol, 
abstract_unix_socket, 
disallow_username_in_url, 
consider reordering the fields or adding explicit padding members [clang-analyzer-optin.performance.Padding]
struct UserDefined {
       ^
/project/git/Utilities/cmcurl/lib/urldata.h:1457:8: note: Excessive padding in 'struct UserDefined' (120 padding bytes, where 0 is optimal). Optimal fields order: err, debugdata, errorbuffer, proxyport, out, in_set, writeheader, rtp_out, use_port, httpauth, proxyauth, socks5auth, followlocation, maxredirs, postfields, seek_func, postfieldsize, fwrite_func, fwrite_header, fwrite_rtp, fread_func_set, fprogress, fxferinfo, fdebug, ioctl_func, fsockopt, sockopt_client, fopensocket, opensocket_client, fclosesocket, closesocket_client, seek_client, convfromnetwork, convtonetwork, convfromutf8, progress_client, ioctl_client, timeout, connecttimeout, accepttimeout, happy_eyeballs_timeout, server_response_timeout, tftp_blksize, filesize, low_speed_limit, low_speed_time, max_send_speed, max_recv_speed, set_resume_from, headers, proxyheaders, httppost, quote, postquote, prequote, source_quote, source_prequote, source_postquote, telnet_options, resolve, connect_to, timevalue, httpversion, general_ssl, dns_cache_timeout, buffer_size, upload_buffer_size, private_data, http200aliases, ipver, max_filesize, ssh_keyfunc, ssh_keyfunc_userp, ssh_auth_types, new_file_perms, new_directory_perms, allowed_protocols, redir_protocols, mail_rcpt, rtspversion, chunk_bgn, chunk_end, fnmatch, fnmatch_data, gssapi_delegation, tcp_keepidle, tcp_keepintvl, maxconnects, expect_100_timeout, stream_depends_on, stream_dependents, resolver_start, resolver_start_client, ssl, proxy_ssl, mimepost, str, keep_post, localportrange, is_fread_set, is_fwrite_set, timecondition, httpreq, proxytype, ftp_filemethod, ftp_create_missing_dirs, use_netrc, use_ssl, ftpsslauth, ftp_ccc, scope_id, rtspreq, stream_weight, localport, free_referer, tftp_no_options, sep_headers, cookiesession, crlf, strip_path_slash, ssh_compression, get_filetime, tunnel_thru_httpproxy, prefer_ascii, ftp_append, ftp_list_only, ftp_use_port, hide_progress, http_fail_on_error, http_keep_sending_on_error, http_follow_location, http_transfer_encoding, allow_auth_to_other_hosts, include_header, http_set_referer, http_auto_referer, opt_no_body, upload, verbose, krb, reuse_forbid, reuse_fresh, ftp_use_epsv, ftp_use_eprt, ftp_use_pret, no_signal, global_dns_cache, tcp_nodelay, ignorecl, ftp_skip_ip, connect_only, http_te_skip, http_ce_skip, proxy_transfer_mode, sasl_ir, wildcard_enabled, tcp_keepalive, tcp_fastopen, ssl_enable_npn, ssl_enable_alpn, path_as_is, pipewait, suppress_connect_headers, dns_shuffle_addresses, stream_depends_e, haproxyprotocol, abstract_unix_socket, disallow_username_in_url, consider reordering the fields or adding explicit padding members
/project/git/Utilities/cmcurl/lib/version.c:113:3: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
  strcpy(ptr, LIBCURL_NAME "/" LIBCURL_VERSION);
  ^
/project/git/Utilities/cmcurl/lib/version.c:113:3: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
/project/git/Utilities/cmcurl/lib/version.c:123:7: warning: Value stored to 'left' is never read [clang-analyzer-deadcode.DeadStores]
      left -= ++len;
      ^
/project/git/Utilities/cmcurl/lib/version.c:123:7: note: Value stored to 'left' is never read
/project/git/Utilities/cmcurl/lib/version.c:124:7: warning: Value stored to 'ptr' is never read [clang-analyzer-deadcode.DeadStores]
      ptr += len;
      ^
/project/git/Utilities/cmcurl/lib/version.c:124:7: note: Value stored to 'ptr' is never read

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpJ2Uozi.yaml -p=/project/git /project/git/Utilities/cmcurl/lib/getenv.c

4 warnings generated.

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpo6p4Iw.yaml -p=/project/git /project/git/Utilities/cmzlib/gzio.c
/project/git/Utilities/cmzlib/gzio.c:131:5: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
    strcpy(s->path, path); /* do this early for debugging */
    ^
/project/git/Utilities/cmzlib/gzio.c:131:5: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
/project/git/Utilities/cmzlib/gzio.c:1008:5: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
    strcpy(s->msg, s->path);
    ^
/project/git/Utilities/cmzlib/gzio.c:1008:5: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
/project/git/Utilities/cmzlib/gzio.c:1009:5: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
    strcat(s->msg, ": ");
    ^
/project/git/Utilities/cmzlib/gzio.c:1009:5: note: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119
/project/git/Utilities/cmzlib/gzio.c:1010:5: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
    strcat(s->msg, m);
    ^
/project/git/Utilities/cmzlib/gzio.c:1010:5: note: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmppB9fhI.yaml -p=/project/git /project/git/Utilities/cmcurl/lib/sendf.c
/project/git/Utilities/cmcurl/lib/sendf.c:262:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
      strcpy(data->set.errorbuffer, error);
      ^
/project/git/Utilities/cmcurl/lib/sendf.c:262:7: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
/project/git/Utilities/cmcurl/lib/urldata.h:1209:8: warning: Excessive padding in 'struct UrlState' (61 padding bytes, where 5 is optimal). 
Optimal fields order: 
conn_cache, 
lastconnect, 
headerbuff, 
headersize, 
buffer, 
ulbuf, 
current_speed, 
first_host, 
session, 
sessionage, 
scratch, 
prev_signal, 
resolver, 
most_recent_ftp_entrypath, 
crlf_conversions, 
pathbuffer, 
path, 
range, 
resume_from, 
rtsp_next_client_CSeq, 
rtsp_next_server_CSeq, 
rtsp_CSeq_recv, 
infilesize, 
drain, 
fread_func, 
in, 
stream_depends_on, 
keeps_speed, 
expiretime, 
authhost, 
authproxy, 
timeoutlist, 
timenode, 
digest, 
proxydigest, 
tempwrite, 
expires, 
first_remote_port, 
tempcount, 
os_errno, 
httpversion, 
stream_weight, 
multi_owned_by_easy, 
this_is_a_follow, 
refused_stream, 
errorbuf, 
allow_port, 
authproblem, 
ftp_trying_alternative, 
wildcardmatch, 
expect100header, 
prev_block_had_trailing_cr, 
slash_removed, 
use_range, 
rangestringalloc, 
done, 
stream_depends_e, 
consider reordering the fields or adding explicit padding members [clang-analyzer-optin.performance.Padding]
struct UrlState {
       ^
/project/git/Utilities/cmcurl/lib/urldata.h:1209:8: note: Excessive padding in 'struct UrlState' (61 padding bytes, where 5 is optimal). Optimal fields order: conn_cache, lastconnect, headerbuff, headersize, buffer, ulbuf, current_speed, first_host, session, sessionage, scratch, prev_signal, resolver, most_recent_ftp_entrypath, crlf_conversions, pathbuffer, path, range, resume_from, rtsp_next_client_CSeq, rtsp_next_server_CSeq, rtsp_CSeq_recv, infilesize, drain, fread_func, in, stream_depends_on, keeps_speed, expiretime, authhost, authproxy, timeoutlist, timenode, digest, proxydigest, tempwrite, expires, first_remote_port, tempcount, os_errno, httpversion, stream_weight, multi_owned_by_easy, this_is_a_follow, refused_stream, errorbuf, allow_port, authproblem, ftp_trying_alternative, wildcardmatch, expect100header, prev_block_had_trailing_cr, slash_removed, use_range, rangestringalloc, done, stream_depends_e, consider reordering the fields or adding explicit padding members
/project/git/Utilities/cmcurl/lib/urldata.h:1457:8: warning: Excessive padding in 'struct UserDefined' (120 padding bytes, where 0 is optimal). 
Optimal fields order: 
err, 
debugdata, 
errorbuffer, 
proxyport, 
out, 
in_set, 
writeheader, 
rtp_out, 
use_port, 
httpauth, 
proxyauth, 
socks5auth, 
followlocation, 
maxredirs, 
postfields, 
seek_func, 
postfieldsize, 
fwrite_func, 
fwrite_header, 
fwrite_rtp, 
fread_func_set, 
fprogress, 
fxferinfo, 
fdebug, 
ioctl_func, 
fsockopt, 
sockopt_client, 
fopensocket, 
opensocket_client, 
fclosesocket, 
closesocket_client, 
seek_client, 
convfromnetwork, 
convtonetwork, 
convfromutf8, 
progress_client, 
ioctl_client, 
timeout, 
connecttimeout, 
accepttimeout, 
happy_eyeballs_timeout, 
server_response_timeout, 
tftp_blksize, 
filesize, 
low_speed_limit, 
low_speed_time, 
max_send_speed, 
max_recv_speed, 
set_resume_from, 
headers, 
proxyheaders, 
httppost, 
quote, 
postquote, 
prequote, 
source_quote, 
source_prequote, 
source_postquote, 
telnet_options, 
resolve, 
connect_to, 
timevalue, 
httpversion, 
general_ssl, 
dns_cache_timeout, 
buffer_size, 
upload_buffer_size, 
private_data, 
http200aliases, 
ipver, 
max_filesize, 
ssh_keyfunc, 
ssh_keyfunc_userp, 
ssh_auth_types, 
new_file_perms, 
new_directory_perms, 
allowed_protocols, 
redir_protocols, 
mail_rcpt, 
rtspversion, 
chunk_bgn, 
chunk_end, 
fnmatch, 
fnmatch_data, 
gssapi_delegation, 
tcp_keepidle, 
tcp_keepintvl, 
maxconnects, 
expect_100_timeout, 
stream_depends_on, 
stream_dependents, 
resolver_start, 
resolver_start_client, 
ssl, 
proxy_ssl, 
mimepost, 
str, 
keep_post, 
localportrange, 
is_fread_set, 
is_fwrite_set, 
timecondition, 
httpreq, 
proxytype, 
ftp_filemethod, 
ftp_create_missing_dirs, 
use_netrc, 
use_ssl, 
ftpsslauth, 
ftp_ccc, 
scope_id, 
rtspreq, 
stream_weight, 
localport, 
free_referer, 
tftp_no_options, 
sep_headers, 
cookiesession, 
crlf, 
strip_path_slash, 
ssh_compression, 
get_filetime, 
tunnel_thru_httpproxy, 
prefer_ascii, 
ftp_append, 
ftp_list_only, 
ftp_use_port, 
hide_progress, 
http_fail_on_error, 
http_keep_sending_on_error, 
http_follow_location, 
http_transfer_encoding, 
allow_auth_to_other_hosts, 
include_header, 
http_set_referer, 
http_auto_referer, 
opt_no_body, 
upload, 
verbose, 
krb, 
reuse_forbid, 
reuse_fresh, 
ftp_use_epsv, 
ftp_use_eprt, 
ftp_use_pret, 
no_signal, 
global_dns_cache, 
tcp_nodelay, 
ignorecl, 
ftp_skip_ip, 
connect_only, 
http_te_skip, 
http_ce_skip, 
proxy_transfer_mode, 
sasl_ir, 
wildcard_enabled, 
tcp_keepalive, 
tcp_fastopen, 
ssl_enable_npn, 
ssl_enable_alpn, 
path_as_is, 
pipewait, 
suppress_connect_headers, 
dns_shuffle_addresses, 
stream_depends_e, 
haproxyprotocol, 
abstract_unix_socket, 
3 warnings generated.

2 warnings generated.

disallow_username_in_url, 
consider reordering the fields or adding explicit padding members [clang-analyzer-optin.performance.Padding]
struct UserDefined {
       ^
/project/git/Utilities/cmcurl/lib/urldata.h:1457:8: note: Excessive padding in 'struct UserDefined' (120 padding bytes, where 0 is optimal). Optimal fields order: err, debugdata, errorbuffer, proxyport, out, in_set, writeheader, rtp_out, use_port, httpauth, proxyauth, socks5auth, followlocation, maxredirs, postfields, seek_func, postfieldsize, fwrite_func, fwrite_header, fwrite_rtp, fread_func_set, fprogress, fxferinfo, fdebug, ioctl_func, fsockopt, sockopt_client, fopensocket, opensocket_client, fclosesocket, closesocket_client, seek_client, convfromnetwork, convtonetwork, convfromutf8, progress_client, ioctl_client, timeout, connecttimeout, accepttimeout, happy_eyeballs_timeout, server_response_timeout, tftp_blksize, filesize, low_speed_limit, low_speed_time, max_send_speed, max_recv_speed, set_resume_from, headers, proxyheaders, httppost, quote, postquote, prequote, source_quote, source_prequote, source_postquote, telnet_options, resolve, connect_to, timevalue, httpversion, general_ssl, dns_cache_timeout, buffer_size, upload_buffer_size, private_data, http200aliases, ipver, max_filesize, ssh_keyfunc, ssh_keyfunc_userp, ssh_auth_types, new_file_perms, new_directory_perms, allowed_protocols, redir_protocols, mail_rcpt, rtspversion, chunk_bgn, chunk_end, fnmatch, fnmatch_data, gssapi_delegation, tcp_keepidle, tcp_keepintvl, maxconnects, expect_100_timeout, stream_depends_on, stream_dependents, resolver_start, resolver_start_client, ssl, proxy_ssl, mimepost, str, keep_post, localportrange, is_fread_set, is_fwrite_set, timecondition, httpreq, proxytype, ftp_filemethod, ftp_create_missing_dirs, use_netrc, use_ssl, ftpsslauth, ftp_ccc, scope_id, rtspreq, stream_weight, localport, free_referer, tftp_no_options, sep_headers, cookiesession, crlf, strip_path_slash, ssh_compression, get_filetime, tunnel_thru_httpproxy, prefer_ascii, ftp_append, ftp_list_only, ftp_use_port, hide_progress, http_fail_on_error, http_keep_sending_on_error, http_follow_location, http_transfer_encoding, allow_auth_to_other_hosts, include_header, http_set_referer, http_auto_referer, opt_no_body, upload, verbose, krb, reuse_forbid, reuse_fresh, ftp_use_epsv, ftp_use_eprt, ftp_use_pret, no_signal, global_dns_cache, tcp_nodelay, ignorecl, ftp_skip_ip, connect_only, http_te_skip, http_ce_skip, proxy_transfer_mode, sasl_ir, wildcard_enabled, tcp_keepalive, tcp_fastopen, ssl_enable_npn, ssl_enable_alpn, path_as_is, pipewait, suppress_connect_headers, dns_shuffle_addresses, stream_depends_e, haproxyprotocol, abstract_unix_socket, disallow_username_in_url, consider reordering the fields or adding explicit padding members

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpRlDGXs.yaml -p=/project/git /project/git/Utilities/cmcurl/lib/telnet.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpp9CBdi.yaml -p=/project/git /project/git/Utilities/cmcurl/lib/escape.c
/project/git/Utilities/cmcurl/lib/urldata.h:1209:8: warning: Excessive padding in 'struct UrlState' (61 padding bytes, where 5 is optimal). 
Optimal fields order: 
conn_cache, 
lastconnect, 
headerbuff, 
headersize, 
buffer, 
ulbuf, 
current_speed, 
first_host, 
session, 
sessionage, 
scratch, 
prev_signal, 
resolver, 
most_recent_ftp_entrypath, 
crlf_conversions, 
pathbuffer, 
path, 
range, 
resume_from, 
rtsp_next_client_CSeq, 
rtsp_next_server_CSeq, 
rtsp_CSeq_recv, 
infilesize, 
drain, 
fread_func, 
in, 
stream_depends_on, 
keeps_speed, 
expiretime, 
authhost, 
authproxy, 
timeoutlist, 
timenode, 
digest, 
proxydigest, 
tempwrite, 
expires, 
first_remote_port, 
tempcount, 
os_errno, 
httpversion, 
stream_weight, 
multi_owned_by_easy, 
this_is_a_follow, 
refused_stream, 
errorbuf, 
allow_port, 
authproblem, 
ftp_trying_alternative, 
wildcardmatch, 
expect100header, 
prev_block_had_trailing_cr, 
slash_removed, 
use_range, 
rangestringalloc, 
done, 
stream_depends_e, 
consider reordering the fields or adding explicit padding members [clang-analyzer-optin.performance.Padding]
struct UrlState {
       ^
/project/git/Utilities/cmcurl/lib/urldata.h:1209:8: note: Excessive padding in 'struct UrlState' (61 padding bytes, where 5 is optimal). Optimal fields order: conn_cache, lastconnect, headerbuff, headersize, buffer, ulbuf, current_speed, first_host, session, sessionage, scratch, prev_signal, resolver, most_recent_ftp_entrypath, crlf_conversions, pathbuffer, path, range, resume_from, rtsp_next_client_CSeq, rtsp_next_server_CSeq, rtsp_CSeq_recv, infilesize, drain, fread_func, in, stream_depends_on, keeps_speed, expiretime, authhost, authproxy, timeoutlist, timenode, digest, proxydigest, tempwrite, expires, first_remote_port, tempcount, os_errno, httpversion, stream_weight, multi_owned_by_easy, this_is_a_follow, refused_stream, errorbuf, allow_port, authproblem, ftp_trying_alternative, wildcardmatch, expect100header, prev_block_had_trailing_cr, slash_removed, use_range, rangestringalloc, done, stream_depends_e, consider reordering the fields or adding explicit padding members
/project/git/Utilities/cmcurl/lib/urldata.h:1457:8: warning: Excessive padding in 'struct UserDefined' (120 padding bytes, where 0 is optimal). 
Optimal fields order: 
err, 
debugdata, 
errorbuffer, 
proxyport, 
out, 
in_set, 
writeheader, 
rtp_out, 
use_port, 
httpauth, 
proxyauth, 
socks5auth, 
followlocation, 
maxredirs, 
postfields, 
seek_func, 
postfieldsize, 
fwrite_func, 
fwrite_header, 
fwrite_rtp, 
fread_func_set, 
fprogress, 
fxferinfo, 
fdebug, 
ioctl_func, 
fsockopt, 
sockopt_client, 
fopensocket, 
opensocket_client, 
fclosesocket, 
closesocket_client, 
seek_client, 
convfromnetwork, 
convtonetwork, 
convfromutf8, 
progress_client, 
ioctl_client, 
timeout, 
connecttimeout, 
accepttimeout, 
happy_eyeballs_timeout, 
server_response_timeout, 
tftp_blksize, 
filesize, 
low_speed_limit, 
low_speed_time, 
max_send_speed, 
max_recv_speed, 
set_resume_from, 
headers, 
proxyheaders, 
httppost, 
quote, 
postquote, 
prequote, 
source_quote, 
source_prequote, 
source_postquote, 
telnet_options, 
resolve, 
connect_to, 
timevalue, 
httpversion, 
general_ssl, 
dns_cache_timeout, 
buffer_size, 
upload_buffer_size, 
private_data, 
http200aliases, 
ipver, 
max_filesize, 
ssh_keyfunc, 
ssh_keyfunc_userp, 
ssh_auth_types, 
new_file_perms, 
new_directory_perms, 
allowed_protocols, 
redir_protocols, 
mail_rcpt, 
rtspversion, 
chunk_bgn, 
chunk_end, 
fnmatch, 
fnmatch_data, 
gssapi_delegation, 
tcp_keepidle, 
tcp_keepintvl, 
maxconnects, 
expect_100_timeout, 
stream_depends_on, 
stream_dependents, 
resolver_start, 
resolver_start_client, 
ssl, 
proxy_ssl, 
mimepost, 
str, 
keep_post, 
localportrange, 
is_fread_set, 
is_fwrite_set, 
timecondition, 
httpreq, 
proxytype, 
ftp_filemethod, 
ftp_create_missing_dirs, 
use_netrc, 
use_ssl, 
ftpsslauth, 
ftp_ccc, 
scope_id, 
rtspreq, 
stream_weight, 
localport, 
free_referer, 
tftp_no_options, 
sep_headers, 
cookiesession, 
crlf, 
strip_path_slash, 
ssh_compression, 
get_filetime, 
tunnel_thru_httpproxy, 
prefer_ascii, 
ftp_append, 
ftp_list_only, 
ftp_use_port, 
hide_progress, 
http_fail_on_error, 
http_keep_sending_on_error, 
http_follow_location, 
http_transfer_encoding, 
allow_auth_to_other_hosts, 
include_header, 
http_set_referer, 
http_auto_referer, 
opt_no_body, 
upload, 
verbose, 
krb, 
reuse_forbid, 
reuse_fresh, 
ftp_use_epsv, 
ftp_use_eprt, 
ftp_use_pret, 
no_signal, 
global_dns_cache, 
tcp_nodelay, 
ignorecl, 
ftp_skip_ip, 
connect_only, 
http_te_skip, 
http_ce_skip, 
proxy_transfer_mode, 
sasl_ir, 
wildcard_enabled, 
tcp_keepalive, 
tcp_fastopen, 
ssl_enable_npn, 
ssl_enable_alpn, 
path_as_is, 
pipewait, 
suppress_connect_headers, 
dns_shuffle_addresses, 
stream_depends_e, 
haproxyprotocol, 
abstract_unix_socket, 
disallow_username_in_url, 
consider reordering the fields or adding explicit padding members [clang-analyzer-optin.performance.Padding]
struct UserDefined {
       ^
2 warnings generated.

/project/git/Utilities/cmcurl/lib/urldata.h:1457:8: note: Excessive padding in 'struct UserDefined' (120 padding bytes, where 0 is optimal). Optimal fields order: err, debugdata, errorbuffer, proxyport, out, in_set, writeheader, rtp_out, use_port, httpauth, proxyauth, socks5auth, followlocation, maxredirs, postfields, seek_func, postfieldsize, fwrite_func, fwrite_header, fwrite_rtp, fread_func_set, fprogress, fxferinfo, fdebug, ioctl_func, fsockopt, sockopt_client, fopensocket, opensocket_client, fclosesocket, closesocket_client, seek_client, convfromnetwork, convtonetwork, convfromutf8, progress_client, ioctl_client, timeout, connecttimeout, accepttimeout, happy_eyeballs_timeout, server_response_timeout, tftp_blksize, filesize, low_speed_limit, low_speed_time, max_send_speed, max_recv_speed, set_resume_from, headers, proxyheaders, httppost, quote, postquote, prequote, source_quote, source_prequote, source_postquote, telnet_options, resolve, connect_to, timevalue, httpversion, general_ssl, dns_cache_timeout, buffer_size, upload_buffer_size, private_data, http200aliases, ipver, max_filesize, ssh_keyfunc, ssh_keyfunc_userp, ssh_auth_types, new_file_perms, new_directory_perms, allowed_protocols, redir_protocols, mail_rcpt, rtspversion, chunk_bgn, chunk_end, fnmatch, fnmatch_data, gssapi_delegation, tcp_keepidle, tcp_keepintvl, maxconnects, expect_100_timeout, stream_depends_on, stream_dependents, resolver_start, resolver_start_client, ssl, proxy_ssl, mimepost, str, keep_post, localportrange, is_fread_set, is_fwrite_set, timecondition, httpreq, proxytype, ftp_filemethod, ftp_create_missing_dirs, use_netrc, use_ssl, ftpsslauth, ftp_ccc, scope_id, rtspreq, stream_weight, localport, free_referer, tftp_no_options, sep_headers, cookiesession, crlf, strip_path_slash, ssh_compression, get_filetime, tunnel_thru_httpproxy, prefer_ascii, ftp_append, ftp_list_only, ftp_use_port, hide_progress, http_fail_on_error, http_keep_sending_on_error, http_follow_location, http_transfer_encoding, allow_auth_to_other_hosts, include_header, http_set_referer, http_auto_referer, opt_no_body, upload, verbose, krb, reuse_forbid, reuse_fresh, ftp_use_epsv, ftp_use_eprt, ftp_use_pret, no_signal, global_dns_cache, tcp_nodelay, ignorecl, ftp_skip_ip, connect_only, http_te_skip, http_ce_skip, proxy_transfer_mode, sasl_ir, wildcard_enabled, tcp_keepalive, tcp_fastopen, ssl_enable_npn, ssl_enable_alpn, path_as_is, pipewait, suppress_connect_headers, dns_shuffle_addresses, stream_depends_e, haproxyprotocol, abstract_unix_socket, disallow_username_in_url, consider reordering the fields or adding explicit padding members

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpP8gb_B.yaml -p=/project/git /project/git/Utilities/cmcurl/lib/getinfo.c
/project/git/Utilities/cmcurl/lib/urldata.h:1209:8: warning: Excessive padding in 'struct UrlState' (61 padding bytes, where 5 is optimal). 
Optimal fields order: 
conn_cache, 
lastconnect, 
headerbuff, 
headersize, 
buffer, 
ulbuf, 
current_speed, 
first_host, 
session, 
sessionage, 
scratch, 
prev_signal, 
resolver, 
most_recent_ftp_entrypath, 
crlf_conversions, 
pathbuffer, 
path, 
range, 
resume_from, 
rtsp_next_client_CSeq, 
rtsp_next_server_CSeq, 
rtsp_CSeq_recv, 
infilesize, 
drain, 
fread_func, 
in, 
stream_depends_on, 
keeps_speed, 
expiretime, 
authhost, 
authproxy, 
timeoutlist, 
timenode, 
digest, 
proxydigest, 
tempwrite, 
expires, 
first_remote_port, 
tempcount, 
os_errno, 
httpversion, 
stream_weight, 
multi_owned_by_easy, 
this_is_a_follow, 
refused_stream, 
errorbuf, 
allow_port, 
authproblem, 
ftp_trying_alternative, 
wildcardmatch, 
expect100header, 
prev_block_had_trailing_cr, 
slash_removed, 
use_range, 
rangestringalloc, 
done, 
stream_depends_e, 
consider reordering the fields or adding explicit padding members [clang-analyzer-optin.performance.Padding]
struct UrlState {
       ^
/project/git/Utilities/cmcurl/lib/urldata.h:1209:8: note: Excessive padding in 'struct UrlState' (61 padding bytes, where 5 is optimal). Optimal fields order: conn_cache, lastconnect, headerbuff, headersize, buffer, ulbuf, current_speed, first_host, session, sessionage, scratch, prev_signal, resolver, most_recent_ftp_entrypath, crlf_conversions, pathbuffer, path, range, resume_from, rtsp_next_client_CSeq, rtsp_next_server_CSeq, rtsp_CSeq_recv, infilesize, drain, fread_func, in, stream_depends_on, keeps_speed, expiretime, authhost, authproxy, timeoutlist, timenode, digest, proxydigest, tempwrite, expires, first_remote_port, tempcount, os_errno, httpversion, stream_weight, multi_owned_by_easy, this_is_a_follow, refused_stream, errorbuf, allow_port, authproblem, ftp_trying_alternative, wildcardmatch, expect100header, prev_block_had_trailing_cr, slash_removed, use_range, rangestringalloc, done, stream_depends_e, consider reordering the fields or adding explicit padding members
/project/git/Utilities/cmcurl/lib/urldata.h:1457:8: warning: Excessive padding in 'struct UserDefined' (120 padding bytes, where 0 is optimal). 
Optimal fields order: 
err, 
debugdata, 
errorbuffer, 
proxyport, 
out, 
in_set, 
writeheader, 
rtp_out, 
use_port, 
httpauth, 
proxyauth, 
socks5auth, 
followlocation, 
maxredirs, 
postfields, 
seek_func, 
postfieldsize, 
fwrite_func, 
fwrite_header, 
fwrite_rtp, 
fread_func_set, 
fprogress, 
fxferinfo, 
fdebug, 
ioctl_func, 
fsockopt, 
sockopt_client, 
fopensocket, 
opensocket_client, 
fclosesocket, 
closesocket_client, 
seek_client, 
convfromnetwork, 
convtonetwork, 
convfromutf8, 
progress_client, 
ioctl_client, 
timeout, 
connecttimeout, 
accepttimeout, 
happy_eyeballs_timeout, 
server_response_timeout, 
tftp_blksize, 
filesize, 
low_speed_limit, 
low_speed_time, 
max_send_speed, 
max_recv_speed, 
set_resume_from, 
headers, 
proxyheaders, 
httppost, 
quote, 
postquote, 
prequote, 
source_quote, 
source_prequote, 
source_postquote, 
telnet_options, 
resolve, 
connect_to, 
timevalue, 
httpversion, 
general_ssl, 
dns_cache_timeout, 
buffer_size, 
upload_buffer_size, 
private_data, 
http200aliases, 
ipver, 
max_filesize, 
ssh_keyfunc, 
ssh_keyfunc_userp, 
ssh_auth_types, 
new_file_perms, 
new_directory_perms, 
allowed_protocols, 
redir_protocols, 
mail_rcpt, 
rtspversion, 
chunk_bgn, 
chunk_end, 
fnmatch, 
fnmatch_data, 
gssapi_delegation, 
tcp_keepidle, 
tcp_keepintvl, 
maxconnects, 
expect_100_timeout, 
stream_depends_on, 
stream_dependents, 
resolver_start, 
resolver_start_client, 
ssl, 
proxy_ssl, 
mimepost, 
str, 
keep_post, 
localportrange, 
is_fread_set, 
is_fwrite_set, 
timecondition, 
httpreq, 
proxytype, 
ftp_filemethod, 
ftp_create_missing_dirs, 
use_netrc, 
use_ssl, 
ftpsslauth, 
ftp_ccc, 
scope_id, 
rtspreq, 
stream_weight, 
localport, 
free_referer, 
tftp_no_options, 
sep_headers, 
cookiesession, 
crlf, 
strip_path_slash, 
ssh_compression, 
get_filetime, 
tunnel_thru_httpproxy, 
prefer_ascii, 
ftp_append, 
ftp_list_only, 
ftp_use_port, 
hide_progress, 
http_fail_on_error, 
http_keep_sending_on_error, 
http_follow_location, 
http_transfer_encoding, 
allow_auth_to_other_hosts, 
include_header, 
http_set_referer, 
http_auto_referer, 
opt_no_body, 
upload, 
verbose, 
krb, 
reuse_forbid, 
reuse_fresh, 
ftp_use_epsv, 
ftp_use_eprt, 
ftp_use_pret, 
no_signal, 
global_dns_cache, 
tcp_nodelay, 
ignorecl, 
ftp_skip_ip, 
connect_only, 
http_te_skip, 
http_ce_skip, 
proxy_transfer_mode, 
sasl_ir, 
wildcard_enabled, 
tcp_keepalive, 
tcp_fastopen, 
ssl_enable_npn, 
ssl_enable_alpn, 
path_as_is, 
pipewait, 
suppress_connect_headers, 
dns_shuffle_addresses, 
stream_depends_e, 
haproxyprotocol, 
abstract_unix_socket, 
disallow_username_in_url, 
consider reordering the fields or adding explicit padding members [clang-analyzer-optin.performance.Padding]
struct UserDefined {
       ^
/project/git/Utilities/cmcurl/lib/urldata.h:1457:8: note: Excessive padding in 'struct UserDefined' (120 padding bytes, where 0 is optimal). Optimal fields order: err, debugdata, errorbuffer, proxyport, out, in_set, writeheader, rtp_out, use_port, httpauth, proxyauth, socks5auth, followlocation, maxredirs, postfields, seek_func, postfieldsize, fwrite_func, fwrite_header, fwrite_rtp, fread_func_set, fprogress, fxferinfo, fdebug, ioctl_func, fsockopt, sockopt_client, fopensocket, opensocket_client, fclosesocket, closesocket_client, seek_client, convfromnetwork, convtonetwork, convfromutf8, progress_client, ioctl_client, timeout, connecttimeout, accepttimeout, happy_eyeballs_timeout, server_response_timeout, tftp_blksize, filesize, low_speed_limit, low_speed_time, max_send_speed, max_recv_speed, set_resume_from, headers, proxyheaders, httppost, quote, postquote, prequote, source_quote, source_prequote, source_postquote, telnet_options, resolve, connect_to, timevalue, httpversion, general_ssl, dns_cache_timeout, buffer_size, upload_buffer_size, private_data, http200aliases, ipver, max_filesize, ssh_keyfunc, ssh_keyfunc_userp, ssh_auth_types, new_file_perms, new_directory_perms, allowed_protocols, redir_protocols, mail_rcpt, rtspversion, chunk_bgn, chunk_end, fnmatch, fnmatch_data, gssapi_delegation, tcp_keepidle, tcp_keepintvl, maxconnects, expect_100_timeout, stream_depends_on, stream_dependents, resolver_start, resolver_start_client, ssl, proxy_ssl, mimepost, str, keep_post, localportrange, is_fread_set, is_fwrite_set, timecondition, httpreq, proxytype, ftp_filemethod, ftp_create_missing_dirs, use_netrc, use_ssl, ftpsslauth, ftp_ccc, scope_id, rtspreq, stream_weight, localport, free_referer, tftp_no_options, sep_headers, cookiesession, crlf, strip_path_slash, ssh_compression, get_filetime, tunnel_thru_httpproxy, prefer_ascii, ftp_append, ftp_list_only, ftp_use_port, hide_progress, http_fail_on_error, http_keep_sending_on_error, http_follow_location, http_transfer_encoding, allow_auth_to_other_hosts, include_header, http_set_referer, http_auto_referer, opt_no_body, upload, verbose, krb, reuse_forbid, reuse_fresh, ftp_use_epsv, ftp_use_eprt, ftp_use_pret, no_signal, global_dns_cache, tcp_nodelay, ignorecl, ftp_skip_ip, connect_only, http_te_skip, http_ce_skip, proxy_transfer_mode, sasl_ir, wildcard_enabled, tcp_keepalive, tcp_fastopen, ssl_enable_npn, ssl_enable_alpn, path_as_is, pipewait, suppress_connect_headers, dns_shuffle_addresses, stream_depends_e, haproxyprotocol, abstract_unix_socket, disallow_username_in_url, consider reordering the fields or adding explicit padding members

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpiLGMof.yaml -p=/project/git /project/git/Utilities/cmcurl/lib/netrc.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpT9HwYC.yaml -p=/project/git /project/git/Utilities/cmcurl/lib/http.c
/project/git/Utilities/cmcurl/lib/urldata.h:1209:8: warning: Excessive padding in 'struct UrlState' (61 padding bytes, where 5 is optimal). 
Optimal fields order: 
conn_cache, 
lastconnect, 
headerbuff, 
headersize, 
buffer, 
ulbuf, 
current_speed, 
first_host, 
session, 
sessionage, 
scratch, 
prev_signal, 
resolver, 
most_recent_ftp_entrypath, 
crlf_conversions, 
pathbuffer, 
path, 
range, 
resume_from, 
rtsp_next_client_CSeq, 
rtsp_next_server_CSeq, 
rtsp_CSeq_recv, 
infilesize, 
drain, 
fread_func, 
in, 
stream_depends_on, 
keeps_speed, 
expiretime, 
authhost, 
authproxy, 
timeoutlist, 
timenode, 
digest, 
proxydigest, 
tempwrite, 
expires, 
first_remote_port, 
tempcount, 
os_errno, 
httpversion, 
stream_weight, 
multi_owned_by_easy, 
this_is_a_follow, 
refused_stream, 
errorbuf, 
allow_port, 
authproblem, 
ftp_trying_alternative, 
wildcardmatch, 
expect100header, 
prev_block_had_trailing_cr, 
slash_removed, 
use_range, 
rangestringalloc, 
done, 
stream_depends_e, 
consider reordering the fields or adding explicit padding members [clang-analyzer-optin.performance.Padding]
struct UrlState {
       ^
/project/git/Utilities/cmcurl/lib/urldata.h:1209:8: note: Excessive padding in 'struct UrlState' (61 padding bytes, where 5 is optimal). Optimal fields order: conn_cache, lastconnect, headerbuff, headersize, buffer, ulbuf, current_speed, first_host, session, sessionage, scratch, prev_signal, resolver, most_recent_ftp_entrypath, crlf_conversions, pathbuffer, path, range, resume_from, rtsp_next_client_CSeq, rtsp_next_server_CSeq, rtsp_CSeq_recv, infilesize, drain, fread_func, in, stream_depends_on, keeps_speed, expiretime, authhost, authproxy, timeoutlist, timenode, digest, proxydigest, tempwrite, expires, first_remote_port, tempcount, os_errno, httpversion, stream_weight, multi_owned_by_easy, this_is_a_follow, refused_stream, errorbuf, allow_port, authproblem, ftp_trying_alternative, wildcardmatch, expect100header, prev_block_had_trailing_cr, slash_removed, use_range, rangestringalloc, done, stream_depends_e, consider reordering the fields or adding explicit padding members
/project/git/Utilities/cmcurl/lib/urldata.h:1457:8: warning: Excessive padding in 'struct UserDefined' (120 padding bytes, where 0 is optimal). 
Optimal fields order: 
err, 
debugdata, 
errorbuffer, 
proxyport, 
out, 
in_set, 
writeheader, 
rtp_out, 
use_port, 
httpauth, 
proxyauth, 
socks5auth, 
followlocation, 
maxredirs, 
postfields, 
seek_func, 
postfieldsize, 
fwrite_func, 
fwrite_header, 
fwrite_rtp, 
fread_func_set, 
fprogress, 
fxferinfo, 
fdebug, 
ioctl_func, 
fsockopt, 
sockopt_client, 
fopensocket, 
opensocket_client, 
fclosesocket, 
closesocket_client, 
seek_client, 
convfromnetwork, 
convtonetwork, 
convfromutf8, 
progress_client, 
ioctl_client, 
timeout, 
connecttimeout, 
accepttimeout, 
happy_eyeballs_timeout, 
server_response_timeout, 
tftp_blksize, 
filesize, 
low_speed_limit, 
low_speed_time, 
max_send_speed, 
max_recv_speed, 
set_resume_from, 
headers, 
proxyheaders, 
httppost, 
quote, 
postquote, 
prequote, 
source_quote, 
source_prequote, 
source_postquote, 
telnet_options, 
resolve, 
connect_to, 
timevalue, 
httpversion, 
general_ssl, 
dns_cache_timeout, 
buffer_size, 
upload_buffer_size, 
private_data, 
http200aliases, 
ipver, 
max_filesize, 
ssh_keyfunc, 
ssh_keyfunc_userp, 
ssh_auth_types, 
new_file_perms, 
new_directory_perms, 
allowed_protocols, 
redir_protocols, 
mail_rcpt, 
rtspversion, 
chunk_bgn, 
chunk_end, 
fnmatch, 
fnmatch_data, 
gssapi_delegation, 
tcp_keepidle, 
tcp_keepintvl, 
maxconnects, 
expect_100_timeout, 
stream_depends_on, 
stream_dependents, 
resolver_start, 
resolver_start_client, 
ssl, 
proxy_ssl, 
mimepost, 
str, 
keep_post, 
localportrange, 
is_fread_set, 
is_fwrite_set, 
timecondition, 
httpreq, 
proxytype, 
ftp_filemethod, 
ftp_create_missing_dirs, 
use_netrc, 
use_ssl, 
ftpsslauth, 
ftp_ccc, 
scope_id, 
rtspreq, 
stream_weight, 
localport, 
free_referer, 
tftp_no_options, 
sep_headers, 
cookiesession, 
crlf, 
strip_path_slash, 
ssh_compression, 
get_filetime, 
tunnel_thru_httpproxy, 
prefer_ascii, 
ftp_append, 
ftp_list_only, 
ftp_use_port, 
hide_progress, 
http_fail_on_error, 
http_keep_sending_on_error, 
http_follow_location, 
http_transfer_encoding, 
allow_auth_to_other_hosts, 
include_header, 
http_set_referer, 
http_auto_referer, 
opt_no_body, 
upload, 
verbose, 
krb, 
reuse_forbid, 
reuse_fresh, 
ftp_use_epsv, 
ftp_use_eprt, 
ftp_use_pret, 
no_signal, 
global_dns_cache, 
tcp_nodelay, 
ignorecl, 
ftp_skip_ip, 
connect_only, 
http_te_skip, 
http_ce_skip, 
proxy_transfer_mode, 
sasl_ir, 
wildcard_enabled, 
tcp_keepalive, 
tcp_fastopen, 
ssl_enable_npn, 
ssl_enable_alpn, 
path_as_is, 
pipewait, 
suppress_connect_headers, 
dns_shuffle_addresses, 
stream_depends_e, 
haproxyprotocol, 
abstract_unix_socket, 
disallow_username_in_url, 
consider reordering the fields or adding explicit padding members [clang-analyzer-optin.performance.Padding]
struct UserDefined {
       ^
2 warnings generated.

1 warning generated.

2 warnings generated.

/project/git/Utilities/cmcurl/lib/urldata.h:1457:8: note: Excessive padding in 'struct UserDefined' (120 padding bytes, where 0 is optimal). Optimal fields order: err, debugdata, errorbuffer, proxyport, out, in_set, writeheader, rtp_out, use_port, httpauth, proxyauth, socks5auth, followlocation, maxredirs, postfields, seek_func, postfieldsize, fwrite_func, fwrite_header, fwrite_rtp, fread_func_set, fprogress, fxferinfo, fdebug, ioctl_func, fsockopt, sockopt_client, fopensocket, opensocket_client, fclosesocket, closesocket_client, seek_client, convfromnetwork, convtonetwork, convfromutf8, progress_client, ioctl_client, timeout, connecttimeout, accepttimeout, happy_eyeballs_timeout, server_response_timeout, tftp_blksize, filesize, low_speed_limit, low_speed_time, max_send_speed, max_recv_speed, set_resume_from, headers, proxyheaders, httppost, quote, postquote, prequote, source_quote, source_prequote, source_postquote, telnet_options, resolve, connect_to, timevalue, httpversion, general_ssl, dns_cache_timeout, buffer_size, upload_buffer_size, private_data, http200aliases, ipver, max_filesize, ssh_keyfunc, ssh_keyfunc_userp, ssh_auth_types, new_file_perms, new_directory_perms, allowed_protocols, redir_protocols, mail_rcpt, rtspversion, chunk_bgn, chunk_end, fnmatch, fnmatch_data, gssapi_delegation, tcp_keepidle, tcp_keepintvl, maxconnects, expect_100_timeout, stream_depends_on, stream_dependents, resolver_start, resolver_start_client, ssl, proxy_ssl, mimepost, str, keep_post, localportrange, is_fread_set, is_fwrite_set, timecondition, httpreq, proxytype, ftp_filemethod, ftp_create_missing_dirs, use_netrc, use_ssl, ftpsslauth, ftp_ccc, scope_id, rtspreq, stream_weight, localport, free_referer, tftp_no_options, sep_headers, cookiesession, crlf, strip_path_slash, ssh_compression, get_filetime, tunnel_thru_httpproxy, prefer_ascii, ftp_append, ftp_list_only, ftp_use_port, hide_progress, http_fail_on_error, http_keep_sending_on_error, http_follow_location, http_transfer_encoding, allow_auth_to_other_hosts, include_header, http_set_referer, http_auto_referer, opt_no_body, upload, verbose, krb, reuse_forbid, reuse_fresh, ftp_use_epsv, ftp_use_eprt, ftp_use_pret, no_signal, global_dns_cache, tcp_nodelay, ignorecl, ftp_skip_ip, connect_only, http_te_skip, http_ce_skip, proxy_transfer_mode, sasl_ir, wildcard_enabled, tcp_keepalive, tcp_fastopen, ssl_enable_npn, ssl_enable_alpn, path_as_is, pipewait, suppress_connect_headers, dns_shuffle_addresses, stream_depends_e, haproxyprotocol, abstract_unix_socket, disallow_username_in_url, consider reordering the fields or adding explicit padding members

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmprDyP9t.yaml -p=/project/git /project/git/Utilities/cmzlib/deflate.c
/project/git/Utilities/cmzlib/deflate.c:359:20: warning: Value stored to 'hash_head' is never read [clang-analyzer-deadcode.DeadStores]
    if (hash_head) hash_head = 0;  /* to make compiler happy */
                   ^
/project/git/Utilities/cmzlib/deflate.c:359:20: note: Value stored to 'hash_head' is never read

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpoHGbED.yaml -p=/project/git /project/git/Utilities/cmcurl/lib/easy.c
/project/git/Utilities/cmcurl/lib/urldata.h:1209:8: warning: Excessive padding in 'struct UrlState' (61 padding bytes, where 5 is optimal). 
Optimal fields order: 
conn_cache, 
lastconnect, 
headerbuff, 
headersize, 
buffer, 
ulbuf, 
current_speed, 
first_host, 
session, 
sessionage, 
scratch, 
prev_signal, 
resolver, 
most_recent_ftp_entrypath, 
crlf_conversions, 
pathbuffer, 
path, 
range, 
resume_from, 
rtsp_next_client_CSeq, 
rtsp_next_server_CSeq, 
rtsp_CSeq_recv, 
infilesize, 
drain, 
fread_func, 
in, 
stream_depends_on, 
keeps_speed, 
expiretime, 
authhost, 
authproxy, 
timeoutlist, 
timenode, 
digest, 
proxydigest, 
tempwrite, 
expires, 
first_remote_port, 
tempcount, 
os_errno, 
httpversion, 
stream_weight, 
multi_owned_by_easy, 
this_is_a_follow, 
refused_stream, 
errorbuf, 
allow_port, 
authproblem, 
ftp_trying_alternative, 
wildcardmatch, 
expect100header, 
prev_block_had_trailing_cr, 
slash_removed, 
use_range, 
rangestringalloc, 
done, 
stream_depends_e, 
consider reordering the fields or adding explicit padding members [clang-analyzer-optin.performance.Padding]
struct UrlState {
       ^
/project/git/Utilities/cmcurl/lib/urldata.h:1209:8: note: Excessive padding in 'struct UrlState' (61 padding bytes, where 5 is optimal). Optimal fields order: conn_cache, lastconnect, headerbuff, headersize, buffer, ulbuf, current_speed, first_host, session, sessionage, scratch, prev_signal, resolver, most_recent_ftp_entrypath, crlf_conversions, pathbuffer, path, range, resume_from, rtsp_next_client_CSeq, rtsp_next_server_CSeq, rtsp_CSeq_recv, infilesize, drain, fread_func, in, stream_depends_on, keeps_speed, expiretime, authhost, authproxy, timeoutlist, timenode, digest, proxydigest, tempwrite, expires, first_remote_port, tempcount, os_errno, httpversion, stream_weight, multi_owned_by_easy, this_is_a_follow, refused_stream, errorbuf, allow_port, authproblem, ftp_trying_alternative, wildcardmatch, expect100header, prev_block_had_trailing_cr, slash_removed, use_range, rangestringalloc, done, stream_depends_e, consider reordering the fields or adding explicit padding members
/project/git/Utilities/cmcurl/lib/urldata.h:1457:8: warning: Excessive padding in 'struct UserDefined' (120 padding bytes, where 0 is optimal). 
Optimal fields order: 
err, 
debugdata, 
errorbuffer, 
proxyport, 
out, 
in_set, 
writeheader, 
rtp_out, 
use_port, 
httpauth, 
proxyauth, 
socks5auth, 
followlocation, 
maxredirs, 
postfields, 
seek_func, 
postfieldsize, 
fwrite_func, 
fwrite_header, 
fwrite_rtp, 
fread_func_set, 
fprogress, 
fxferinfo, 
fdebug, 
ioctl_func, 
fsockopt, 
sockopt_client, 
fopensocket, 
opensocket_client, 
fclosesocket, 
closesocket_client, 
seek_client, 
convfromnetwork, 
convtonetwork, 
convfromutf8, 
progress_client, 
ioctl_client, 
timeout, 
connecttimeout, 
accepttimeout, 
happy_eyeballs_timeout, 
server_response_timeout, 
tftp_blksize, 
filesize, 
low_speed_limit, 
low_speed_time, 
max_send_speed, 
max_recv_speed, 
set_resume_from, 
headers, 
proxyheaders, 
httppost, 
quote, 
postquote, 
prequote, 
source_quote, 
source_prequote, 
source_postquote, 
telnet_options, 
resolve, 
connect_to, 
timevalue, 
httpversion, 
general_ssl, 
dns_cache_timeout, 
buffer_size, 
upload_buffer_size, 
private_data, 
http200aliases, 
ipver, 
max_filesize, 
ssh_keyfunc, 
ssh_keyfunc_userp, 
ssh_auth_types, 
new_file_perms, 
new_directory_perms, 
allowed_protocols, 
redir_protocols, 
mail_rcpt, 
rtspversion, 
chunk_bgn, 
chunk_end, 
fnmatch, 
fnmatch_data, 
gssapi_delegation, 
tcp_keepidle, 
tcp_keepintvl, 
maxconnects, 
expect_100_timeout, 
stream_depends_on, 
stream_dependents, 
resolver_start, 
resolver_start_client, 
ssl, 
proxy_ssl, 
mimepost, 
str, 
keep_post, 
localportrange, 
is_fread_set, 
is_fwrite_set, 
timecondition, 
httpreq, 
proxytype, 
ftp_filemethod, 
ftp_create_missing_dirs, 
use_netrc, 
use_ssl, 
ftpsslauth, 
ftp_ccc, 
scope_id, 
rtspreq, 
stream_weight, 
localport, 
free_referer, 
tftp_no_options, 
sep_headers, 
cookiesession, 
crlf, 
strip_path_slash, 
ssh_compression, 
get_filetime, 
tunnel_thru_httpproxy, 
prefer_ascii, 
ftp_append, 
ftp_list_only, 
ftp_use_port, 
hide_progress, 
http_fail_on_error, 
http_keep_sending_on_error, 
http_follow_location, 
http_transfer_encoding, 
allow_auth_to_other_hosts, 
include_header, 
http_set_referer, 
http_auto_referer, 
opt_no_body, 
upload, 
verbose, 
krb, 
reuse_forbid, 
reuse_fresh, 
ftp_use_epsv, 
ftp_use_eprt, 
ftp_use_pret, 
no_signal, 
global_dns_cache, 
tcp_nodelay, 
ignorecl, 
ftp_skip_ip, 
connect_only, 
http_te_skip, 
http_ce_skip, 
proxy_transfer_mode, 
sasl_ir, 
wildcard_enabled, 
tcp_keepalive, 
tcp_fastopen, 
ssl_enable_npn, 
ssl_enable_alpn, 
path_as_is, 
pipewait, 
suppress_connect_headers, 
dns_shuffle_addresses, 
stream_depends_e, 
haproxyprotocol, 
abstract_unix_socket, 
disallow_username_in_url, 
consider reordering the fields or adding explicit padding members [clang-analyzer-optin.performance.Padding]
struct UserDefined {
       ^
2 warnings generated.

/project/git/Utilities/cmcurl/lib/urldata.h:1457:8: note: Excessive padding in 'struct UserDefined' (120 padding bytes, where 0 is optimal). Optimal fields order: err, debugdata, errorbuffer, proxyport, out, in_set, writeheader, rtp_out, use_port, httpauth, proxyauth, socks5auth, followlocation, maxredirs, postfields, seek_func, postfieldsize, fwrite_func, fwrite_header, fwrite_rtp, fread_func_set, fprogress, fxferinfo, fdebug, ioctl_func, fsockopt, sockopt_client, fopensocket, opensocket_client, fclosesocket, closesocket_client, seek_client, convfromnetwork, convtonetwork, convfromutf8, progress_client, ioctl_client, timeout, connecttimeout, accepttimeout, happy_eyeballs_timeout, server_response_timeout, tftp_blksize, filesize, low_speed_limit, low_speed_time, max_send_speed, max_recv_speed, set_resume_from, headers, proxyheaders, httppost, quote, postquote, prequote, source_quote, source_prequote, source_postquote, telnet_options, resolve, connect_to, timevalue, httpversion, general_ssl, dns_cache_timeout, buffer_size, upload_buffer_size, private_data, http200aliases, ipver, max_filesize, ssh_keyfunc, ssh_keyfunc_userp, ssh_auth_types, new_file_perms, new_directory_perms, allowed_protocols, redir_protocols, mail_rcpt, rtspversion, chunk_bgn, chunk_end, fnmatch, fnmatch_data, gssapi_delegation, tcp_keepidle, tcp_keepintvl, maxconnects, expect_100_timeout, stream_depends_on, stream_dependents, resolver_start, resolver_start_client, ssl, proxy_ssl, mimepost, str, keep_post, localportrange, is_fread_set, is_fwrite_set, timecondition, httpreq, proxytype, ftp_filemethod, ftp_create_missing_dirs, use_netrc, use_ssl, ftpsslauth, ftp_ccc, scope_id, rtspreq, stream_weight, localport, free_referer, tftp_no_options, sep_headers, cookiesession, crlf, strip_path_slash, ssh_compression, get_filetime, tunnel_thru_httpproxy, prefer_ascii, ftp_append, ftp_list_only, ftp_use_port, hide_progress, http_fail_on_error, http_keep_sending_on_error, http_follow_location, http_transfer_encoding, allow_auth_to_other_hosts, include_header, http_set_referer, http_auto_referer, opt_no_body, upload, verbose, krb, reuse_forbid, reuse_fresh, ftp_use_epsv, ftp_use_eprt, ftp_use_pret, no_signal, global_dns_cache, tcp_nodelay, ignorecl, ftp_skip_ip, connect_only, http_te_skip, http_ce_skip, proxy_transfer_mode, sasl_ir, wildcard_enabled, tcp_keepalive, tcp_fastopen, ssl_enable_npn, ssl_enable_alpn, path_as_is, pipewait, suppress_connect_headers, dns_shuffle_addresses, stream_depends_e, haproxyprotocol, abstract_unix_socket, disallow_username_in_url, consider reordering the fields or adding explicit padding members

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpbffJVA.yaml -p=/project/git /project/git/Utilities/cmcurl/lib/formdata.c
/project/git/Utilities/cmcurl/lib/urldata.h:1209:8: warning: Excessive padding in 'struct UrlState' (61 padding bytes, where 5 is optimal). 
Optimal fields order: 
conn_cache, 
lastconnect, 
headerbuff, 
headersize, 
buffer, 
ulbuf, 
current_speed, 
first_host, 
session, 
sessionage, 
scratch, 
prev_signal, 
resolver, 
most_recent_ftp_entrypath, 
crlf_conversions, 
pathbuffer, 
path, 
range, 
resume_from, 
rtsp_next_client_CSeq, 
rtsp_next_server_CSeq, 
rtsp_CSeq_recv, 
infilesize, 
drain, 
fread_func, 
in, 
stream_depends_on, 
keeps_speed, 
expiretime, 
authhost, 
authproxy, 
timeoutlist, 
timenode, 
digest, 
proxydigest, 
tempwrite, 
expires, 
first_remote_port, 
tempcount, 
os_errno, 
httpversion, 
stream_weight, 
multi_owned_by_easy, 
this_is_a_follow, 
refused_stream, 
errorbuf, 
allow_port, 
authproblem, 
ftp_trying_alternative, 
wildcardmatch, 
expect100header, 
prev_block_had_trailing_cr, 
slash_removed, 
use_range, 
rangestringalloc, 
done, 
stream_depends_e, 
consider reordering the fields or adding explicit padding members [clang-analyzer-optin.performance.Padding]
struct UrlState {
       ^
/project/git/Utilities/cmcurl/lib/urldata.h:1209:8: note: Excessive padding in 'struct UrlState' (61 padding bytes, where 5 is optimal). Optimal fields order: conn_cache, lastconnect, headerbuff, headersize, buffer, ulbuf, current_speed, first_host, session, sessionage, scratch, prev_signal, resolver, most_recent_ftp_entrypath, crlf_conversions, pathbuffer, path, range, resume_from, rtsp_next_client_CSeq, rtsp_next_server_CSeq, rtsp_CSeq_recv, infilesize, drain, fread_func, in, stream_depends_on, keeps_speed, expiretime, authhost, authproxy, timeoutlist, timenode, digest, proxydigest, tempwrite, expires, first_remote_port, tempcount, os_errno, httpversion, stream_weight, multi_owned_by_easy, this_is_a_follow, refused_stream, errorbuf, allow_port, authproblem, ftp_trying_alternative, wildcardmatch, expect100header, prev_block_had_trailing_cr, slash_removed, use_range, rangestringalloc, done, stream_depends_e, consider reordering the fields or adding explicit padding members
/project/git/Utilities/cmcurl/lib/urldata.h:1457:8: warning: Excessive padding in 'struct UserDefined' (120 padding bytes, where 0 is optimal). 
Optimal fields order: 
err, 
debugdata, 
errorbuffer, 
proxyport, 
out, 
in_set, 
writeheader, 
rtp_out, 
use_port, 
httpauth, 
proxyauth, 
socks5auth, 
followlocation, 
maxredirs, 
postfields, 
seek_func, 
postfieldsize, 
fwrite_func, 
fwrite_header, 
fwrite_rtp, 
fread_func_set, 
fprogress, 
fxferinfo, 
fdebug, 
ioctl_func, 
fsockopt, 
sockopt_client, 
fopensocket, 
opensocket_client, 
fclosesocket, 
closesocket_client, 
seek_client, 
convfromnetwork, 
convtonetwork, 
convfromutf8, 
progress_client, 
ioctl_client, 
timeout, 
connecttimeout, 
accepttimeout, 
happy_eyeballs_timeout, 
server_response_timeout, 
tftp_blksize, 
filesize, 
low_speed_limit, 
low_speed_time, 
max_send_speed, 
max_recv_speed, 
set_resume_from, 
headers, 
proxyheaders, 
httppost, 
quote, 
postquote, 
prequote, 
source_quote, 
source_prequote, 
source_postquote, 
telnet_options, 
resolve, 
connect_to, 
timevalue, 
httpversion, 
general_ssl, 
dns_cache_timeout, 
buffer_size, 
upload_buffer_size, 
private_data, 
http200aliases, 
ipver, 
max_filesize, 
ssh_keyfunc, 
ssh_keyfunc_userp, 
ssh_auth_types, 
new_file_perms, 
new_directory_perms, 
allowed_protocols, 
redir_protocols, 
mail_rcpt, 
rtspversion, 
chunk_bgn, 
chunk_end, 
fnmatch, 
fnmatch_data, 
gssapi_delegation, 
tcp_keepidle, 
tcp_keepintvl, 
maxconnects, 
expect_100_timeout, 
stream_depends_on, 
stream_dependents, 
resolver_start, 
resolver_start_client, 
ssl, 
proxy_ssl, 
mimepost, 
str, 
keep_post, 
localportrange, 
is_fread_set, 
is_fwrite_set, 
timecondition, 
httpreq, 
proxytype, 
ftp_filemethod, 
ftp_create_missing_dirs, 
use_netrc, 
use_ssl, 
ftpsslauth, 
ftp_ccc, 
scope_id, 
rtspreq, 
stream_weight, 
localport, 
free_referer, 
tftp_no_options, 
sep_headers, 
cookiesession, 
crlf, 
strip_path_slash, 
ssh_compression, 
get_filetime, 
tunnel_thru_httpproxy, 
prefer_ascii, 
ftp_append, 
ftp_list_only, 
ftp_use_port, 
hide_progress, 
http_fail_on_error, 
http_keep_sending_on_error, 
http_follow_location, 
http_transfer_encoding, 
allow_auth_to_other_hosts, 
include_header, 
http_set_referer, 
http_auto_referer, 
opt_no_body, 
upload, 
verbose, 
krb, 
reuse_forbid, 
reuse_fresh, 
ftp_use_epsv, 
ftp_use_eprt, 
ftp_use_pret, 
no_signal, 
global_dns_cache, 
tcp_nodelay, 
ignorecl, 
ftp_skip_ip, 
connect_only, 
http_te_skip, 
http_ce_skip, 
proxy_transfer_mode, 
sasl_ir, 
wildcard_enabled, 
tcp_keepalive, 
tcp_fastopen, 
ssl_enable_npn, 
ssl_enable_alpn, 
path_as_is, 
pipewait, 
suppress_connect_headers, 
dns_shuffle_addresses, 
stream_depends_e, 
haproxyprotocol, 
abstract_unix_socket, 
disallow_username_in_url, 
consider reordering the fields or adding explicit padding members [clang-analyzer-optin.performance.Padding]
struct UserDefined {
       ^
2 warnings generated.

/project/git/Utilities/cmcurl/lib/urldata.h:1457:8: note: Excessive padding in 'struct UserDefined' (120 padding bytes, where 0 is optimal). Optimal fields order: err, debugdata, errorbuffer, proxyport, out, in_set, writeheader, rtp_out, use_port, httpauth, proxyauth, socks5auth, followlocation, maxredirs, postfields, seek_func, postfieldsize, fwrite_func, fwrite_header, fwrite_rtp, fread_func_set, fprogress, fxferinfo, fdebug, ioctl_func, fsockopt, sockopt_client, fopensocket, opensocket_client, fclosesocket, closesocket_client, seek_client, convfromnetwork, convtonetwork, convfromutf8, progress_client, ioctl_client, timeout, connecttimeout, accepttimeout, happy_eyeballs_timeout, server_response_timeout, tftp_blksize, filesize, low_speed_limit, low_speed_time, max_send_speed, max_recv_speed, set_resume_from, headers, proxyheaders, httppost, quote, postquote, prequote, source_quote, source_prequote, source_postquote, telnet_options, resolve, connect_to, timevalue, httpversion, general_ssl, dns_cache_timeout, buffer_size, upload_buffer_size, private_data, http200aliases, ipver, max_filesize, ssh_keyfunc, ssh_keyfunc_userp, ssh_auth_types, new_file_perms, new_directory_perms, allowed_protocols, redir_protocols, mail_rcpt, rtspversion, chunk_bgn, chunk_end, fnmatch, fnmatch_data, gssapi_delegation, tcp_keepidle, tcp_keepintvl, maxconnects, expect_100_timeout, stream_depends_on, stream_dependents, resolver_start, resolver_start_client, ssl, proxy_ssl, mimepost, str, keep_post, localportrange, is_fread_set, is_fwrite_set, timecondition, httpreq, proxytype, ftp_filemethod, ftp_create_missing_dirs, use_netrc, use_ssl, ftpsslauth, ftp_ccc, scope_id, rtspreq, stream_weight, localport, free_referer, tftp_no_options, sep_headers, cookiesession, crlf, strip_path_slash, ssh_compression, get_filetime, tunnel_thru_httpproxy, prefer_ascii, ftp_append, ftp_list_only, ftp_use_port, hide_progress, http_fail_on_error, http_keep_sending_on_error, http_follow_location, http_transfer_encoding, allow_auth_to_other_hosts, include_header, http_set_referer, http_auto_referer, opt_no_body, upload, verbose, krb, reuse_forbid, reuse_fresh, ftp_use_epsv, ftp_use_eprt, ftp_use_pret, no_signal, global_dns_cache, tcp_nodelay, ignorecl, ftp_skip_ip, connect_only, http_te_skip, http_ce_skip, proxy_transfer_mode, sasl_ir, wildcard_enabled, tcp_keepalive, tcp_fastopen, ssl_enable_npn, ssl_enable_alpn, path_as_is, pipewait, suppress_connect_headers, dns_shuffle_addresses, stream_depends_e, haproxyprotocol, abstract_unix_socket, disallow_username_in_url, consider reordering the fields or adding explicit padding members

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpzsuqaz.yaml -p=/project/git /project/git/Utilities/cmcurl/lib/security.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpZq7pmv.yaml -p=/project/git /project/git/Utilities/cmcurl/lib/fileinfo.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpTl45pi.yaml -p=/project/git /project/git/Utilities/cmcurl/lib/wildcard.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpy8JUcE.yaml -p=/project/git /project/git/Utilities/cmcurl/lib/krb5.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpWohlt0.yaml -p=/project/git /project/git/Utilities/cmcurl/lib/memdebug.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpFRnr02.yaml -p=/project/git /project/git/Utilities/cmcurl/lib/mprintf.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmphsG02q.yaml -p=/project/git /project/git/Utilities/cmcurl/lib/strtok.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpw_m3Bg.yaml -p=/project/git /project/git/Source/kwsys/SystemInformation.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpWu8455.yaml -p=/project/git /project/git/Utilities/cmcurl/lib/llist.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmp7kBH70.yaml -p=/project/git /project/git/Utilities/cmcurl/lib/hash.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpaKwhQ9.yaml -p=/project/git /project/git/Utilities/cmcurl/lib/strcase.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpAxzyx6.yaml -p=/project/git /project/git/Utilities/cmcurl/lib/curl_fnmatch.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpNs1UW4.yaml -p=/project/git /project/git/Utilities/cmcurl/lib/share.c
/project/git/Utilities/cmcurl/lib/urldata.h:1209:8: warning: Excessive padding in 'struct UrlState' (61 padding bytes, where 5 is optimal). 
Optimal fields order: 
conn_cache, 
lastconnect, 
headerbuff, 
headersize, 
buffer, 
ulbuf, 
current_speed, 
first_host, 
session, 
sessionage, 
scratch, 
prev_signal, 
resolver, 
most_recent_ftp_entrypath, 
crlf_conversions, 
pathbuffer, 
path, 
range, 
resume_from, 
rtsp_next_client_CSeq, 
rtsp_next_server_CSeq, 
rtsp_CSeq_recv, 
infilesize, 
drain, 
fread_func, 
in, 
stream_depends_on, 
keeps_speed, 
expiretime, 
authhost, 
authproxy, 
timeoutlist, 
timenode, 
digest, 
proxydigest, 
tempwrite, 
expires, 
first_remote_port, 
tempcount, 
os_errno, 
httpversion, 
stream_weight, 
multi_owned_by_easy, 
this_is_a_follow, 
refused_stream, 
errorbuf, 
allow_port, 
authproblem, 
ftp_trying_alternative, 
wildcardmatch, 
expect100header, 
prev_block_had_trailing_cr, 
slash_removed, 
use_range, 
rangestringalloc, 
done, 
stream_depends_e, 
consider reordering the fields or adding explicit padding members [clang-analyzer-optin.performance.Padding]
struct UrlState {
       ^
/project/git/Utilities/cmcurl/lib/urldata.h:1209:8: note: Excessive padding in 'struct UrlState' (61 padding bytes, where 5 is optimal). Optimal fields order: conn_cache, lastconnect, headerbuff, headersize, buffer, ulbuf, current_speed, first_host, session, sessionage, scratch, prev_signal, resolver, most_recent_ftp_entrypath, crlf_conversions, pathbuffer, path, range, resume_from, rtsp_next_client_CSeq, rtsp_next_server_CSeq, rtsp_CSeq_recv, infilesize, drain, fread_func, in, stream_depends_on, keeps_speed, expiretime, authhost, authproxy, timeoutlist, timenode, digest, proxydigest, tempwrite, expires, first_remote_port, tempcount, os_errno, httpversion, stream_weight, multi_owned_by_easy, this_is_a_follow, refused_stream, errorbuf, allow_port, authproblem, ftp_trying_alternative, wildcardmatch, expect100header, prev_block_had_trailing_cr, slash_removed, use_range, rangestringalloc, done, stream_depends_e, consider reordering the fields or adding explicit padding members
/project/git/Utilities/cmcurl/lib/urldata.h:1457:8: warning: Excessive padding in 'struct UserDefined' (120 padding bytes, where 0 is optimal). 
Optimal fields order: 
err, 
debugdata, 
errorbuffer, 
proxyport, 
out, 
in_set, 
writeheader, 
rtp_out, 
use_port, 
httpauth, 
proxyauth, 
socks5auth, 
followlocation, 
maxredirs, 
postfields, 
seek_func, 
postfieldsize, 
fwrite_func, 
fwrite_header, 
fwrite_rtp, 
fread_func_set, 
fprogress, 
fxferinfo, 
fdebug, 
ioctl_func, 
fsockopt, 
sockopt_client, 
fopensocket, 
opensocket_client, 
fclosesocket, 
closesocket_client, 
seek_client, 
convfromnetwork, 
convtonetwork, 
convfromutf8, 
progress_client, 
ioctl_client, 
timeout, 
connecttimeout, 
accepttimeout, 
happy_eyeballs_timeout, 
server_response_timeout, 
tftp_blksize, 
filesize, 
low_speed_limit, 
low_speed_time, 
max_send_speed, 
max_recv_speed, 
set_resume_from, 
headers, 
proxyheaders, 
httppost, 
quote, 
postquote, 
prequote, 
source_quote, 
source_prequote, 
source_postquote, 
telnet_options, 
resolve, 
connect_to, 
timevalue, 
httpversion, 
general_ssl, 
dns_cache_timeout, 
buffer_size, 
upload_buffer_size, 
private_data, 
http200aliases, 
ipver, 
max_filesize, 
ssh_keyfunc, 
ssh_keyfunc_userp, 
ssh_auth_types, 
new_file_perms, 
new_directory_perms, 
allowed_protocols, 
redir_protocols, 
mail_rcpt, 
rtspversion, 
chunk_bgn, 
chunk_end, 
fnmatch, 
fnmatch_data, 
gssapi_delegation, 
tcp_keepidle, 
tcp_keepintvl, 
maxconnects, 
expect_100_timeout, 
stream_depends_on, 
stream_dependents, 
resolver_start, 
resolver_start_client, 
ssl, 
proxy_ssl, 
mimepost, 
str, 
keep_post, 
localportrange, 
is_fread_set, 
is_fwrite_set, 
timecondition, 
httpreq, 
proxytype, 
ftp_filemethod, 
ftp_create_missing_dirs, 
use_netrc, 
use_ssl, 
ftpsslauth, 
ftp_ccc, 
scope_id, 
rtspreq, 
stream_weight, 
localport, 
free_referer, 
tftp_no_options, 
sep_headers, 
cookiesession, 
crlf, 
strip_path_slash, 
ssh_compression, 
get_filetime, 
tunnel_thru_httpproxy, 
prefer_ascii, 
ftp_append, 
ftp_list_only, 
ftp_use_port, 
hide_progress, 
http_fail_on_error, 
http_keep_sending_on_error, 
http_follow_location, 
http_transfer_encoding, 
allow_auth_to_other_hosts, 
include_header, 
http_set_referer, 
http_auto_referer, 
opt_no_body, 
upload, 
verbose, 
krb, 
reuse_forbid, 
reuse_fresh, 
ftp_use_epsv, 
ftp_use_eprt, 
ftp_use_pret, 
no_signal, 
global_dns_cache, 
tcp_nodelay, 
ignorecl, 
ftp_skip_ip, 
connect_only, 
http_te_skip, 
http_ce_skip, 
proxy_transfer_mode, 
sasl_ir, 
wildcard_enabled, 
tcp_keepalive, 
tcp_fastopen, 
ssl_enable_npn, 
ssl_enable_alpn, 
path_as_is, 
pipewait, 
suppress_connect_headers, 
dns_shuffle_addresses, 
stream_depends_e, 
haproxyprotocol, 
abstract_unix_socket, 
disallow_username_in_url, 
consider reordering the fields or adding explicit padding members [clang-analyzer-optin.performance.Padding]
struct UserDefined {
       ^
/project/git/Utilities/cmcurl/lib/urldata.h:1457:8: note: Excessive padding in 'struct UserDefined' (120 padding bytes, where 0 is optimal). Optimal fields order: err, debugdata, errorbuffer, proxyport, out, in_set, writeheader, rtp_out, use_port, httpauth, proxyauth, socks5auth, followlocation, maxredirs, postfields, seek_func, postfieldsize, fwrite_func, fwrite_header, fwrite_rtp, fread_func_set, fprogress, fxferinfo, fdebug, ioctl_func, fsockopt, sockopt_client, fopensocket, opensocket_client, fclosesocket, closesocket_client, seek_client, convfromnetwork, convtonetwork, convfromutf8, progress_client, ioctl_client, timeout, connecttimeout, accepttimeout, happy_eyeballs_timeout, server_response_timeout, tftp_blksize, filesize, low_speed_limit, low_speed_time, max_send_speed, max_recv_speed, set_resume_from, headers, proxyheaders, httppost, quote, postquote, prequote, source_quote, source_prequote, source_postquote, telnet_options, resolve, connect_to, timevalue, httpversion, general_ssl, dns_cache_timeout, buffer_size, upload_buffer_size, private_data, http200aliases, ipver, max_filesize, ssh_keyfunc, ssh_keyfunc_userp, ssh_auth_types, new_file_perms, new_directory_perms, allowed_protocols, redir_protocols, mail_rcpt, rtspversion, chunk_bgn, chunk_end, fnmatch, fnmatch_data, gssapi_delegation, tcp_keepidle, tcp_keepintvl, maxconnects, expect_100_timeout, stream_depends_on, stream_dependents, resolver_start, resolver_start_client, ssl, proxy_ssl, mimepost, str, keep_post, localportrange, is_fread_set, is_fwrite_set, timecondition, httpreq, proxytype, ftp_filemethod, ftp_create_missing_dirs, use_netrc, use_ssl, ftpsslauth, ftp_ccc, scope_id, rtspreq, stream_weight, localport, free_referer, tftp_no_options, sep_headers, cookiesession, crlf, strip_path_slash, ssh_compression, get_filetime, tunnel_thru_httpproxy, prefer_ascii, ftp_append, ftp_list_only, ftp_use_port, hide_progress, http_fail_on_error, http_keep_sending_on_error, http_follow_location, http_transfer_encoding, allow_auth_to_other_hosts, include_header, http_set_referer, http_auto_referer, opt_no_body, upload, verbose, krb, reuse_forbid, reuse_fresh, ftp_use_epsv, ftp_use_eprt, ftp_use_pret, no_signal, global_dns_cache, tcp_nodelay, ignorecl, ftp_skip_ip, connect_only, http_te_skip, http_ce_skip, proxy_transfer_mode, sasl_ir, wildcard_enabled, tcp_keepalive, tcp_fastopen, ssl_enable_npn, ssl_enable_alpn, path_as_is, pipewait, suppress_connect_headers, dns_shuffle_addresses, stream_depends_e, haproxyprotocol, abstract_unix_socket, disallow_username_in_url, consider reordering the fields or adding explicit padding members

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmp59aPvU.yaml -p=/project/git /project/git/Utilities/cmcurl/lib/http_digest.c
/project/git/Utilities/cmcurl/lib/urldata.h:1209:8: warning: Excessive padding in 'struct UrlState' (61 padding bytes, where 5 is optimal). 
Optimal fields order: 
conn_cache, 
lastconnect, 
headerbuff, 
headersize, 
buffer, 
ulbuf, 
current_speed, 
first_host, 
session, 
sessionage, 
scratch, 
prev_signal, 
resolver, 
most_recent_ftp_entrypath, 
crlf_conversions, 
pathbuffer, 
path, 
range, 
resume_from, 
rtsp_next_client_CSeq, 
rtsp_next_server_CSeq, 
rtsp_CSeq_recv, 
infilesize, 
drain, 
fread_func, 
in, 
stream_depends_on, 
keeps_speed, 
expiretime, 
authhost, 
authproxy, 
timeoutlist, 
timenode, 
digest, 
proxydigest, 
tempwrite, 
expires, 
first_remote_port, 
tempcount, 
os_errno, 
httpversion, 
stream_weight, 
multi_owned_by_easy, 
this_is_a_follow, 
refused_stream, 
errorbuf, 
allow_port, 
authproblem, 
ftp_trying_alternative, 
wildcardmatch, 
expect100header, 
prev_block_had_trailing_cr, 
slash_removed, 
use_range, 
rangestringalloc, 
done, 
stream_depends_e, 
consider reordering the fields or adding explicit padding members [clang-analyzer-optin.performance.Padding]
struct UrlState {
       ^
/project/git/Utilities/cmcurl/lib/urldata.h:1209:8: note: Excessive padding in 'struct UrlState' (61 padding bytes, where 5 is optimal). Optimal fields order: conn_cache, lastconnect, headerbuff, headersize, buffer, ulbuf, current_speed, first_host, session, sessionage, scratch, prev_signal, resolver, most_recent_ftp_entrypath, crlf_conversions, pathbuffer, path, range, resume_from, rtsp_next_client_CSeq, rtsp_next_server_CSeq, rtsp_CSeq_recv, infilesize, drain, fread_func, in, stream_depends_on, keeps_speed, expiretime, authhost, authproxy, timeoutlist, timenode, digest, proxydigest, tempwrite, expires, first_remote_port, tempcount, os_errno, httpversion, stream_weight, multi_owned_by_easy, this_is_a_follow, refused_stream, errorbuf, allow_port, authproblem, ftp_trying_alternative, wildcardmatch, expect100header, prev_block_had_trailing_cr, slash_removed, use_range, rangestringalloc, done, stream_depends_e, consider reordering the fields or adding explicit padding members
/project/git/Utilities/cmcurl/lib/urldata.h:1457:8: warning: Excessive padding in 'struct UserDefined' (120 padding bytes, where 0 is optimal). 
Optimal fields order: 
err, 
debugdata, 
errorbuffer, 
proxyport, 
out, 
in_set, 
writeheader, 
rtp_out, 
use_port, 
httpauth, 
proxyauth, 
socks5auth, 
followlocation, 
maxredirs, 
postfields, 
seek_func, 
postfieldsize, 
fwrite_func, 
fwrite_header, 
fwrite_rtp, 
fread_func_set, 
fprogress, 
fxferinfo, 
fdebug, 
ioctl_func, 
fsockopt, 
sockopt_client, 
fopensocket, 
opensocket_client, 
fclosesocket, 
closesocket_client, 
seek_client, 
convfromnetwork, 
convtonetwork, 
convfromutf8, 
progress_client, 
ioctl_client, 
timeout, 
connecttimeout, 
accepttimeout, 
happy_eyeballs_timeout, 
server_response_timeout, 
tftp_blksize, 
filesize, 
low_speed_limit, 
low_speed_time, 
max_send_speed, 
max_recv_speed, 
set_resume_from, 
headers, 
proxyheaders, 
httppost, 
quote, 
postquote, 
prequote, 
source_quote, 
source_prequote, 
source_postquote, 
telnet_options, 
resolve, 
connect_to, 
timevalue, 
httpversion, 
general_ssl, 
dns_cache_timeout, 
buffer_size, 
upload_buffer_size, 
private_data, 
http200aliases, 
ipver, 
max_filesize, 
ssh_keyfunc, 
ssh_keyfunc_userp, 
ssh_auth_types, 
new_file_perms, 
new_directory_perms, 
allowed_protocols, 
redir_protocols, 
mail_rcpt, 
rtspversion, 
chunk_bgn, 
chunk_end, 
fnmatch, 
fnmatch_data, 
gssapi_delegation, 
tcp_keepidle, 
tcp_keepintvl, 
maxconnects, 
expect_100_timeout, 
stream_depends_on, 
stream_dependents, 
resolver_start, 
resolver_start_client, 
ssl, 
proxy_ssl, 
mimepost, 
str, 
keep_post, 
localportrange, 
is_fread_set, 
is_fwrite_set, 
timecondition, 
httpreq, 
proxytype, 
ftp_filemethod, 
ftp_create_missing_dirs, 
use_netrc, 
use_ssl, 
ftpsslauth, 
ftp_ccc, 
scope_id, 
rtspreq, 
stream_weight, 
localport, 
free_referer, 
tftp_no_options, 
sep_headers, 
cookiesession, 
crlf, 
strip_path_slash, 
ssh_compression, 
get_filetime, 
tunnel_thru_httpproxy, 
prefer_ascii, 
ftp_append, 
ftp_list_only, 
ftp_use_port, 
hide_progress, 
http_fail_on_error, 
http_keep_sending_on_error, 
http_follow_location, 
http_transfer_encoding, 
allow_auth_to_other_hosts, 
include_header, 
http_set_referer, 
http_auto_referer, 
opt_no_body, 
upload, 
verbose, 
krb, 
reuse_forbid, 
reuse_fresh, 
ftp_use_epsv, 
ftp_use_eprt, 
ftp_use_pret, 
no_signal, 
global_dns_cache, 
tcp_nodelay, 
ignorecl, 
ftp_skip_ip, 
connect_only, 
http_te_skip, 
http_ce_skip, 
proxy_transfer_mode, 
sasl_ir, 
wildcard_enabled, 
tcp_keepalive, 
tcp_fastopen, 
ssl_enable_npn, 
ssl_enable_alpn, 
path_as_is, 
pipewait, 
suppress_connect_headers, 
2 warnings generated.

dns_shuffle_addresses, 
stream_depends_e, 
haproxyprotocol, 
abstract_unix_socket, 
disallow_username_in_url, 
consider reordering the fields or adding explicit padding members [clang-analyzer-optin.performance.Padding]
struct UserDefined {
       ^
/project/git/Utilities/cmcurl/lib/urldata.h:1457:8: note: Excessive padding in 'struct UserDefined' (120 padding bytes, where 0 is optimal). Optimal fields order: err, debugdata, errorbuffer, proxyport, out, in_set, writeheader, rtp_out, use_port, httpauth, proxyauth, socks5auth, followlocation, maxredirs, postfields, seek_func, postfieldsize, fwrite_func, fwrite_header, fwrite_rtp, fread_func_set, fprogress, fxferinfo, fdebug, ioctl_func, fsockopt, sockopt_client, fopensocket, opensocket_client, fclosesocket, closesocket_client, seek_client, convfromnetwork, convtonetwork, convfromutf8, progress_client, ioctl_client, timeout, connecttimeout, accepttimeout, happy_eyeballs_timeout, server_response_timeout, tftp_blksize, filesize, low_speed_limit, low_speed_time, max_send_speed, max_recv_speed, set_resume_from, headers, proxyheaders, httppost, quote, postquote, prequote, source_quote, source_prequote, source_postquote, telnet_options, resolve, connect_to, timevalue, httpversion, general_ssl, dns_cache_timeout, buffer_size, upload_buffer_size, private_data, http200aliases, ipver, max_filesize, ssh_keyfunc, ssh_keyfunc_userp, ssh_auth_types, new_file_perms, new_directory_perms, allowed_protocols, redir_protocols, mail_rcpt, rtspversion, chunk_bgn, chunk_end, fnmatch, fnmatch_data, gssapi_delegation, tcp_keepidle, tcp_keepintvl, maxconnects, expect_100_timeout, stream_depends_on, stream_dependents, resolver_start, resolver_start_client, ssl, proxy_ssl, mimepost, str, keep_post, localportrange, is_fread_set, is_fwrite_set, timecondition, httpreq, proxytype, ftp_filemethod, ftp_create_missing_dirs, use_netrc, use_ssl, ftpsslauth, ftp_ccc, scope_id, rtspreq, stream_weight, localport, free_referer, tftp_no_options, sep_headers, cookiesession, crlf, strip_path_slash, ssh_compression, get_filetime, tunnel_thru_httpproxy, prefer_ascii, ftp_append, ftp_list_only, ftp_use_port, hide_progress, http_fail_on_error, http_keep_sending_on_error, http_follow_location, http_transfer_encoding, allow_auth_to_other_hosts, include_header, http_set_referer, http_auto_referer, opt_no_body, upload, verbose, krb, reuse_forbid, reuse_fresh, ftp_use_epsv, ftp_use_eprt, ftp_use_pret, no_signal, global_dns_cache, tcp_nodelay, ignorecl, ftp_skip_ip, connect_only, http_te_skip, http_ce_skip, proxy_transfer_mode, sasl_ir, wildcard_enabled, tcp_keepalive, tcp_fastopen, ssl_enable_npn, ssl_enable_alpn, path_as_is, pipewait, suppress_connect_headers, dns_shuffle_addresses, stream_depends_e, haproxyprotocol, abstract_unix_socket, disallow_username_in_url, consider reordering the fields or adding explicit padding members

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpyoFek2.yaml -p=/project/git /project/git/Utilities/cmcurl/lib/md4.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpE20MpW.yaml -p=/project/git /project/git/Utilities/cmcurl/lib/ftplistparser.c
/project/git/Utilities/cmcurl/lib/urldata.h:1209:8: warning: Excessive padding in 'struct UrlState' (61 padding bytes, where 5 is optimal). 
Optimal fields order: 
conn_cache, 
lastconnect, 
headerbuff, 
headersize, 
buffer, 
ulbuf, 
current_speed, 
first_host, 
session, 
sessionage, 
scratch, 
prev_signal, 
resolver, 
most_recent_ftp_entrypath, 
crlf_conversions, 
pathbuffer, 
path, 
range, 
resume_from, 
rtsp_next_client_CSeq, 
rtsp_next_server_CSeq, 
rtsp_CSeq_recv, 
infilesize, 
drain, 
fread_func, 
in, 
stream_depends_on, 
keeps_speed, 
expiretime, 
authhost, 
authproxy, 
timeoutlist, 
timenode, 
digest, 
proxydigest, 
tempwrite, 
expires, 
first_remote_port, 
tempcount, 
os_errno, 
httpversion, 
stream_weight, 
multi_owned_by_easy, 
this_is_a_follow, 
refused_stream, 
errorbuf, 
allow_port, 
authproblem, 
ftp_trying_alternative, 
wildcardmatch, 
expect100header, 
prev_block_had_trailing_cr, 
slash_removed, 
use_range, 
rangestringalloc, 
done, 
stream_depends_e, 
consider reordering the fields or adding explicit padding members [clang-analyzer-optin.performance.Padding]
struct UrlState {
       ^
/project/git/Utilities/cmcurl/lib/urldata.h:1209:8: note: Excessive padding in 'struct UrlState' (61 padding bytes, where 5 is optimal). Optimal fields order: conn_cache, lastconnect, headerbuff, headersize, buffer, ulbuf, current_speed, first_host, session, sessionage, scratch, prev_signal, resolver, most_recent_ftp_entrypath, crlf_conversions, pathbuffer, path, range, resume_from, rtsp_next_client_CSeq, rtsp_next_server_CSeq, rtsp_CSeq_recv, infilesize, drain, fread_func, in, stream_depends_on, keeps_speed, expiretime, authhost, authproxy, timeoutlist, timenode, digest, proxydigest, tempwrite, expires, first_remote_port, tempcount, os_errno, httpversion, stream_weight, multi_owned_by_easy, this_is_a_follow, refused_stream, errorbuf, allow_port, authproblem, ftp_trying_alternative, wildcardmatch, expect100header, prev_block_had_trailing_cr, slash_removed, use_range, rangestringalloc, done, stream_depends_e, consider reordering the fields or adding explicit padding members
/project/git/Utilities/cmcurl/lib/urldata.h:1457:8: warning: Excessive padding in 'struct UserDefined' (120 padding bytes, where 0 is optimal). 
Optimal fields order: 
err, 
debugdata, 
errorbuffer, 
proxyport, 
out, 
in_set, 
writeheader, 
rtp_out, 
use_port, 
httpauth, 
proxyauth, 
socks5auth, 
followlocation, 
maxredirs, 
postfields, 
seek_func, 
postfieldsize, 
fwrite_func, 
fwrite_header, 
fwrite_rtp, 
fread_func_set, 
fprogress, 
fxferinfo, 
fdebug, 
ioctl_func, 
fsockopt, 
sockopt_client, 
fopensocket, 
opensocket_client, 
fclosesocket, 
closesocket_client, 
seek_client, 
convfromnetwork, 
convtonetwork, 
convfromutf8, 
progress_client, 
ioctl_client, 
timeout, 
connecttimeout, 
accepttimeout, 
happy_eyeballs_timeout, 
server_response_timeout, 
tftp_blksize, 
filesize, 
low_speed_limit, 
low_speed_time, 
max_send_speed, 
max_recv_speed, 
set_resume_from, 
headers, 
proxyheaders, 
httppost, 
quote, 
postquote, 
prequote, 
source_quote, 
source_prequote, 
source_postquote, 
telnet_options, 
resolve, 
connect_to, 
timevalue, 
httpversion, 
general_ssl, 
dns_cache_timeout, 
buffer_size, 
upload_buffer_size, 
private_data, 
http200aliases, 
ipver, 
max_filesize, 
ssh_keyfunc, 
ssh_keyfunc_userp, 
ssh_auth_types, 
new_file_perms, 
new_directory_perms, 
allowed_protocols, 
redir_protocols, 
mail_rcpt, 
rtspversion, 
chunk_bgn, 
chunk_end, 
fnmatch, 
fnmatch_data, 
gssapi_delegation, 
tcp_keepidle, 
tcp_keepintvl, 
maxconnects, 
expect_100_timeout, 
stream_depends_on, 
stream_dependents, 
resolver_start, 
resolver_start_client, 
ssl, 
proxy_ssl, 
mimepost, 
str, 
keep_post, 
localportrange, 
is_fread_set, 
is_fwrite_set, 
timecondition, 
httpreq, 
proxytype, 
ftp_filemethod, 
ftp_create_missing_dirs, 
use_netrc, 
use_ssl, 
ftpsslauth, 
ftp_ccc, 
scope_id, 
rtspreq, 
stream_weight, 
localport, 
free_referer, 
tftp_no_options, 
sep_headers, 
cookiesession, 
crlf, 
strip_path_slash, 
ssh_compression, 
get_filetime, 
tunnel_thru_httpproxy, 
prefer_ascii, 
ftp_append, 
ftp_list_only, 
ftp_use_port, 
hide_progress, 
http_fail_on_error, 
http_keep_sending_on_error, 
http_follow_location, 
http_transfer_encoding, 
allow_auth_to_other_hosts, 
include_header, 
http_set_referer, 
http_auto_referer, 
opt_no_body, 
upload, 
verbose, 
krb, 
reuse_forbid, 
reuse_fresh, 
ftp_use_epsv, 
ftp_use_eprt, 
ftp_use_pret, 
no_signal, 
global_dns_cache, 
tcp_nodelay, 
ignorecl, 
ftp_skip_ip, 
connect_only, 
http_te_skip, 
http_ce_skip, 
proxy_transfer_mode, 
sasl_ir, 
wildcard_enabled, 
tcp_keepalive, 
tcp_fastopen, 
ssl_enable_npn, 
ssl_enable_alpn, 
path_as_is, 
pipewait, 
suppress_connect_headers, 
dns_shuffle_addresses, 
stream_depends_e, 
haproxyprotocol, 
abstract_unix_socket, 
disallow_username_in_url, 
consider reordering the fields or adding explicit padding members [clang-analyzer-optin.performance.Padding]
2 warnings generated.

2 warnings generated.

struct UserDefined {
       ^
/project/git/Utilities/cmcurl/lib/urldata.h:1457:8: note: Excessive padding in 'struct UserDefined' (120 padding bytes, where 0 is optimal). Optimal fields order: err, debugdata, errorbuffer, proxyport, out, in_set, writeheader, rtp_out, use_port, httpauth, proxyauth, socks5auth, followlocation, maxredirs, postfields, seek_func, postfieldsize, fwrite_func, fwrite_header, fwrite_rtp, fread_func_set, fprogress, fxferinfo, fdebug, ioctl_func, fsockopt, sockopt_client, fopensocket, opensocket_client, fclosesocket, closesocket_client, seek_client, convfromnetwork, convtonetwork, convfromutf8, progress_client, ioctl_client, timeout, connecttimeout, accepttimeout, happy_eyeballs_timeout, server_response_timeout, tftp_blksize, filesize, low_speed_limit, low_speed_time, max_send_speed, max_recv_speed, set_resume_from, headers, proxyheaders, httppost, quote, postquote, prequote, source_quote, source_prequote, source_postquote, telnet_options, resolve, connect_to, timevalue, httpversion, general_ssl, dns_cache_timeout, buffer_size, upload_buffer_size, private_data, http200aliases, ipver, max_filesize, ssh_keyfunc, ssh_keyfunc_userp, ssh_auth_types, new_file_perms, new_directory_perms, allowed_protocols, redir_protocols, mail_rcpt, rtspversion, chunk_bgn, chunk_end, fnmatch, fnmatch_data, gssapi_delegation, tcp_keepidle, tcp_keepintvl, maxconnects, expect_100_timeout, stream_depends_on, stream_dependents, resolver_start, resolver_start_client, ssl, proxy_ssl, mimepost, str, keep_post, localportrange, is_fread_set, is_fwrite_set, timecondition, httpreq, proxytype, ftp_filemethod, ftp_create_missing_dirs, use_netrc, use_ssl, ftpsslauth, ftp_ccc, scope_id, rtspreq, stream_weight, localport, free_referer, tftp_no_options, sep_headers, cookiesession, crlf, strip_path_slash, ssh_compression, get_filetime, tunnel_thru_httpproxy, prefer_ascii, ftp_append, ftp_list_only, ftp_use_port, hide_progress, http_fail_on_error, http_keep_sending_on_error, http_follow_location, http_transfer_encoding, allow_auth_to_other_hosts, include_header, http_set_referer, http_auto_referer, opt_no_body, upload, verbose, krb, reuse_forbid, reuse_fresh, ftp_use_epsv, ftp_use_eprt, ftp_use_pret, no_signal, global_dns_cache, tcp_nodelay, ignorecl, ftp_skip_ip, connect_only, http_te_skip, http_ce_skip, proxy_transfer_mode, sasl_ir, wildcard_enabled, tcp_keepalive, tcp_fastopen, ssl_enable_npn, ssl_enable_alpn, path_as_is, pipewait, suppress_connect_headers, dns_shuffle_addresses, stream_depends_e, haproxyprotocol, abstract_unix_socket, disallow_username_in_url, consider reordering the fields or adding explicit padding members

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpHQXX62.yaml -p=/project/git /project/git/Utilities/cmcurl/lib/http_negotiate.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmp_3s6ZN.yaml -p=/project/git /project/git/Utilities/cmcurl/lib/inet_pton.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpHVizCo.yaml -p=/project/git /project/git/Utilities/cmcurl/lib/strtoofft.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpk32twJ.yaml -p=/project/git /project/git/Utilities/cmcurl/lib/http_chunks.c
/project/git/Utilities/cmcurl/lib/urldata.h:1209:8: warning: Excessive padding in 'struct UrlState' (61 padding bytes, where 5 is optimal). 
Optimal fields order: 
conn_cache, 
lastconnect, 
headerbuff, 
headersize, 
buffer, 
ulbuf, 
current_speed, 
first_host, 
session, 
sessionage, 
scratch, 
prev_signal, 
resolver, 
most_recent_ftp_entrypath, 
crlf_conversions, 
pathbuffer, 
path, 
range, 
resume_from, 
rtsp_next_client_CSeq, 
rtsp_next_server_CSeq, 
rtsp_CSeq_recv, 
infilesize, 
drain, 
fread_func, 
in, 
stream_depends_on, 
keeps_speed, 
expiretime, 
authhost, 
authproxy, 
timeoutlist, 
timenode, 
digest, 
proxydigest, 
tempwrite, 
expires, 
first_remote_port, 
tempcount, 
os_errno, 
httpversion, 
stream_weight, 
multi_owned_by_easy, 
this_is_a_follow, 
refused_stream, 
errorbuf, 
allow_port, 
authproblem, 
ftp_trying_alternative, 
wildcardmatch, 
expect100header, 
prev_block_had_trailing_cr, 
slash_removed, 
use_range, 
rangestringalloc, 
done, 
stream_depends_e, 
consider reordering the fields or adding explicit padding members [clang-analyzer-optin.performance.Padding]
struct UrlState {
       ^
/project/git/Utilities/cmcurl/lib/urldata.h:1209:8: note: Excessive padding in 'struct UrlState' (61 padding bytes, where 5 is optimal). Optimal fields order: conn_cache, lastconnect, headerbuff, headersize, buffer, ulbuf, current_speed, first_host, session, sessionage, scratch, prev_signal, resolver, most_recent_ftp_entrypath, crlf_conversions, pathbuffer, path, range, resume_from, rtsp_next_client_CSeq, rtsp_next_server_CSeq, rtsp_CSeq_recv, infilesize, drain, fread_func, in, stream_depends_on, keeps_speed, expiretime, authhost, authproxy, timeoutlist, timenode, digest, proxydigest, tempwrite, expires, first_remote_port, tempcount, os_errno, httpversion, stream_weight, multi_owned_by_easy, this_is_a_follow, refused_stream, errorbuf, allow_port, authproblem, ftp_trying_alternative, wildcardmatch, expect100header, prev_block_had_trailing_cr, slash_removed, use_range, rangestringalloc, done, stream_depends_e, consider reordering the fields or adding explicit padding members
/project/git/Utilities/cmcurl/lib/urldata.h:1457:8: warning: Excessive padding in 'struct UserDefined' (120 padding bytes, where 0 is optimal). 
Optimal fields order: 
err, 
debugdata, 
errorbuffer, 
proxyport, 
out, 
in_set, 
writeheader, 
rtp_out, 
use_port, 
httpauth, 
proxyauth, 
socks5auth, 
followlocation, 
maxredirs, 
postfields, 
seek_func, 
postfieldsize, 
fwrite_func, 
fwrite_header, 
fwrite_rtp, 
fread_func_set, 
fprogress, 
fxferinfo, 
fdebug, 
ioctl_func, 
fsockopt, 
sockopt_client, 
fopensocket, 
opensocket_client, 
fclosesocket, 
closesocket_client, 
seek_client, 
convfromnetwork, 
convtonetwork, 
convfromutf8, 
progress_client, 
ioctl_client, 
timeout, 
connecttimeout, 
accepttimeout, 
happy_eyeballs_timeout, 
server_response_timeout, 
tftp_blksize, 
filesize, 
low_speed_limit, 
low_speed_time, 
max_send_speed, 
max_recv_speed, 
set_resume_from, 
headers, 
proxyheaders, 
httppost, 
quote, 
postquote, 
prequote, 
source_quote, 
source_prequote, 
source_postquote, 
telnet_options, 
resolve, 
connect_to, 
timevalue, 
httpversion, 
general_ssl, 
dns_cache_timeout, 
buffer_size, 
upload_buffer_size, 
private_data, 
http200aliases, 
ipver, 
max_filesize, 
ssh_keyfunc, 
ssh_keyfunc_userp, 
ssh_auth_types, 
new_file_perms, 
new_directory_perms, 
allowed_protocols, 
redir_protocols, 
mail_rcpt, 
rtspversion, 
chunk_bgn, 
chunk_end, 
fnmatch, 
fnmatch_data, 
gssapi_delegation, 
tcp_keepidle, 
tcp_keepintvl, 
maxconnects, 
expect_100_timeout, 
stream_depends_on, 
stream_dependents, 
resolver_start, 
resolver_start_client, 
ssl, 
proxy_ssl, 
mimepost, 
str, 
keep_post, 
localportrange, 
is_fread_set, 
is_fwrite_set, 
timecondition, 
httpreq, 
proxytype, 
ftp_filemethod, 
ftp_create_missing_dirs, 
use_netrc, 
use_ssl, 
ftpsslauth, 
ftp_ccc, 
scope_id, 
rtspreq, 
stream_weight, 
localport, 
free_referer, 
tftp_no_options, 
sep_headers, 
cookiesession, 
crlf, 
strip_path_slash, 
ssh_compression, 
get_filetime, 
tunnel_thru_httpproxy, 
prefer_ascii, 
ftp_append, 
ftp_list_only, 
ftp_use_port, 
hide_progress, 
http_fail_on_error, 
http_keep_sending_on_error, 
http_follow_location, 
http_transfer_encoding, 
allow_auth_to_other_hosts, 
include_header, 
http_set_referer, 
http_auto_referer, 
opt_no_body, 
upload, 
verbose, 
krb, 
reuse_forbid, 
reuse_fresh, 
ftp_use_epsv, 
ftp_use_eprt, 
ftp_use_pret, 
no_signal, 
global_dns_cache, 
tcp_nodelay, 
ignorecl, 
ftp_skip_ip, 
connect_only, 
http_te_skip, 
http_ce_skip, 
proxy_transfer_mode, 
sasl_ir, 
wildcard_enabled, 
tcp_keepalive, 
tcp_fastopen, 
ssl_enable_npn, 
ssl_enable_alpn, 
path_as_is, 
pipewait, 
suppress_connect_headers, 
dns_shuffle_addresses, 
stream_depends_e, 
haproxyprotocol, 
abstract_unix_socket, 
disallow_username_in_url, 
consider reordering the fields or adding explicit padding members [clang-analyzer-optin.performance.Padding]
struct UserDefined {
       ^
/project/git/Utilities/cmcurl/lib/urldata.h:1457:8: note: Excessive padding in 'struct UserDefined' (120 padding bytes, where 0 is optimal). Optimal fields order: err, debugdata, errorbuffer, proxyport, out, in_set, writeheader, rtp_out, use_port, httpauth, proxyauth, socks5auth, followlocation, maxredirs, postfields, seek_func, postfieldsize, fwrite_func, fwrite_header, fwrite_rtp, fread_func_set, fprogress, fxferinfo, fdebug, ioctl_func, fsockopt, sockopt_client, fopensocket, opensocket_client, fclosesocket, closesocket_client, seek_client, convfromnetwork, convtonetwork, convfromutf8, progress_client, ioctl_client, timeout, connecttimeout, accepttimeout, happy_eyeballs_timeout, server_response_timeout, tftp_blksize, filesize, low_speed_limit, low_speed_time, max_send_speed, max_recv_speed, set_resume_from, headers, proxyheaders, httppost, quote, postquote, prequote, source_quote, source_prequote, source_postquote, telnet_options, resolve, connect_to, timevalue, httpversion, general_ssl, dns_cache_timeout, buffer_size, upload_buffer_size, private_data, http200aliases, ipver, max_filesize, ssh_keyfunc, ssh_keyfunc_userp, ssh_auth_types, new_file_perms, new_directory_perms, allowed_protocols, redir_protocols, mail_rcpt, rtspversion, chunk_bgn, chunk_end, fnmatch, fnmatch_data, gssapi_delegation, tcp_keepidle, tcp_keepintvl, maxconnects, expect_100_timeout, stream_depends_on, stream_dependents, resolver_start, resolver_start_client, ssl, proxy_ssl, mimepost, str, keep_post, localportrange, is_fread_set, is_fwrite_set, timecondition, httpreq, proxytype, ftp_filemethod, ftp_create_missing_dirs, use_netrc, use_ssl, ftpsslauth, ftp_ccc, scope_id, rtspreq, stream_weight, localport, free_referer, tftp_no_options, sep_headers, cookiesession, crlf, strip_path_slash, ssh_compression, get_filetime, tunnel_thru_httpproxy, prefer_ascii, ftp_append, ftp_list_only, ftp_use_port, hide_progress, http_fail_on_error, http_keep_sending_on_error, http_follow_location, http_transfer_encoding, allow_auth_to_other_hosts, include_header, http_set_referer, http_auto_referer, opt_no_body, upload, verbose, krb, reuse_forbid, reuse_fresh, ftp_use_epsv, ftp_use_eprt, ftp_use_pret, no_signal, global_dns_cache, tcp_nodelay, ignorecl, ftp_skip_ip, connect_only, http_te_skip, http_ce_skip, proxy_transfer_mode, sasl_ir, wildcard_enabled, tcp_keepalive, tcp_fastopen, ssl_enable_npn, ssl_enable_alpn, path_as_is, pipewait, suppress_connect_headers, dns_shuffle_addresses, stream_depends_e, haproxyprotocol, abstract_unix_socket, disallow_username_in_url, consider reordering the fields or adding explicit padding members

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpyT3NlB.yaml -p=/project/git /project/git/Utilities/cmcurl/lib/md5.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpgKpU7u.yaml -p=/project/git /project/git/Utilities/cmcurl/lib/strerror.c
/project/git/Utilities/cmcurl/lib/urldata.h:1209:8: warning: Excessive padding in 'struct UrlState' (61 padding bytes, where 5 is optimal). 
Optimal fields order: 
conn_cache, 
lastconnect, 
headerbuff, 
headersize, 
buffer, 
ulbuf, 
current_speed, 
first_host, 
session, 
sessionage, 
scratch, 
prev_signal, 
resolver, 
most_recent_ftp_entrypath, 
crlf_conversions, 
pathbuffer, 
path, 
range, 
resume_from, 
rtsp_next_client_CSeq, 
rtsp_next_server_CSeq, 
rtsp_CSeq_recv, 
infilesize, 
drain, 
fread_func, 
in, 
stream_depends_on, 
keeps_speed, 
expiretime, 
authhost, 
authproxy, 
timeoutlist, 
timenode, 
digest, 
proxydigest, 
tempwrite, 
expires, 
first_remote_port, 
tempcount, 
os_errno, 
httpversion, 
stream_weight, 
multi_owned_by_easy, 
this_is_a_follow, 
refused_stream, 
errorbuf, 
allow_port, 
authproblem, 
ftp_trying_alternative, 
wildcardmatch, 
expect100header, 
prev_block_had_trailing_cr, 
slash_removed, 
use_range, 
rangestringalloc, 
done, 
stream_depends_e, 
consider reordering the fields or adding explicit padding members [clang-analyzer-optin.performance.Padding]
struct UrlState {
       ^
/project/git/Utilities/cmcurl/lib/urldata.h:1209:8: note: Excessive padding in 'struct UrlState' (61 padding bytes, where 5 is optimal). Optimal fields order: conn_cache, lastconnect, headerbuff, headersize, buffer, ulbuf, current_speed, first_host, session, sessionage, scratch, prev_signal, resolver, most_recent_ftp_entrypath, crlf_conversions, pathbuffer, path, range, resume_from, rtsp_next_client_CSeq, rtsp_next_server_CSeq, rtsp_CSeq_recv, infilesize, drain, fread_func, in, stream_depends_on, keeps_speed, expiretime, authhost, authproxy, timeoutlist, timenode, digest, proxydigest, tempwrite, expires, first_remote_port, tempcount, os_errno, httpversion, stream_weight, multi_owned_by_easy, this_is_a_follow, refused_stream, errorbuf, allow_port, authproblem, ftp_trying_alternative, wildcardmatch, expect100header, prev_block_had_trailing_cr, slash_removed, use_range, rangestringalloc, done, stream_depends_e, consider reordering the fields or adding explicit padding members
/project/git/Utilities/cmcurl/lib/urldata.h:1457:8: warning: Excessive padding in 'struct UserDefined' (120 padding bytes, where 0 is optimal). 
Optimal fields order: 
err, 
debugdata, 
errorbuffer, 
proxyport, 
out, 
in_set, 
writeheader, 
rtp_out, 
use_port, 
httpauth, 
proxyauth, 
socks5auth, 
followlocation, 
maxredirs, 
postfields, 
seek_func, 
postfieldsize, 
fwrite_func, 
fwrite_header, 
fwrite_rtp, 
fread_func_set, 
fprogress, 
fxferinfo, 
fdebug, 
ioctl_func, 
fsockopt, 
sockopt_client, 
fopensocket, 
opensocket_client, 
fclosesocket, 
closesocket_client, 
seek_client, 
convfromnetwork, 
convtonetwork, 
convfromutf8, 
progress_client, 
ioctl_client, 
timeout, 
connecttimeout, 
accepttimeout, 
happy_eyeballs_timeout, 
server_response_timeout, 
tftp_blksize, 
filesize, 
low_speed_limit, 
low_speed_time, 
max_send_speed, 
max_recv_speed, 
set_resume_from, 
headers, 
proxyheaders, 
httppost, 
quote, 
postquote, 
prequote, 
source_quote, 
source_prequote, 
source_postquote, 
telnet_options, 
resolve, 
connect_to, 
timevalue, 
httpversion, 
general_ssl, 
dns_cache_timeout, 
buffer_size, 
upload_buffer_size, 
private_data, 
http200aliases, 
ipver, 
max_filesize, 
ssh_keyfunc, 
ssh_keyfunc_userp, 
ssh_auth_types, 
new_file_perms, 
new_directory_perms, 
allowed_protocols, 
redir_protocols, 
mail_rcpt, 
rtspversion, 
chunk_bgn, 
chunk_end, 
fnmatch, 
fnmatch_data, 
gssapi_delegation, 
tcp_keepidle, 
tcp_keepintvl, 
maxconnects, 
expect_100_timeout, 
stream_depends_on, 
stream_dependents, 
resolver_start, 
resolver_start_client, 
ssl, 
proxy_ssl, 
mimepost, 
str, 
keep_post, 
localportrange, 
is_fread_set, 
is_fwrite_set, 
timecondition, 
httpreq, 
proxytype, 
ftp_filemethod, 
ftp_create_missing_dirs, 
use_netrc, 
use_ssl, 
ftpsslauth, 
ftp_ccc, 
scope_id, 
rtspreq, 
stream_weight, 
localport, 
free_referer, 
tftp_no_options, 
sep_headers, 
cookiesession, 
crlf, 
strip_path_slash, 
ssh_compression, 
get_filetime, 
tunnel_thru_httpproxy, 
prefer_ascii, 
ftp_append, 
ftp_list_only, 
ftp_use_port, 
hide_progress, 
http_fail_on_error, 
http_keep_sending_on_error, 
http_follow_location, 
http_transfer_encoding, 
allow_auth_to_other_hosts, 
include_header, 
http_set_referer, 
http_auto_referer, 
opt_no_body, 
upload, 
verbose, 
krb, 
reuse_forbid, 
reuse_fresh, 
ftp_use_epsv, 
ftp_use_eprt, 
ftp_use_pret, 
no_signal, 
global_dns_cache, 
tcp_nodelay, 
ignorecl, 
ftp_skip_ip, 
connect_only, 
http_te_skip, 
http_ce_skip, 
proxy_transfer_mode, 
sasl_ir, 
wildcard_enabled, 
tcp_keepalive, 
tcp_fastopen, 
ssl_enable_npn, 
ssl_enable_alpn, 
path_as_is, 
pipewait, 
suppress_connect_headers, 
dns_shuffle_addresses, 
stream_depends_e, 
haproxyprotocol, 
abstract_unix_socket, 
disallow_username_in_url, 
consider reordering the fields or adding explicit padding members [clang-analyzer-optin.performance.Padding]
struct UserDefined {
       ^
2 warnings generated.

2 warnings generated.

/project/git/Utilities/cmcurl/lib/urldata.h:1457:8: note: Excessive padding in 'struct UserDefined' (120 padding bytes, where 0 is optimal). Optimal fields order: err, debugdata, errorbuffer, proxyport, out, in_set, writeheader, rtp_out, use_port, httpauth, proxyauth, socks5auth, followlocation, maxredirs, postfields, seek_func, postfieldsize, fwrite_func, fwrite_header, fwrite_rtp, fread_func_set, fprogress, fxferinfo, fdebug, ioctl_func, fsockopt, sockopt_client, fopensocket, opensocket_client, fclosesocket, closesocket_client, seek_client, convfromnetwork, convtonetwork, convfromutf8, progress_client, ioctl_client, timeout, connecttimeout, accepttimeout, happy_eyeballs_timeout, server_response_timeout, tftp_blksize, filesize, low_speed_limit, low_speed_time, max_send_speed, max_recv_speed, set_resume_from, headers, proxyheaders, httppost, quote, postquote, prequote, source_quote, source_prequote, source_postquote, telnet_options, resolve, connect_to, timevalue, httpversion, general_ssl, dns_cache_timeout, buffer_size, upload_buffer_size, private_data, http200aliases, ipver, max_filesize, ssh_keyfunc, ssh_keyfunc_userp, ssh_auth_types, new_file_perms, new_directory_perms, allowed_protocols, redir_protocols, mail_rcpt, rtspversion, chunk_bgn, chunk_end, fnmatch, fnmatch_data, gssapi_delegation, tcp_keepidle, tcp_keepintvl, maxconnects, expect_100_timeout, stream_depends_on, stream_dependents, resolver_start, resolver_start_client, ssl, proxy_ssl, mimepost, str, keep_post, localportrange, is_fread_set, is_fwrite_set, timecondition, httpreq, proxytype, ftp_filemethod, ftp_create_missing_dirs, use_netrc, use_ssl, ftpsslauth, ftp_ccc, scope_id, rtspreq, stream_weight, localport, free_referer, tftp_no_options, sep_headers, cookiesession, crlf, strip_path_slash, ssh_compression, get_filetime, tunnel_thru_httpproxy, prefer_ascii, ftp_append, ftp_list_only, ftp_use_port, hide_progress, http_fail_on_error, http_keep_sending_on_error, http_follow_location, http_transfer_encoding, allow_auth_to_other_hosts, include_header, http_set_referer, http_auto_referer, opt_no_body, upload, verbose, krb, reuse_forbid, reuse_fresh, ftp_use_epsv, ftp_use_eprt, ftp_use_pret, no_signal, global_dns_cache, tcp_nodelay, ignorecl, ftp_skip_ip, connect_only, http_te_skip, http_ce_skip, proxy_transfer_mode, sasl_ir, wildcard_enabled, tcp_keepalive, tcp_fastopen, ssl_enable_npn, ssl_enable_alpn, path_as_is, pipewait, suppress_connect_headers, dns_shuffle_addresses, stream_depends_e, haproxyprotocol, abstract_unix_socket, disallow_username_in_url, consider reordering the fields or adding explicit padding members

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpupEYwx.yaml -p=/project/git /project/git/Utilities/cmcurl/lib/amigaos.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpbA46B4.yaml -p=/project/git /project/git/Utilities/cmcurl/lib/hostasyn.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpkObccV.yaml -p=/project/git /project/git/Utilities/cmcurl/lib/hostip4.c
/project/git/Utilities/cmcurl/lib/urldata.h:1209:8: warning: Excessive padding in 'struct UrlState' (61 padding bytes, where 5 is optimal). 
Optimal fields order: 
conn_cache, 
lastconnect, 
headerbuff, 
headersize, 
buffer, 
ulbuf, 
current_speed, 
first_host, 
session, 
sessionage, 
scratch, 
prev_signal, 
resolver, 
most_recent_ftp_entrypath, 
crlf_conversions, 
pathbuffer, 
path, 
range, 
resume_from, 
rtsp_next_client_CSeq, 
rtsp_next_server_CSeq, 
rtsp_CSeq_recv, 
infilesize, 
drain, 
fread_func, 
in, 
stream_depends_on, 
keeps_speed, 
expiretime, 
authhost, 
authproxy, 
timeoutlist, 
timenode, 
digest, 
proxydigest, 
tempwrite, 
expires, 
first_remote_port, 
tempcount, 
os_errno, 
httpversion, 
stream_weight, 
multi_owned_by_easy, 
this_is_a_follow, 
refused_stream, 
errorbuf, 
allow_port, 
authproblem, 
ftp_trying_alternative, 
wildcardmatch, 
expect100header, 
prev_block_had_trailing_cr, 
slash_removed, 
use_range, 
rangestringalloc, 
done, 
stream_depends_e, 
consider reordering the fields or adding explicit padding members [clang-analyzer-optin.performance.Padding]
struct UrlState {
       ^
/project/git/Utilities/cmcurl/lib/urldata.h:1209:8: note: Excessive padding in 'struct UrlState' (61 padding bytes, where 5 is optimal). Optimal fields order: conn_cache, lastconnect, headerbuff, headersize, buffer, ulbuf, current_speed, first_host, session, sessionage, scratch, prev_signal, resolver, most_recent_ftp_entrypath, crlf_conversions, pathbuffer, path, range, resume_from, rtsp_next_client_CSeq, rtsp_next_server_CSeq, rtsp_CSeq_recv, infilesize, drain, fread_func, in, stream_depends_on, keeps_speed, expiretime, authhost, authproxy, timeoutlist, timenode, digest, proxydigest, tempwrite, expires, first_remote_port, tempcount, os_errno, httpversion, stream_weight, multi_owned_by_easy, this_is_a_follow, refused_stream, errorbuf, allow_port, authproblem, ftp_trying_alternative, wildcardmatch, expect100header, prev_block_had_trailing_cr, slash_removed, use_range, rangestringalloc, done, stream_depends_e, consider reordering the fields or adding explicit padding members
/project/git/Utilities/cmcurl/lib/urldata.h:1457:8: warning: Excessive padding in 'struct UserDefined' (120 padding bytes, where 0 is optimal). 
Optimal fields order: 
err, 
debugdata, 
errorbuffer, 
proxyport, 
out, 
in_set, 
writeheader, 
rtp_out, 
use_port, 
httpauth, 
proxyauth, 
socks5auth, 
followlocation, 
maxredirs, 
postfields, 
seek_func, 
postfieldsize, 
fwrite_func, 
fwrite_header, 
fwrite_rtp, 
fread_func_set, 
fprogress, 
fxferinfo, 
fdebug, 
ioctl_func, 
fsockopt, 
sockopt_client, 
fopensocket, 
opensocket_client, 
fclosesocket, 
closesocket_client, 
seek_client, 
convfromnetwork, 
convtonetwork, 
convfromutf8, 
progress_client, 
ioctl_client, 
timeout, 
connecttimeout, 
accepttimeout, 
happy_eyeballs_timeout, 
server_response_timeout, 
tftp_blksize, 
filesize, 
low_speed_limit, 
low_speed_time, 
max_send_speed, 
max_recv_speed, 
set_resume_from, 
headers, 
proxyheaders, 
httppost, 
quote, 
postquote, 
prequote, 
source_quote, 
source_prequote, 
source_postquote, 
telnet_options, 
resolve, 
connect_to, 
timevalue, 
httpversion, 
general_ssl, 
dns_cache_timeout, 
buffer_size, 
upload_buffer_size, 
private_data, 
http200aliases, 
ipver, 
max_filesize, 
ssh_keyfunc, 
ssh_keyfunc_userp, 
ssh_auth_types, 
new_file_perms, 
new_directory_perms, 
allowed_protocols, 
redir_protocols, 
mail_rcpt, 
rtspversion, 
chunk_bgn, 
chunk_end, 
fnmatch, 
fnmatch_data, 
gssapi_delegation, 
tcp_keepidle, 
tcp_keepintvl, 
maxconnects, 
expect_100_timeout, 
stream_depends_on, 
stream_dependents, 
resolver_start, 
resolver_start_client, 
ssl, 
proxy_ssl, 
mimepost, 
str, 
keep_post, 
localportrange, 
is_fread_set, 
is_fwrite_set, 
timecondition, 
httpreq, 
proxytype, 
ftp_filemethod, 
ftp_create_missing_dirs, 
use_netrc, 
use_ssl, 
ftpsslauth, 
ftp_ccc, 
scope_id, 
rtspreq, 
stream_weight, 
localport, 
free_referer, 
tftp_no_options, 
sep_headers, 
cookiesession, 
crlf, 
strip_path_slash, 
ssh_compression, 
get_filetime, 
tunnel_thru_httpproxy, 
prefer_ascii, 
ftp_append, 
ftp_list_only, 
ftp_use_port, 
hide_progress, 
http_fail_on_error, 
http_keep_sending_on_error, 
http_follow_location, 
http_transfer_encoding, 
allow_auth_to_other_hosts, 
include_header, 
http_set_referer, 
http_auto_referer, 
opt_no_body, 
upload, 
verbose, 
krb, 
reuse_forbid, 
reuse_fresh, 
ftp_use_epsv, 
ftp_use_eprt, 
ftp_use_pret, 
no_signal, 
global_dns_cache, 
tcp_nodelay, 
ignorecl, 
ftp_skip_ip, 
connect_only, 
http_te_skip, 
http_ce_skip, 
proxy_transfer_mode, 
sasl_ir, 
wildcard_enabled, 
tcp_keepalive, 
tcp_fastopen, 
ssl_enable_npn, 
ssl_enable_alpn, 
path_as_is, 
pipewait, 
suppress_connect_headers, 
dns_shuffle_addresses, 
stream_depends_e, 
haproxyprotocol, 
abstract_unix_socket, 
disallow_username_in_url, 
consider reordering the fields or adding explicit padding members [clang-analyzer-optin.performance.Padding]
struct UserDefined {
       ^
2 warnings generated.

/project/git/Utilities/cmcurl/lib/urldata.h:1457:8: note: Excessive padding in 'struct UserDefined' (120 padding bytes, where 0 is optimal). Optimal fields order: err, debugdata, errorbuffer, proxyport, out, in_set, writeheader, rtp_out, use_port, httpauth, proxyauth, socks5auth, followlocation, maxredirs, postfields, seek_func, postfieldsize, fwrite_func, fwrite_header, fwrite_rtp, fread_func_set, fprogress, fxferinfo, fdebug, ioctl_func, fsockopt, sockopt_client, fopensocket, opensocket_client, fclosesocket, closesocket_client, seek_client, convfromnetwork, convtonetwork, convfromutf8, progress_client, ioctl_client, timeout, connecttimeout, accepttimeout, happy_eyeballs_timeout, server_response_timeout, tftp_blksize, filesize, low_speed_limit, low_speed_time, max_send_speed, max_recv_speed, set_resume_from, headers, proxyheaders, httppost, quote, postquote, prequote, source_quote, source_prequote, source_postquote, telnet_options, resolve, connect_to, timevalue, httpversion, general_ssl, dns_cache_timeout, buffer_size, upload_buffer_size, private_data, http200aliases, ipver, max_filesize, ssh_keyfunc, ssh_keyfunc_userp, ssh_auth_types, new_file_perms, new_directory_perms, allowed_protocols, redir_protocols, mail_rcpt, rtspversion, chunk_bgn, chunk_end, fnmatch, fnmatch_data, gssapi_delegation, tcp_keepidle, tcp_keepintvl, maxconnects, expect_100_timeout, stream_depends_on, stream_dependents, resolver_start, resolver_start_client, ssl, proxy_ssl, mimepost, str, keep_post, localportrange, is_fread_set, is_fwrite_set, timecondition, httpreq, proxytype, ftp_filemethod, ftp_create_missing_dirs, use_netrc, use_ssl, ftpsslauth, ftp_ccc, scope_id, rtspreq, stream_weight, localport, free_referer, tftp_no_options, sep_headers, cookiesession, crlf, strip_path_slash, ssh_compression, get_filetime, tunnel_thru_httpproxy, prefer_ascii, ftp_append, ftp_list_only, ftp_use_port, hide_progress, http_fail_on_error, http_keep_sending_on_error, http_follow_location, http_transfer_encoding, allow_auth_to_other_hosts, include_header, http_set_referer, http_auto_referer, opt_no_body, upload, verbose, krb, reuse_forbid, reuse_fresh, ftp_use_epsv, ftp_use_eprt, ftp_use_pret, no_signal, global_dns_cache, tcp_nodelay, ignorecl, ftp_skip_ip, connect_only, http_te_skip, http_ce_skip, proxy_transfer_mode, sasl_ir, wildcard_enabled, tcp_keepalive, tcp_fastopen, ssl_enable_npn, ssl_enable_alpn, path_as_is, pipewait, suppress_connect_headers, dns_shuffle_addresses, stream_depends_e, haproxyprotocol, abstract_unix_socket, disallow_username_in_url, consider reordering the fields or adding explicit padding members

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpyrsf4j.yaml -p=/project/git /project/git/Utilities/cmcurl/lib/hostip6.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmp79rBRi.yaml -p=/project/git /project/git/Utilities/cmcurl/lib/hostsyn.c
/project/git/Utilities/cmcurl/lib/urldata.h:1209:8: warning: Excessive padding in 'struct UrlState' (61 padding bytes, where 5 is optimal). 
Optimal fields order: 
conn_cache, 
lastconnect, 
headerbuff, 
headersize, 
buffer, 
ulbuf, 
current_speed, 
first_host, 
session, 
sessionage, 
scratch, 
prev_signal, 
resolver, 
most_recent_ftp_entrypath, 
crlf_conversions, 
pathbuffer, 
path, 
range, 
resume_from, 
rtsp_next_client_CSeq, 
rtsp_next_server_CSeq, 
rtsp_CSeq_recv, 
infilesize, 
drain, 
fread_func, 
in, 
stream_depends_on, 
keeps_speed, 
expiretime, 
authhost, 
authproxy, 
timeoutlist, 
timenode, 
digest, 
proxydigest, 
tempwrite, 
expires, 
first_remote_port, 
tempcount, 
os_errno, 
httpversion, 
stream_weight, 
multi_owned_by_easy, 
this_is_a_follow, 
refused_stream, 
errorbuf, 
allow_port, 
authproblem, 
ftp_trying_alternative, 
wildcardmatch, 
expect100header, 
prev_block_had_trailing_cr, 
slash_removed, 
use_range, 
rangestringalloc, 
done, 
stream_depends_e, 
consider reordering the fields or adding explicit padding members [clang-analyzer-optin.performance.Padding]
struct UrlState {
       ^
/project/git/Utilities/cmcurl/lib/urldata.h:1209:8: note: Excessive padding in 'struct UrlState' (61 padding bytes, where 5 is optimal). Optimal fields order: conn_cache, lastconnect, headerbuff, headersize, buffer, ulbuf, current_speed, first_host, session, sessionage, scratch, prev_signal, resolver, most_recent_ftp_entrypath, crlf_conversions, pathbuffer, path, range, resume_from, rtsp_next_client_CSeq, rtsp_next_server_CSeq, rtsp_CSeq_recv, infilesize, drain, fread_func, in, stream_depends_on, keeps_speed, expiretime, authhost, authproxy, timeoutlist, timenode, digest, proxydigest, tempwrite, expires, first_remote_port, tempcount, os_errno, httpversion, stream_weight, multi_owned_by_easy, this_is_a_follow, refused_stream, errorbuf, allow_port, authproblem, ftp_trying_alternative, wildcardmatch, expect100header, prev_block_had_trailing_cr, slash_removed, use_range, rangestringalloc, done, stream_depends_e, consider reordering the fields or adding explicit padding members
/project/git/Utilities/cmcurl/lib/urldata.h:1457:8: warning: Excessive padding in 'struct UserDefined' (120 padding bytes, where 0 is optimal). 
Optimal fields order: 
err, 
debugdata, 
errorbuffer, 
proxyport, 
out, 
in_set, 
writeheader, 
rtp_out, 
use_port, 
httpauth, 
proxyauth, 
socks5auth, 
followlocation, 
maxredirs, 
postfields, 
seek_func, 
postfieldsize, 
fwrite_func, 
fwrite_header, 
fwrite_rtp, 
fread_func_set, 
fprogress, 
fxferinfo, 
fdebug, 
ioctl_func, 
fsockopt, 
sockopt_client, 
fopensocket, 
opensocket_client, 
fclosesocket, 
closesocket_client, 
seek_client, 
convfromnetwork, 
convtonetwork, 
convfromutf8, 
progress_client, 
ioctl_client, 
timeout, 
connecttimeout, 
accepttimeout, 
happy_eyeballs_timeout, 
server_response_timeout, 
tftp_blksize, 
filesize, 
low_speed_limit, 
low_speed_time, 
max_send_speed, 
max_recv_speed, 
set_resume_from, 
headers, 
proxyheaders, 
httppost, 
quote, 
postquote, 
prequote, 
source_quote, 
source_prequote, 
source_postquote, 
telnet_options, 
resolve, 
connect_to, 
timevalue, 
httpversion, 
general_ssl, 
dns_cache_timeout, 
buffer_size, 
upload_buffer_size, 
private_data, 
http200aliases, 
ipver, 
max_filesize, 
ssh_keyfunc, 
ssh_keyfunc_userp, 
ssh_auth_types, 
new_file_perms, 
new_directory_perms, 
allowed_protocols, 
redir_protocols, 
mail_rcpt, 
rtspversion, 
chunk_bgn, 
chunk_end, 
fnmatch, 
fnmatch_data, 
gssapi_delegation, 
tcp_keepidle, 
tcp_keepintvl, 
maxconnects, 
expect_100_timeout, 
stream_depends_on, 
stream_dependents, 
resolver_start, 
resolver_start_client, 
ssl, 
proxy_ssl, 
mimepost, 
str, 
keep_post, 
localportrange, 
is_fread_set, 
is_fwrite_set, 
timecondition, 
httpreq, 
proxytype, 
ftp_filemethod, 
ftp_create_missing_dirs, 
use_netrc, 
use_ssl, 
ftpsslauth, 
ftp_ccc, 
scope_id, 
rtspreq, 
stream_weight, 
localport, 
free_referer, 
tftp_no_options, 
sep_headers, 
cookiesession, 
crlf, 
strip_path_slash, 
ssh_compression, 
get_filetime, 
tunnel_thru_httpproxy, 
prefer_ascii, 
ftp_append, 
ftp_list_only, 
ftp_use_port, 
hide_progress, 
http_fail_on_error, 
http_keep_sending_on_error, 
http_follow_location, 
http_transfer_encoding, 
allow_auth_to_other_hosts, 
include_header, 
http_set_referer, 
http_auto_referer, 
opt_no_body, 
upload, 
verbose, 
krb, 
reuse_forbid, 
reuse_fresh, 
ftp_use_epsv, 
ftp_use_eprt, 
ftp_use_pret, 
no_signal, 
global_dns_cache, 
tcp_nodelay, 
ignorecl, 
ftp_skip_ip, 
connect_only, 
http_te_skip, 
http_ce_skip, 
proxy_transfer_mode, 
sasl_ir, 
wildcard_enabled, 
tcp_keepalive, 
tcp_fastopen, 
ssl_enable_npn, 
ssl_enable_alpn, 
path_as_is, 
pipewait, 
suppress_connect_headers, 
dns_shuffle_addresses, 
stream_depends_e, 
haproxyprotocol, 
abstract_unix_socket, 
disallow_username_in_url, 
consider reordering the fields or adding explicit padding members [clang-analyzer-optin.performance.Padding]
struct UserDefined {
       ^
1 warning generated.

6 warnings generated.

/project/git/Utilities/cmcurl/lib/urldata.h:1457:8: note: Excessive padding in 'struct UserDefined' (120 padding bytes, where 0 is optimal). Optimal fields order: err, debugdata, errorbuffer, proxyport, out, in_set, writeheader, rtp_out, use_port, httpauth, proxyauth, socks5auth, followlocation, maxredirs, postfields, seek_func, postfieldsize, fwrite_func, fwrite_header, fwrite_rtp, fread_func_set, fprogress, fxferinfo, fdebug, ioctl_func, fsockopt, sockopt_client, fopensocket, opensocket_client, fclosesocket, closesocket_client, seek_client, convfromnetwork, convtonetwork, convfromutf8, progress_client, ioctl_client, timeout, connecttimeout, accepttimeout, happy_eyeballs_timeout, server_response_timeout, tftp_blksize, filesize, low_speed_limit, low_speed_time, max_send_speed, max_recv_speed, set_resume_from, headers, proxyheaders, httppost, quote, postquote, prequote, source_quote, source_prequote, source_postquote, telnet_options, resolve, connect_to, timevalue, httpversion, general_ssl, dns_cache_timeout, buffer_size, upload_buffer_size, private_data, http200aliases, ipver, max_filesize, ssh_keyfunc, ssh_keyfunc_userp, ssh_auth_types, new_file_perms, new_directory_perms, allowed_protocols, redir_protocols, mail_rcpt, rtspversion, chunk_bgn, chunk_end, fnmatch, fnmatch_data, gssapi_delegation, tcp_keepidle, tcp_keepintvl, maxconnects, expect_100_timeout, stream_depends_on, stream_dependents, resolver_start, resolver_start_client, ssl, proxy_ssl, mimepost, str, keep_post, localportrange, is_fread_set, is_fwrite_set, timecondition, httpreq, proxytype, ftp_filemethod, ftp_create_missing_dirs, use_netrc, use_ssl, ftpsslauth, ftp_ccc, scope_id, rtspreq, stream_weight, localport, free_referer, tftp_no_options, sep_headers, cookiesession, crlf, strip_path_slash, ssh_compression, get_filetime, tunnel_thru_httpproxy, prefer_ascii, ftp_append, ftp_list_only, ftp_use_port, hide_progress, http_fail_on_error, http_keep_sending_on_error, http_follow_location, http_transfer_encoding, allow_auth_to_other_hosts, include_header, http_set_referer, http_auto_referer, opt_no_body, upload, verbose, krb, reuse_forbid, reuse_fresh, ftp_use_epsv, ftp_use_eprt, ftp_use_pret, no_signal, global_dns_cache, tcp_nodelay, ignorecl, ftp_skip_ip, connect_only, http_te_skip, http_ce_skip, proxy_transfer_mode, sasl_ir, wildcard_enabled, tcp_keepalive, tcp_fastopen, ssl_enable_npn, ssl_enable_alpn, path_as_is, pipewait, suppress_connect_headers, dns_shuffle_addresses, stream_depends_e, haproxyprotocol, abstract_unix_socket, disallow_username_in_url, consider reordering the fields or adding explicit padding members

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpbaN0W8.yaml -p=/project/git /project/git/Utilities/cmcurl/lib/inet_ntop.c
/project/git/Utilities/cmcurl/lib/inet_ntop.c:69:3: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
  strcpy(dst, tmp);
  ^
/project/git/Utilities/cmcurl/lib/inet_ntop.c:69:3: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpfkL5d1.yaml -p=/project/git /project/git/Utilities/cmcurl/lib/tftp.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpWVz6Gp.yaml -p=/project/git /project/git/Source/kwsys/SystemTools.cxx
/project/git/Source/kwsys/SystemTools.cxx:1545:3: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
  strcpy(newstr, str1);
  ^
/project/git/Source/kwsys/SystemTools.cxx:1545:3: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
/project/git/Source/kwsys/SystemTools.cxx:1546:3: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
  strcat(newstr + len1, str2);
  ^
/project/git/Source/kwsys/SystemTools.cxx:1546:3: note: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119
/project/git/Source/kwsys/SystemTools.cxx:1568:3: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
  strcpy(newstr, str1);
  ^
/project/git/Source/kwsys/SystemTools.cxx:1568:3: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
/project/git/Source/kwsys/SystemTools.cxx:1569:3: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
  strcat(newstr + len1, str2);
  ^
/project/git/Source/kwsys/SystemTools.cxx:1569:3: note: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119
/project/git/Source/kwsys/SystemTools.cxx:1570:3: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
  strcat(newstr + len1 + len2, str3);
  ^
/project/git/Source/kwsys/SystemTools.cxx:1570:3: note: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119
/project/git/Source/kwsys/SystemTools.cxx:1740:12: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
    return strcpy(newstr, str);
           ^
/project/git/Source/kwsys/SystemTools.cxx:1740:12: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpDELOoW.yaml -p=/project/git /project/git/Utilities/cmcurl/lib/strdup.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpLtPyLg.yaml -p=/project/git /project/git/Source/kwsys/ProcessUNIX.c
/project/git/Source/kwsys/ProcessUNIX.c:446:46: warning: Null pointer passed as an argument to a 'nonnull' parameter [clang-analyzer-core.NonNullParamChecker]
      newCommands[cp->NumberOfCommands][i] = strdup(command[i]);
                                             ^
/project/git/Source/kwsys/ProcessUNIX.c:397:7: note: Assuming 'cp' is non-null
  if (!cp || !command || !*command) {
      ^
/project/git/Source/kwsys/ProcessUNIX.c:397:7: note: Left side of '||' is false
/project/git/Source/kwsys/ProcessUNIX.c:397:14: note: Assuming 'command' is non-null
  if (!cp || !command || !*command) {
             ^
/project/git/Source/kwsys/ProcessUNIX.c:397:7: note: Left side of '||' is false
  if (!cp || !command || !*command) {
      ^
/project/git/Source/kwsys/ProcessUNIX.c:397:26: note: Assuming the condition is false
  if (!cp || !command || !*command) {
                         ^
/project/git/Source/kwsys/ProcessUNIX.c:397:3: note: Taking false branch
  if (!cp || !command || !*command) {
  ^
/project/git/Source/kwsys/ProcessUNIX.c:403:9: note: Assuming 'newCommands' is not null
  if (!(newCommands =
        ^
/project/git/Source/kwsys/ProcessUNIX.c:403:3: note: Taking false branch
  if (!(newCommands =
  ^
/project/git/Source/kwsys/ProcessUNIX.c:412:17: note: Assuming the condition is false
    for (i = 0; i < cp->NumberOfCommands; ++i) {
                ^
/project/git/Source/kwsys/ProcessUNIX.c:412:5: note: Loop condition is false. Execution continues on line 418
    for (i = 0; i < cp->NumberOfCommands; ++i) {
    ^
/project/git/Source/kwsys/ProcessUNIX.c:418:7: note: Assuming the condition is false
  if (cp->Verbatim) {
      ^
/project/git/Source/kwsys/ProcessUNIX.c:418:3: note: Taking false branch
  if (cp->Verbatim) {
  ^
/project/git/Source/kwsys/ProcessUNIX.c:434:5: note: Loop condition is true.  Entering loop body
    while (*c++)
    ^
/project/git/Source/kwsys/ProcessUNIX.c:434:12: note: Assuming pointer value is null
    while (*c++)
           ^
/project/git/Source/kwsys/ProcessUNIX.c:434:5: note: Loop condition is false. Execution continues on line 436
    while (*c++)
    ^
/project/git/Source/kwsys/ProcessUNIX.c:439:9: note: Assuming the condition is false
    if (!newCommands[cp->NumberOfCommands]) {
        ^
/project/git/Source/kwsys/ProcessUNIX.c:439:5: note: Taking false branch
    if (!newCommands[cp->NumberOfCommands]) {
    ^
/project/git/Source/kwsys/ProcessUNIX.c:444:17: note: Assuming 'i' is < 'n'
    for (i = 0; i < n; ++i) {
                ^
/project/git/Source/kwsys/ProcessUNIX.c:444:5: note: Loop condition is true.  Entering loop body
    for (i = 0; i < n; ++i) {
    ^
/project/git/Source/kwsys/ProcessUNIX.c:447:11: note: Assuming the condition is false
      if (!newCommands[cp->NumberOfCommands][i]) {
          ^
/project/git/Source/kwsys/ProcessUNIX.c:447:7: note: Taking false branch
      if (!newCommands[cp->NumberOfCommands][i]) {
      ^
/project/git/Source/kwsys/ProcessUNIX.c:444:17: note: Assuming 'i' is < 'n'
    for (i = 0; i < n; ++i) {
                ^
/project/git/Source/kwsys/ProcessUNIX.c:444:5: note: Loop condition is true.  Entering loop body
    for (i = 0; i < n; ++i) {
    ^
/project/git/Source/kwsys/ProcessUNIX.c:446:46: note: Null pointer passed as an argument to a 'nonnull' parameter
      newCommands[cp->NumberOfCommands][i] = strdup(command[i]);
                                             ^
/project/git/Source/kwsys/ProcessUNIX.c:756:5: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
    strcpy(cp->ErrorMessage, "No command");
    ^
/project/git/Source/kwsys/ProcessUNIX.c:756:5: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
/project/git/Source/kwsys/ProcessUNIX.c:763:5: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
    strcpy(cp->ErrorMessage, "Out of memory");
    ^
/project/git/Source/kwsys/ProcessUNIX.c:763:5: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
/project/git/Source/kwsys/ProcessUNIX.c:1377:9: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
        strcpy(cp->ProcessResults[prPipe].ExitExceptionString,
        ^
/project/git/Source/kwsys/ProcessUNIX.c:1377:9: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
/project/git/Source/kwsys/ProcessUNIX.c:1544:5: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
    strcpy(cp->ProcessResults[i].ExitExceptionString, "No exception");
    ^
/project/git/Source/kwsys/ProcessUNIX.c:1544:5: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
/project/git/Source/kwsys/ProcessUNIX.c:2097:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
      KWSYSPE_CASE(Fault, "Segmentation fault");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2097:7: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
      KWSYSPE_CASE(Fault, "Segmentation fault");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2103:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
      KWSYSPE_CASE(Fault, "Bus error");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2103:7: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
      KWSYSPE_CASE(Fault, "Bus error");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2109:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
      KWSYSPE_CASE(Numerical, "Floating-point exception");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2109:7: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
      KWSYSPE_CASE(Numerical, "Floating-point exception");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2114:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
      KWSYSPE_CASE(Illegal, "Illegal instruction");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2114:7: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
      KWSYSPE_CASE(Illegal, "Illegal instruction");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2119:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
      KWSYSPE_CASE(Interrupt, "User interrupt");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2119:7: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
      KWSYSPE_CASE(Interrupt, "User interrupt");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2124:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
      KWSYSPE_CASE(Other, "Child aborted");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2124:7: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
      KWSYSPE_CASE(Other, "Child aborted");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2129:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
      KWSYSPE_CASE(Other, "Child killed");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2129:7: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
      KWSYSPE_CASE(Other, "Child killed");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2134:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
      KWSYSPE_CASE(Other, "Child terminated");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2134:7: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
      KWSYSPE_CASE(Other, "Child terminated");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2139:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
      KWSYSPE_CASE(Other, "SIGHUP");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2139:7: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
      KWSYSPE_CASE(Other, "SIGHUP");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2144:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
      KWSYSPE_CASE(Other, "SIGQUIT");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2144:7: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
      KWSYSPE_CASE(Other, "SIGQUIT");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2149:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
      KWSYSPE_CASE(Other, "SIGTRAP");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2149:7: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
      KWSYSPE_CASE(Other, "SIGTRAP");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2161:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
      KWSYSPE_CASE(Other, "SIGUSR1");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
36 warnings generated.
72 warnings generated.

1 warning generated.

  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2161:7: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
      KWSYSPE_CASE(Other, "SIGUSR1");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2166:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
      KWSYSPE_CASE(Other, "SIGUSR2");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2166:7: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
      KWSYSPE_CASE(Other, "SIGUSR2");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2171:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
      KWSYSPE_CASE(Other, "SIGPIPE");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2171:7: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
      KWSYSPE_CASE(Other, "SIGPIPE");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2176:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
      KWSYSPE_CASE(Other, "SIGALRM");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2176:7: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
      KWSYSPE_CASE(Other, "SIGALRM");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2181:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
      KWSYSPE_CASE(Other, "SIGSTKFLT");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2181:7: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
      KWSYSPE_CASE(Other, "SIGSTKFLT");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2186:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
      KWSYSPE_CASE(Other, "SIGCHLD");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2186:7: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
      KWSYSPE_CASE(Other, "SIGCHLD");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2195:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
      KWSYSPE_CASE(Other, "SIGCONT");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2195:7: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
      KWSYSPE_CASE(Other, "SIGCONT");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2200:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
      KWSYSPE_CASE(Other, "SIGSTOP");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2200:7: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
      KWSYSPE_CASE(Other, "SIGSTOP");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2205:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
      KWSYSPE_CASE(Other, "SIGTSTP");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2205:7: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
      KWSYSPE_CASE(Other, "SIGTSTP");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2210:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
      KWSYSPE_CASE(Other, "SIGTTIN");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2210:7: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
      KWSYSPE_CASE(Other, "SIGTTIN");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2215:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
      KWSYSPE_CASE(Other, "SIGTTOU");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2215:7: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
      KWSYSPE_CASE(Other, "SIGTTOU");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2220:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
      KWSYSPE_CASE(Other, "SIGURG");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2220:7: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
      KWSYSPE_CASE(Other, "SIGURG");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2225:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
      KWSYSPE_CASE(Other, "SIGXCPU");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2225:7: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
      KWSYSPE_CASE(Other, "SIGXCPU");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2230:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
      KWSYSPE_CASE(Other, "SIGXFSZ");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2230:7: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
      KWSYSPE_CASE(Other, "SIGXFSZ");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2235:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
      KWSYSPE_CASE(Other, "SIGVTALRM");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2235:7: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
      KWSYSPE_CASE(Other, "SIGVTALRM");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2240:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
      KWSYSPE_CASE(Other, "SIGPROF");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2240:7: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
      KWSYSPE_CASE(Other, "SIGPROF");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2245:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
      KWSYSPE_CASE(Other, "SIGWINCH");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2245:7: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
      KWSYSPE_CASE(Other, "SIGWINCH");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2250:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
      KWSYSPE_CASE(Other, "SIGPOLL");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2250:7: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
      KWSYSPE_CASE(Other, "SIGPOLL");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2262:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
      KWSYSPE_CASE(Other, "SIGPWR");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2262:7: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
      KWSYSPE_CASE(Other, "SIGPWR");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2267:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
      KWSYSPE_CASE(Other, "SIGSYS");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2267:7: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
      KWSYSPE_CASE(Other, "SIGSYS");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:446:46: warning: Null pointer passed as an argument to a 'nonnull' parameter [clang-analyzer-core.NonNullParamChecker]
      newCommands[cp->NumberOfCommands][i] = strdup(command[i]);
                                             ^
/project/git/Source/kwsys/ProcessUNIX.c:397:7: note: Assuming 'cp' is non-null
  if (!cp || !command || !*command) {
      ^
/project/git/Source/kwsys/ProcessUNIX.c:397:7: note: Left side of '||' is false
/project/git/Source/kwsys/ProcessUNIX.c:397:14: note: Assuming 'command' is non-null
  if (!cp || !command || !*command) {
             ^
/project/git/Source/kwsys/ProcessUNIX.c:397:7: note: Left side of '||' is false
  if (!cp || !command || !*command) {
      ^
/project/git/Source/kwsys/ProcessUNIX.c:397:26: note: Assuming the condition is false
  if (!cp || !command || !*command) {
                         ^
/project/git/Source/kwsys/ProcessUNIX.c:397:3: note: Taking false branch
  if (!cp || !command || !*command) {
  ^
/project/git/Source/kwsys/ProcessUNIX.c:403:9: note: Assuming 'newCommands' is not null
  if (!(newCommands =
        ^
/project/git/Source/kwsys/ProcessUNIX.c:403:3: note: Taking false branch
  if (!(newCommands =
  ^
/project/git/Source/kwsys/ProcessUNIX.c:412:17: note: Assuming the condition is false
    for (i = 0; i < cp->NumberOfCommands; ++i) {
                ^
/project/git/Source/kwsys/ProcessUNIX.c:412:5: note: Loop condition is false. Execution continues on line 418
    for (i = 0; i < cp->NumberOfCommands; ++i) {
    ^
/project/git/Source/kwsys/ProcessUNIX.c:418:7: note: Assuming the condition is false
  if (cp->Verbatim) {
      ^
/project/git/Source/kwsys/ProcessUNIX.c:418:3: note: Taking false branch
  if (cp->Verbatim) {
  ^
/project/git/Source/kwsys/ProcessUNIX.c:434:5: note: Loop condition is true.  Entering loop body
    while (*c++)
    ^
/project/git/Source/kwsys/ProcessUNIX.c:434:12: note: Assuming pointer value is null
    while (*c++)
           ^
/project/git/Source/kwsys/ProcessUNIX.c:434:5: note: Loop condition is false. Execution continues on line 436
    while (*c++)
    ^
/project/git/Source/kwsys/ProcessUNIX.c:439:9: note: Assuming the condition is false
    if (!newCommands[cp->NumberOfCommands]) {
        ^
/project/git/Source/kwsys/ProcessUNIX.c:439:5: note: Taking false branch
    if (!newCommands[cp->NumberOfCommands]) {
    ^
/project/git/Source/kwsys/ProcessUNIX.c:444:17: note: Assuming 'i' is < 'n'
    for (i = 0; i < n; ++i) {
                ^
/project/git/Source/kwsys/ProcessUNIX.c:444:5: note: Loop condition is true.  Entering loop body
    for (i = 0; i < n; ++i) {
    ^
/project/git/Source/kwsys/ProcessUNIX.c:447:11: note: Assuming the condition is false
      if (!newCommands[cp->NumberOfCommands][i]) {
          ^
/project/git/Source/kwsys/ProcessUNIX.c:447:7: note: Taking false branch
      if (!newCommands[cp->NumberOfCommands][i]) {
      ^
/project/git/Source/kwsys/ProcessUNIX.c:444:17: note: Assuming 'i' is < 'n'
    for (i = 0; i < n; ++i) {
                ^
/project/git/Source/kwsys/ProcessUNIX.c:444:5: note: Loop condition is true.  Entering loop body
    for (i = 0; i < n; ++i) {
    ^
/project/git/Source/kwsys/ProcessUNIX.c:446:46: note: Null pointer passed as an argument to a 'nonnull' parameter
      newCommands[cp->NumberOfCommands][i] = strdup(command[i]);
                                             ^
/project/git/Source/kwsys/ProcessUNIX.c:756:5: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
    strcpy(cp->ErrorMessage, "No command");
    ^
/project/git/Source/kwsys/ProcessUNIX.c:756:5: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
/project/git/Source/kwsys/ProcessUNIX.c:763:5: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
    strcpy(cp->ErrorMessage, "Out of memory");
    ^
/project/git/Source/kwsys/ProcessUNIX.c:763:5: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
/project/git/Source/kwsys/ProcessUNIX.c:1377:9: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
        strcpy(cp->ProcessResults[prPipe].ExitExceptionString,
        ^
/project/git/Source/kwsys/ProcessUNIX.c:1377:9: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
/project/git/Source/kwsys/ProcessUNIX.c:1544:5: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
    strcpy(cp->ProcessResults[i].ExitExceptionString, "No exception");
    ^
/project/git/Source/kwsys/ProcessUNIX.c:1544:5: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
/project/git/Source/kwsys/ProcessUNIX.c:2097:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
      KWSYSPE_CASE(Fault, "Segmentation fault");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2097:7: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
      KWSYSPE_CASE(Fault, "Segmentation fault");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2103:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
      KWSYSPE_CASE(Fault, "Bus error");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2103:7: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
      KWSYSPE_CASE(Fault, "Bus error");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2109:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
      KWSYSPE_CASE(Numerical, "Floating-point exception");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2109:7: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
      KWSYSPE_CASE(Numerical, "Floating-point exception");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2114:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
      KWSYSPE_CASE(Illegal, "Illegal instruction");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2114:7: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
      KWSYSPE_CASE(Illegal, "Illegal instruction");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2119:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
      KWSYSPE_CASE(Interrupt, "User interrupt");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2119:7: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
      KWSYSPE_CASE(Interrupt, "User interrupt");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2124:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
      KWSYSPE_CASE(Other, "Child aborted");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2124:7: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
      KWSYSPE_CASE(Other, "Child aborted");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2129:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
      KWSYSPE_CASE(Other, "Child killed");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2129:7: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
      KWSYSPE_CASE(Other, "Child killed");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2134:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
      KWSYSPE_CASE(Other, "Child terminated");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2134:7: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
      KWSYSPE_CASE(Other, "Child terminated");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2139:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
      KWSYSPE_CASE(Other, "SIGHUP");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2139:7: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
      KWSYSPE_CASE(Other, "SIGHUP");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2144:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
      KWSYSPE_CASE(Other, "SIGQUIT");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2144:7: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
      KWSYSPE_CASE(Other, "SIGQUIT");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2149:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
      KWSYSPE_CASE(Other, "SIGTRAP");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2149:7: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
      KWSYSPE_CASE(Other, "SIGTRAP");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2161:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
      KWSYSPE_CASE(Other, "SIGUSR1");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2161:7: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
      KWSYSPE_CASE(Other, "SIGUSR1");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2166:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
      KWSYSPE_CASE(Other, "SIGUSR2");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2166:7: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
      KWSYSPE_CASE(Other, "SIGUSR2");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2171:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
      KWSYSPE_CASE(Other, "SIGPIPE");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2171:7: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
      KWSYSPE_CASE(Other, "SIGPIPE");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2176:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
      KWSYSPE_CASE(Other, "SIGALRM");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2176:7: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
      KWSYSPE_CASE(Other, "SIGALRM");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2181:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
      KWSYSPE_CASE(Other, "SIGSTKFLT");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2181:7: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
      KWSYSPE_CASE(Other, "SIGSTKFLT");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2186:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
      KWSYSPE_CASE(Other, "SIGCHLD");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2186:7: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
      KWSYSPE_CASE(Other, "SIGCHLD");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2195:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
      KWSYSPE_CASE(Other, "SIGCONT");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2195:7: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
      KWSYSPE_CASE(Other, "SIGCONT");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2200:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
      KWSYSPE_CASE(Other, "SIGSTOP");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2200:7: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
      KWSYSPE_CASE(Other, "SIGSTOP");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2205:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
      KWSYSPE_CASE(Other, "SIGTSTP");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2205:7: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
      KWSYSPE_CASE(Other, "SIGTSTP");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2210:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
      KWSYSPE_CASE(Other, "SIGTTIN");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2210:7: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
      KWSYSPE_CASE(Other, "SIGTTIN");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2215:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
      KWSYSPE_CASE(Other, "SIGTTOU");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2215:7: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
      KWSYSPE_CASE(Other, "SIGTTOU");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2220:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
      KWSYSPE_CASE(Other, "SIGURG");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2220:7: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
      KWSYSPE_CASE(Other, "SIGURG");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2225:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
      KWSYSPE_CASE(Other, "SIGXCPU");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2225:7: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
      KWSYSPE_CASE(Other, "SIGXCPU");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2230:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
      KWSYSPE_CASE(Other, "SIGXFSZ");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2230:7: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
      KWSYSPE_CASE(Other, "SIGXFSZ");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2235:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
      KWSYSPE_CASE(Other, "SIGVTALRM");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2235:7: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
      KWSYSPE_CASE(Other, "SIGVTALRM");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2240:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
      KWSYSPE_CASE(Other, "SIGPROF");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2240:7: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
      KWSYSPE_CASE(Other, "SIGPROF");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2245:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
      KWSYSPE_CASE(Other, "SIGWINCH");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2245:7: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
      KWSYSPE_CASE(Other, "SIGWINCH");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2250:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
      KWSYSPE_CASE(Other, "SIGPOLL");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2250:7: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
      KWSYSPE_CASE(Other, "SIGPOLL");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2262:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
      KWSYSPE_CASE(Other, "SIGPWR");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2262:7: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
      KWSYSPE_CASE(Other, "SIGPWR");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2267:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
      KWSYSPE_CASE(Other, "SIGSYS");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2267:7: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
      KWSYSPE_CASE(Other, "SIGSYS");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpi1S_5z.yaml -p=/project/git /project/git/Source/kwsys/MD5.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpxo9izS.yaml -p=/project/git /project/git/Source/kwsys/Terminal.c
/project/git/Source/kwsys/Terminal.c:72:5: warning: Function 'vfprintf' is called with an uninitialized va_list argument [clang-analyzer-valist.Uninitialized]
    vfprintf(stream, format, var_args);
    ^
/project/git/Source/kwsys/Terminal.c:62:7: note: Left side of '&&' is true
  if (!pipeIsConsole &&
      ^
/project/git/Source/kwsys/Terminal.c:63:7: note: Assuming the condition is false
      kwsysTerminalStreamIsVT100(stream, default_vt100, default_tty)) {
      ^
/project/git/Source/kwsys/Terminal.c:62:3: note: Taking false branch
  if (!pipeIsConsole &&
  ^
/project/git/Source/kwsys/Terminal.c:72:5: note: Function 'vfprintf' is called with an uninitialized va_list argument
    vfprintf(stream, format, var_args);
    ^

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpVq8q4V.yaml -p=/project/git /project/git/Source/kwsys/testDynamicLoader.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpnMWOHz.yaml -p=/project/git /project/git/Utilities/cmcurl/lib/cookie.c
/project/git/Utilities/cmcurl/lib/urldata.h:1209:8: warning: Excessive padding in 'struct UrlState' (61 padding bytes, where 5 is optimal). 
Optimal fields order: 
conn_cache, 
lastconnect, 
headerbuff, 
headersize, 
buffer, 
ulbuf, 
current_speed, 
first_host, 
session, 
sessionage, 
scratch, 
prev_signal, 
resolver, 
most_recent_ftp_entrypath, 
crlf_conversions, 
pathbuffer, 
path, 
range, 
resume_from, 
rtsp_next_client_CSeq, 
rtsp_next_server_CSeq, 
rtsp_CSeq_recv, 
infilesize, 
drain, 
fread_func, 
in, 
stream_depends_on, 
keeps_speed, 
expiretime, 
authhost, 
authproxy, 
timeoutlist, 
timenode, 
digest, 
proxydigest, 
tempwrite, 
expires, 
first_remote_port, 
tempcount, 
os_errno, 
httpversion, 
stream_weight, 
multi_owned_by_easy, 
this_is_a_follow, 
refused_stream, 
errorbuf, 
allow_port, 
authproblem, 
ftp_trying_alternative, 
wildcardmatch, 
expect100header, 
prev_block_had_trailing_cr, 
slash_removed, 
use_range, 
rangestringalloc, 
done, 
stream_depends_e, 
consider reordering the fields or adding explicit padding members [clang-analyzer-optin.performance.Padding]
struct UrlState {
       ^
/project/git/Utilities/cmcurl/lib/urldata.h:1209:8: note: Excessive padding in 'struct UrlState' (61 padding bytes, where 5 is optimal). Optimal fields order: conn_cache, lastconnect, headerbuff, headersize, buffer, ulbuf, current_speed, first_host, session, sessionage, scratch, prev_signal, resolver, most_recent_ftp_entrypath, crlf_conversions, pathbuffer, path, range, resume_from, rtsp_next_client_CSeq, rtsp_next_server_CSeq, rtsp_CSeq_recv, infilesize, drain, fread_func, in, stream_depends_on, keeps_speed, expiretime, authhost, authproxy, timeoutlist, timenode, digest, proxydigest, tempwrite, expires, first_remote_port, tempcount, os_errno, httpversion, stream_weight, multi_owned_by_easy, this_is_a_follow, refused_stream, errorbuf, allow_port, authproblem, ftp_trying_alternative, wildcardmatch, expect100header, prev_block_had_trailing_cr, slash_removed, use_range, rangestringalloc, done, stream_depends_e, consider reordering the fields or adding explicit padding members
/project/git/Utilities/cmcurl/lib/urldata.h:1457:8: warning: Excessive padding in 'struct UserDefined' (120 padding bytes, where 0 is optimal). 
Optimal fields order: 
err, 
debugdata, 
errorbuffer, 
proxyport, 
out, 
in_set, 
writeheader, 
rtp_out, 
use_port, 
httpauth, 
proxyauth, 
socks5auth, 
followlocation, 
maxredirs, 
postfields, 
seek_func, 
postfieldsize, 
fwrite_func, 
fwrite_header, 
fwrite_rtp, 
fread_func_set, 
fprogress, 
fxferinfo, 
fdebug, 
ioctl_func, 
fsockopt, 
sockopt_client, 
fopensocket, 
opensocket_client, 
fclosesocket, 
closesocket_client, 
seek_client, 
convfromnetwork, 
convtonetwork, 
convfromutf8, 
progress_client, 
ioctl_client, 
timeout, 
connecttimeout, 
accepttimeout, 
happy_eyeballs_timeout, 
server_response_timeout, 
tftp_blksize, 
filesize, 
low_speed_limit, 
low_speed_time, 
max_send_speed, 
max_recv_speed, 
set_resume_from, 
headers, 
proxyheaders, 
httppost, 
quote, 
postquote, 
prequote, 
source_quote, 
source_prequote, 
source_postquote, 
telnet_options, 
resolve, 
connect_to, 
timevalue, 
httpversion, 
general_ssl, 
dns_cache_timeout, 
buffer_size, 
upload_buffer_size, 
private_data, 
http200aliases, 
ipver, 
max_filesize, 
ssh_keyfunc, 
ssh_keyfunc_userp, 
ssh_auth_types, 
new_file_perms, 
new_directory_perms, 
allowed_protocols, 
redir_protocols, 
mail_rcpt, 
rtspversion, 
chunk_bgn, 
chunk_end, 
fnmatch, 
fnmatch_data, 
gssapi_delegation, 
tcp_keepidle, 
tcp_keepintvl, 
maxconnects, 
expect_100_timeout, 
stream_depends_on, 
stream_dependents, 
resolver_start, 
resolver_start_client, 
ssl, 
proxy_ssl, 
mimepost, 
str, 
keep_post, 
localportrange, 
is_fread_set, 
is_fwrite_set, 
timecondition, 
httpreq, 
proxytype, 
ftp_filemethod, 
ftp_create_missing_dirs, 
use_netrc, 
use_ssl, 
ftpsslauth, 
ftp_ccc, 
scope_id, 
rtspreq, 
stream_weight, 
localport, 
free_referer, 
tftp_no_options, 
sep_headers, 
cookiesession, 
crlf, 
strip_path_slash, 
ssh_compression, 
get_filetime, 
tunnel_thru_httpproxy, 
prefer_ascii, 
ftp_append, 
ftp_list_only, 
ftp_use_port, 
hide_progress, 
http_fail_on_error, 
http_keep_sending_on_error, 
http_follow_location, 
http_transfer_encoding, 
allow_auth_to_other_hosts, 
include_header, 
http_set_referer, 
http_auto_referer, 
opt_no_body, 
upload, 
verbose, 
krb, 
reuse_forbid, 
reuse_fresh, 
ftp_use_epsv, 
ftp_use_eprt, 
ftp_use_pret, 
no_signal, 
global_dns_cache, 
tcp_nodelay, 
ignorecl, 
ftp_skip_ip, 
connect_only, 
http_te_skip, 
http_ce_skip, 
proxy_transfer_mode, 
sasl_ir, 
wildcard_enabled, 
tcp_keepalive, 
tcp_fastopen, 
ssl_enable_npn, 
ssl_enable_alpn, 
path_as_is, 
pipewait, 
suppress_connect_headers, 
dns_shuffle_addresses, 
stream_depends_e, 
haproxyprotocol, 
abstract_unix_socket, 
disallow_username_in_url, 
consider reordering the fields or adding explicit padding members [clang-analyzer-optin.performance.Padding]
struct UserDefined {
       ^
2 warnings generated.

4 warnings generated.

/project/git/Utilities/cmcurl/lib/urldata.h:1457:8: note: Excessive padding in 'struct UserDefined' (120 padding bytes, where 0 is optimal). Optimal fields order: err, debugdata, errorbuffer, proxyport, out, in_set, writeheader, rtp_out, use_port, httpauth, proxyauth, socks5auth, followlocation, maxredirs, postfields, seek_func, postfieldsize, fwrite_func, fwrite_header, fwrite_rtp, fread_func_set, fprogress, fxferinfo, fdebug, ioctl_func, fsockopt, sockopt_client, fopensocket, opensocket_client, fclosesocket, closesocket_client, seek_client, convfromnetwork, convtonetwork, convfromutf8, progress_client, ioctl_client, timeout, connecttimeout, accepttimeout, happy_eyeballs_timeout, server_response_timeout, tftp_blksize, filesize, low_speed_limit, low_speed_time, max_send_speed, max_recv_speed, set_resume_from, headers, proxyheaders, httppost, quote, postquote, prequote, source_quote, source_prequote, source_postquote, telnet_options, resolve, connect_to, timevalue, httpversion, general_ssl, dns_cache_timeout, buffer_size, upload_buffer_size, private_data, http200aliases, ipver, max_filesize, ssh_keyfunc, ssh_keyfunc_userp, ssh_auth_types, new_file_perms, new_directory_perms, allowed_protocols, redir_protocols, mail_rcpt, rtspversion, chunk_bgn, chunk_end, fnmatch, fnmatch_data, gssapi_delegation, tcp_keepidle, tcp_keepintvl, maxconnects, expect_100_timeout, stream_depends_on, stream_dependents, resolver_start, resolver_start_client, ssl, proxy_ssl, mimepost, str, keep_post, localportrange, is_fread_set, is_fwrite_set, timecondition, httpreq, proxytype, ftp_filemethod, ftp_create_missing_dirs, use_netrc, use_ssl, ftpsslauth, ftp_ccc, scope_id, rtspreq, stream_weight, localport, free_referer, tftp_no_options, sep_headers, cookiesession, crlf, strip_path_slash, ssh_compression, get_filetime, tunnel_thru_httpproxy, prefer_ascii, ftp_append, ftp_list_only, ftp_use_port, hide_progress, http_fail_on_error, http_keep_sending_on_error, http_follow_location, http_transfer_encoding, allow_auth_to_other_hosts, include_header, http_set_referer, http_auto_referer, opt_no_body, upload, verbose, krb, reuse_forbid, reuse_fresh, ftp_use_epsv, ftp_use_eprt, ftp_use_pret, no_signal, global_dns_cache, tcp_nodelay, ignorecl, ftp_skip_ip, connect_only, http_te_skip, http_ce_skip, proxy_transfer_mode, sasl_ir, wildcard_enabled, tcp_keepalive, tcp_fastopen, ssl_enable_npn, ssl_enable_alpn, path_as_is, pipewait, suppress_connect_headers, dns_shuffle_addresses, stream_depends_e, haproxyprotocol, abstract_unix_socket, disallow_username_in_url, consider reordering the fields or adding explicit padding members

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmp_NGnBt.yaml -p=/project/git /project/git/Utilities/cmcurl/lib/ssh.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpFQKBcQ.yaml -p=/project/git /project/git/Utilities/cmcurl/lib/socks_sspi.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpzxUA2r.yaml -p=/project/git /project/git/Utilities/cmcurl/lib/curl_sspi.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpA9s1Ox.yaml -p=/project/git /project/git/Utilities/cmcurl/lib/slist.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpVeXrji.yaml -p=/project/git /project/git/Utilities/cmcurl/lib/ftp.c
/project/git/Utilities/cmcurl/lib/ftp.c:1017:11: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
          strcpy(addr, string_ftpport);
          ^
/project/git/Utilities/cmcurl/lib/ftp.c:1017:11: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
/project/git/Utilities/cmcurl/lib/ftp.c:3971:3: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
  strcpy(&s[write_len], "\r\n"); /* append a trailing CRLF */
  ^
/project/git/Utilities/cmcurl/lib/ftp.c:3971:3: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
/project/git/Utilities/cmcurl/lib/urldata.h:1209:8: warning: Excessive padding in 'struct UrlState' (61 padding bytes, where 5 is optimal). 
Optimal fields order: 
conn_cache, 
lastconnect, 
headerbuff, 
headersize, 
buffer, 
ulbuf, 
current_speed, 
first_host, 
session, 
sessionage, 
scratch, 
prev_signal, 
resolver, 
most_recent_ftp_entrypath, 
crlf_conversions, 
pathbuffer, 
path, 
range, 
resume_from, 
rtsp_next_client_CSeq, 
rtsp_next_server_CSeq, 
rtsp_CSeq_recv, 
infilesize, 
drain, 
fread_func, 
in, 
stream_depends_on, 
keeps_speed, 
expiretime, 
authhost, 
authproxy, 
timeoutlist, 
timenode, 
digest, 
proxydigest, 
tempwrite, 
expires, 
first_remote_port, 
tempcount, 
os_errno, 
httpversion, 
stream_weight, 
multi_owned_by_easy, 
this_is_a_follow, 
refused_stream, 
errorbuf, 
allow_port, 
authproblem, 
ftp_trying_alternative, 
wildcardmatch, 
expect100header, 
prev_block_had_trailing_cr, 
slash_removed, 
use_range, 
rangestringalloc, 
done, 
stream_depends_e, 
consider reordering the fields or adding explicit padding members [clang-analyzer-optin.performance.Padding]
struct UrlState {
       ^
/project/git/Utilities/cmcurl/lib/urldata.h:1209:8: note: Excessive padding in 'struct UrlState' (61 padding bytes, where 5 is optimal). Optimal fields order: conn_cache, lastconnect, headerbuff, headersize, buffer, ulbuf, current_speed, first_host, session, sessionage, scratch, prev_signal, resolver, most_recent_ftp_entrypath, crlf_conversions, pathbuffer, path, range, resume_from, rtsp_next_client_CSeq, rtsp_next_server_CSeq, rtsp_CSeq_recv, infilesize, drain, fread_func, in, stream_depends_on, keeps_speed, expiretime, authhost, authproxy, timeoutlist, timenode, digest, proxydigest, tempwrite, expires, first_remote_port, tempcount, os_errno, httpversion, stream_weight, multi_owned_by_easy, this_is_a_follow, refused_stream, errorbuf, allow_port, authproblem, ftp_trying_alternative, wildcardmatch, expect100header, prev_block_had_trailing_cr, slash_removed, use_range, rangestringalloc, done, stream_depends_e, consider reordering the fields or adding explicit padding members
/project/git/Utilities/cmcurl/lib/urldata.h:1457:8: warning: Excessive padding in 'struct UserDefined' (120 padding bytes, where 0 is optimal). 
Optimal fields order: 
err, 
debugdata, 
errorbuffer, 
proxyport, 
out, 
in_set, 
writeheader, 
rtp_out, 
use_port, 
httpauth, 
proxyauth, 
socks5auth, 
followlocation, 
maxredirs, 
postfields, 
seek_func, 
postfieldsize, 
fwrite_func, 
fwrite_header, 
fwrite_rtp, 
fread_func_set, 
fprogress, 
fxferinfo, 
fdebug, 
ioctl_func, 
fsockopt, 
sockopt_client, 
fopensocket, 
opensocket_client, 
fclosesocket, 
closesocket_client, 
seek_client, 
convfromnetwork, 
convtonetwork, 
convfromutf8, 
progress_client, 
ioctl_client, 
timeout, 
connecttimeout, 
accepttimeout, 
happy_eyeballs_timeout, 
server_response_timeout, 
tftp_blksize, 
filesize, 
low_speed_limit, 
low_speed_time, 
max_send_speed, 
max_recv_speed, 
set_resume_from, 
headers, 
proxyheaders, 
httppost, 
quote, 
postquote, 
prequote, 
source_quote, 
source_prequote, 
source_postquote, 
telnet_options, 
resolve, 
connect_to, 
timevalue, 
httpversion, 
general_ssl, 
dns_cache_timeout, 
buffer_size, 
upload_buffer_size, 
private_data, 
http200aliases, 
ipver, 
max_filesize, 
ssh_keyfunc, 
ssh_keyfunc_userp, 
ssh_auth_types, 
new_file_perms, 
new_directory_perms, 
allowed_protocols, 
redir_protocols, 
mail_rcpt, 
rtspversion, 
chunk_bgn, 
chunk_end, 
fnmatch, 
fnmatch_data, 
gssapi_delegation, 
tcp_keepidle, 
tcp_keepintvl, 
maxconnects, 
expect_100_timeout, 
stream_depends_on, 
stream_dependents, 
resolver_start, 
resolver_start_client, 
ssl, 
proxy_ssl, 
mimepost, 
str, 
keep_post, 
localportrange, 
is_fread_set, 
is_fwrite_set, 
timecondition, 
httpreq, 
proxytype, 
ftp_filemethod, 
ftp_create_missing_dirs, 
use_netrc, 
use_ssl, 
ftpsslauth, 
ftp_ccc, 
scope_id, 
rtspreq, 
stream_weight, 
localport, 
free_referer, 
tftp_no_options, 
sep_headers, 
cookiesession, 
crlf, 
strip_path_slash, 
ssh_compression, 
get_filetime, 
tunnel_thru_httpproxy, 
prefer_ascii, 
ftp_append, 
ftp_list_only, 
ftp_use_port, 
hide_progress, 
http_fail_on_error, 
http_keep_sending_on_error, 
http_follow_location, 
http_transfer_encoding, 
allow_auth_to_other_hosts, 
include_header, 
http_set_referer, 
http_auto_referer, 
opt_no_body, 
upload, 
verbose, 
krb, 
reuse_forbid, 
reuse_fresh, 
ftp_use_epsv, 
ftp_use_eprt, 
ftp_use_pret, 
no_signal, 
global_dns_cache, 
tcp_nodelay, 
ignorecl, 
ftp_skip_ip, 
connect_only, 
http_te_skip, 
http_ce_skip, 
proxy_transfer_mode, 
sasl_ir, 
wildcard_enabled, 
tcp_keepalive, 
tcp_fastopen, 
ssl_enable_npn, 
ssl_enable_alpn, 
path_as_is, 
pipewait, 
suppress_connect_headers, 
dns_shuffle_addresses, 
stream_depends_e, 
haproxyprotocol, 
abstract_unix_socket, 
disallow_username_in_url, 
consider reordering the fields or adding explicit padding members [clang-analyzer-optin.performance.Padding]
struct UserDefined {
       ^
/project/git/Utilities/cmcurl/lib/urldata.h:1457:8: note: Excessive padding in 'struct UserDefined' (120 padding bytes, where 0 is optimal). Optimal fields order: err, debugdata, errorbuffer, proxyport, out, in_set, writeheader, rtp_out, use_port, httpauth, proxyauth, socks5auth, followlocation, maxredirs, postfields, seek_func, postfieldsize, fwrite_func, fwrite_header, fwrite_rtp, fread_func_set, fprogress, fxferinfo, fdebug, ioctl_func, fsockopt, sockopt_client, fopensocket, opensocket_client, fclosesocket, closesocket_client, seek_client, convfromnetwork, convtonetwork, convfromutf8, progress_client, ioctl_client, timeout, connecttimeout, accepttimeout, happy_eyeballs_timeout, server_response_timeout, tftp_blksize, filesize, low_speed_limit, low_speed_time, max_send_speed, max_recv_speed, set_resume_from, headers, proxyheaders, httppost, quote, postquote, prequote, source_quote, source_prequote, source_postquote, telnet_options, resolve, connect_to, timevalue, httpversion, general_ssl, dns_cache_timeout, buffer_size, upload_buffer_size, private_data, http200aliases, ipver, max_filesize, ssh_keyfunc, ssh_keyfunc_userp, ssh_auth_types, new_file_perms, new_directory_perms, allowed_protocols, redir_protocols, mail_rcpt, rtspversion, chunk_bgn, chunk_end, fnmatch, fnmatch_data, gssapi_delegation, tcp_keepidle, tcp_keepintvl, maxconnects, expect_100_timeout, stream_depends_on, stream_dependents, resolver_start, resolver_start_client, ssl, proxy_ssl, mimepost, str, keep_post, localportrange, is_fread_set, is_fwrite_set, timecondition, httpreq, proxytype, ftp_filemethod, ftp_create_missing_dirs, use_netrc, use_ssl, ftpsslauth, ftp_ccc, scope_id, rtspreq, stream_weight, localport, free_referer, tftp_no_options, sep_headers, cookiesession, crlf, strip_path_slash, ssh_compression, get_filetime, tunnel_thru_httpproxy, prefer_ascii, ftp_append, ftp_list_only, ftp_use_port, hide_progress, http_fail_on_error, http_keep_sending_on_error, http_follow_location, http_transfer_encoding, allow_auth_to_other_hosts, include_header, http_set_referer, http_auto_referer, opt_no_body, upload, verbose, krb, reuse_forbid, reuse_fresh, ftp_use_epsv, ftp_use_eprt, ftp_use_pret, no_signal, global_dns_cache, tcp_nodelay, ignorecl, ftp_skip_ip, connect_only, http_te_skip, http_ce_skip, proxy_transfer_mode, sasl_ir, wildcard_enabled, tcp_keepalive, tcp_fastopen, ssl_enable_npn, ssl_enable_alpn, path_as_is, pipewait, suppress_connect_headers, dns_shuffle_addresses, stream_depends_e, haproxyprotocol, abstract_unix_socket, disallow_username_in_url, consider reordering the fields or adding explicit padding members

2 warnings generated.

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpdYan9X.yaml -p=/project/git /project/git/Utilities/cmcurl/lib/nonblock.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpaIfvSP.yaml -p=/project/git /project/git/Utilities/cmcurl/lib/curl_memrchr.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmp7dRoNt.yaml -p=/project/git /project/git/Utilities/cmcurl/lib/imap.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpxT5RLB.yaml -p=/project/git /project/git/Utilities/cmcurl/lib/connect.c
/project/git/Utilities/cmcurl/lib/urldata.h:1209:8: warning: Excessive padding in 'struct UrlState' (61 padding bytes, where 5 is optimal). 
Optimal fields order: 
conn_cache, 
lastconnect, 
headerbuff, 
headersize, 
buffer, 
ulbuf, 
current_speed, 
first_host, 
session, 
sessionage, 
scratch, 
prev_signal, 
resolver, 
most_recent_ftp_entrypath, 
crlf_conversions, 
pathbuffer, 
path, 
range, 
resume_from, 
rtsp_next_client_CSeq, 
rtsp_next_server_CSeq, 
rtsp_CSeq_recv, 
infilesize, 
drain, 
fread_func, 
in, 
stream_depends_on, 
keeps_speed, 
expiretime, 
authhost, 
authproxy, 
timeoutlist, 
timenode, 
digest, 
proxydigest, 
tempwrite, 
expires, 
first_remote_port, 
tempcount, 
os_errno, 
httpversion, 
stream_weight, 
multi_owned_by_easy, 
this_is_a_follow, 
refused_stream, 
errorbuf, 
allow_port, 
authproblem, 
ftp_trying_alternative, 
wildcardmatch, 
expect100header, 
prev_block_had_trailing_cr, 
slash_removed, 
use_range, 
rangestringalloc, 
done, 
stream_depends_e, 
consider reordering the fields or adding explicit padding members [clang-analyzer-optin.performance.Padding]
struct UrlState {
       ^
/project/git/Utilities/cmcurl/lib/urldata.h:1209:8: note: Excessive padding in 'struct UrlState' (61 padding bytes, where 5 is optimal). Optimal fields order: conn_cache, lastconnect, headerbuff, headersize, buffer, ulbuf, current_speed, first_host, session, sessionage, scratch, prev_signal, resolver, most_recent_ftp_entrypath, crlf_conversions, pathbuffer, path, range, resume_from, rtsp_next_client_CSeq, rtsp_next_server_CSeq, rtsp_CSeq_recv, infilesize, drain, fread_func, in, stream_depends_on, keeps_speed, expiretime, authhost, authproxy, timeoutlist, timenode, digest, proxydigest, tempwrite, expires, first_remote_port, tempcount, os_errno, httpversion, stream_weight, multi_owned_by_easy, this_is_a_follow, refused_stream, errorbuf, allow_port, authproblem, ftp_trying_alternative, wildcardmatch, expect100header, prev_block_had_trailing_cr, slash_removed, use_range, rangestringalloc, done, stream_depends_e, consider reordering the fields or adding explicit padding members
/project/git/Utilities/cmcurl/lib/urldata.h:1457:8: warning: Excessive padding in 'struct UserDefined' (120 padding bytes, where 0 is optimal). 
Optimal fields order: 
err, 
debugdata, 
errorbuffer, 
proxyport, 
out, 
in_set, 
writeheader, 
rtp_out, 
use_port, 
httpauth, 
proxyauth, 
socks5auth, 
followlocation, 
maxredirs, 
postfields, 
seek_func, 
postfieldsize, 
fwrite_func, 
fwrite_header, 
fwrite_rtp, 
fread_func_set, 
fprogress, 
fxferinfo, 
fdebug, 
ioctl_func, 
fsockopt, 
sockopt_client, 
fopensocket, 
opensocket_client, 
fclosesocket, 
closesocket_client, 
seek_client, 
convfromnetwork, 
convtonetwork, 
convfromutf8, 
progress_client, 
ioctl_client, 
timeout, 
connecttimeout, 
accepttimeout, 
happy_eyeballs_timeout, 
server_response_timeout, 
tftp_blksize, 
filesize, 
low_speed_limit, 
low_speed_time, 
max_send_speed, 
max_recv_speed, 
set_resume_from, 
headers, 
proxyheaders, 
httppost, 
quote, 
postquote, 
prequote, 
source_quote, 
source_prequote, 
source_postquote, 
telnet_options, 
resolve, 
connect_to, 
timevalue, 
httpversion, 
general_ssl, 
dns_cache_timeout, 
buffer_size, 
upload_buffer_size, 
private_data, 
http200aliases, 
ipver, 
max_filesize, 
ssh_keyfunc, 
ssh_keyfunc_userp, 
ssh_auth_types, 
new_file_perms, 
new_directory_perms, 
allowed_protocols, 
redir_protocols, 
mail_rcpt, 
rtspversion, 
chunk_bgn, 
chunk_end, 
fnmatch, 
fnmatch_data, 
gssapi_delegation, 
tcp_keepidle, 
tcp_keepintvl, 
maxconnects, 
expect_100_timeout, 
stream_depends_on, 
stream_dependents, 
resolver_start, 
resolver_start_client, 
ssl, 
proxy_ssl, 
mimepost, 
str, 
keep_post, 
localportrange, 
is_fread_set, 
is_fwrite_set, 
timecondition, 
httpreq, 
proxytype, 
ftp_filemethod, 
ftp_create_missing_dirs, 
use_netrc, 
use_ssl, 
ftpsslauth, 
ftp_ccc, 
scope_id, 
rtspreq, 
stream_weight, 
localport, 
free_referer, 
tftp_no_options, 
sep_headers, 
cookiesession, 
crlf, 
strip_path_slash, 
ssh_compression, 
get_filetime, 
tunnel_thru_httpproxy, 
prefer_ascii, 
ftp_append, 
ftp_list_only, 
ftp_use_port, 
hide_progress, 
http_fail_on_error, 
http_keep_sending_on_error, 
http_follow_location, 
http_transfer_encoding, 
allow_auth_to_other_hosts, 
include_header, 
http_set_referer, 
http_auto_referer, 
opt_no_body, 
upload, 
verbose, 
krb, 
reuse_forbid, 
reuse_fresh, 
ftp_use_epsv, 
ftp_use_eprt, 
ftp_use_pret, 
no_signal, 
global_dns_cache, 
tcp_nodelay, 
ignorecl, 
ftp_skip_ip, 
connect_only, 
http_te_skip, 
http_ce_skip, 
proxy_transfer_mode, 
sasl_ir, 
wildcard_enabled, 
tcp_keepalive, 
tcp_fastopen, 
ssl_enable_npn, 
ssl_enable_alpn, 
path_as_is, 
pipewait, 
suppress_connect_headers, 
dns_shuffle_addresses, 
stream_depends_e, 
haproxyprotocol, 
abstract_unix_socket, 
disallow_username_in_url, 
consider reordering the fields or adding explicit padding members [clang-analyzer-optin.performance.Padding]
struct UserDefined {
       ^
36 warnings generated.
72 warnings generated.

/project/git/Utilities/cmcurl/lib/urldata.h:1457:8: note: Excessive padding in 'struct UserDefined' (120 padding bytes, where 0 is optimal). Optimal fields order: err, debugdata, errorbuffer, proxyport, out, in_set, writeheader, rtp_out, use_port, httpauth, proxyauth, socks5auth, followlocation, maxredirs, postfields, seek_func, postfieldsize, fwrite_func, fwrite_header, fwrite_rtp, fread_func_set, fprogress, fxferinfo, fdebug, ioctl_func, fsockopt, sockopt_client, fopensocket, opensocket_client, fclosesocket, closesocket_client, seek_client, convfromnetwork, convtonetwork, convfromutf8, progress_client, ioctl_client, timeout, connecttimeout, accepttimeout, happy_eyeballs_timeout, server_response_timeout, tftp_blksize, filesize, low_speed_limit, low_speed_time, max_send_speed, max_recv_speed, set_resume_from, headers, proxyheaders, httppost, quote, postquote, prequote, source_quote, source_prequote, source_postquote, telnet_options, resolve, connect_to, timevalue, httpversion, general_ssl, dns_cache_timeout, buffer_size, upload_buffer_size, private_data, http200aliases, ipver, max_filesize, ssh_keyfunc, ssh_keyfunc_userp, ssh_auth_types, new_file_perms, new_directory_perms, allowed_protocols, redir_protocols, mail_rcpt, rtspversion, chunk_bgn, chunk_end, fnmatch, fnmatch_data, gssapi_delegation, tcp_keepidle, tcp_keepintvl, maxconnects, expect_100_timeout, stream_depends_on, stream_dependents, resolver_start, resolver_start_client, ssl, proxy_ssl, mimepost, str, keep_post, localportrange, is_fread_set, is_fwrite_set, timecondition, httpreq, proxytype, ftp_filemethod, ftp_create_missing_dirs, use_netrc, use_ssl, ftpsslauth, ftp_ccc, scope_id, rtspreq, stream_weight, localport, free_referer, tftp_no_options, sep_headers, cookiesession, crlf, strip_path_slash, ssh_compression, get_filetime, tunnel_thru_httpproxy, prefer_ascii, ftp_append, ftp_list_only, ftp_use_port, hide_progress, http_fail_on_error, http_keep_sending_on_error, http_follow_location, http_transfer_encoding, allow_auth_to_other_hosts, include_header, http_set_referer, http_auto_referer, opt_no_body, upload, verbose, krb, reuse_forbid, reuse_fresh, ftp_use_epsv, ftp_use_eprt, ftp_use_pret, no_signal, global_dns_cache, tcp_nodelay, ignorecl, ftp_skip_ip, connect_only, http_te_skip, http_ce_skip, proxy_transfer_mode, sasl_ir, wildcard_enabled, tcp_keepalive, tcp_fastopen, ssl_enable_npn, ssl_enable_alpn, path_as_is, pipewait, suppress_connect_headers, dns_shuffle_addresses, stream_depends_e, haproxyprotocol, abstract_unix_socket, disallow_username_in_url, consider reordering the fields or adding explicit padding members

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpeYkH_2.yaml -p=/project/git /project/git/Utilities/cmcurl/lib/smtp.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpKxQzPb.yaml -p=/project/git /project/git/Utilities/cmcurl/lib/pop3.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpeXrGd9.yaml -p=/project/git /project/git/Utilities/cmcurl/lib/rtsp.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpjBUu0u.yaml -p=/project/git /project/git/Utilities/cmcurl/lib/curl_threads.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpoS5M8W.yaml -p=/project/git /project/git/Utilities/cmcurl/lib/warnless.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpH6BRvn.yaml -p=/project/git /project/git/Utilities/cmcurl/lib/curl_rtmp.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmp5ArVCu.yaml -p=/project/git /project/git/Source/kwsys/ProcessUNIX.c
/project/git/Source/kwsys/ProcessUNIX.c:446:46: warning: Null pointer passed as an argument to a 'nonnull' parameter [clang-analyzer-core.NonNullParamChecker]
      newCommands[cp->NumberOfCommands][i] = strdup(command[i]);
                                             ^
/project/git/Source/kwsys/ProcessUNIX.c:397:7: note: Assuming 'cp' is non-null
  if (!cp || !command || !*command) {
      ^
/project/git/Source/kwsys/ProcessUNIX.c:397:7: note: Left side of '||' is false
/project/git/Source/kwsys/ProcessUNIX.c:397:14: note: Assuming 'command' is non-null
  if (!cp || !command || !*command) {
             ^
/project/git/Source/kwsys/ProcessUNIX.c:397:7: note: Left side of '||' is false
  if (!cp || !command || !*command) {
      ^
/project/git/Source/kwsys/ProcessUNIX.c:397:26: note: Assuming the condition is false
  if (!cp || !command || !*command) {
                         ^
/project/git/Source/kwsys/ProcessUNIX.c:397:3: note: Taking false branch
  if (!cp || !command || !*command) {
  ^
/project/git/Source/kwsys/ProcessUNIX.c:403:9: note: Assuming 'newCommands' is not null
  if (!(newCommands =
        ^
/project/git/Source/kwsys/ProcessUNIX.c:403:3: note: Taking false branch
  if (!(newCommands =
  ^
/project/git/Source/kwsys/ProcessUNIX.c:412:17: note: Assuming the condition is false
    for (i = 0; i < cp->NumberOfCommands; ++i) {
                ^
/project/git/Source/kwsys/ProcessUNIX.c:412:5: note: Loop condition is false. Execution continues on line 418
    for (i = 0; i < cp->NumberOfCommands; ++i) {
    ^
/project/git/Source/kwsys/ProcessUNIX.c:418:7: note: Assuming the condition is false
  if (cp->Verbatim) {
      ^
/project/git/Source/kwsys/ProcessUNIX.c:418:3: note: Taking false branch
  if (cp->Verbatim) {
  ^
/project/git/Source/kwsys/ProcessUNIX.c:434:5: note: Loop condition is true.  Entering loop body
    while (*c++)
    ^
/project/git/Source/kwsys/ProcessUNIX.c:434:12: note: Assuming pointer value is null
    while (*c++)
           ^
/project/git/Source/kwsys/ProcessUNIX.c:434:5: note: Loop condition is false. Execution continues on line 436
    while (*c++)
    ^
/project/git/Source/kwsys/ProcessUNIX.c:439:9: note: Assuming the condition is false
    if (!newCommands[cp->NumberOfCommands]) {
        ^
/project/git/Source/kwsys/ProcessUNIX.c:439:5: note: Taking false branch
    if (!newCommands[cp->NumberOfCommands]) {
    ^
/project/git/Source/kwsys/ProcessUNIX.c:444:17: note: Assuming 'i' is < 'n'
    for (i = 0; i < n; ++i) {
                ^
/project/git/Source/kwsys/ProcessUNIX.c:444:5: note: Loop condition is true.  Entering loop body
    for (i = 0; i < n; ++i) {
    ^
/project/git/Source/kwsys/ProcessUNIX.c:447:11: note: Assuming the condition is false
      if (!newCommands[cp->NumberOfCommands][i]) {
          ^
/project/git/Source/kwsys/ProcessUNIX.c:447:7: note: Taking false branch
      if (!newCommands[cp->NumberOfCommands][i]) {
      ^
/project/git/Source/kwsys/ProcessUNIX.c:444:17: note: Assuming 'i' is < 'n'
    for (i = 0; i < n; ++i) {
                ^
/project/git/Source/kwsys/ProcessUNIX.c:444:5: note: Loop condition is true.  Entering loop body
    for (i = 0; i < n; ++i) {
    ^
/project/git/Source/kwsys/ProcessUNIX.c:446:46: note: Null pointer passed as an argument to a 'nonnull' parameter
      newCommands[cp->NumberOfCommands][i] = strdup(command[i]);
                                             ^
/project/git/Source/kwsys/ProcessUNIX.c:756:5: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
    strcpy(cp->ErrorMessage, "No command");
    ^
/project/git/Source/kwsys/ProcessUNIX.c:756:5: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
/project/git/Source/kwsys/ProcessUNIX.c:763:5: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
    strcpy(cp->ErrorMessage, "Out of memory");
    ^
/project/git/Source/kwsys/ProcessUNIX.c:763:5: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
/project/git/Source/kwsys/ProcessUNIX.c:1377:9: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
        strcpy(cp->ProcessResults[prPipe].ExitExceptionString,
        ^
/project/git/Source/kwsys/ProcessUNIX.c:1377:9: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
/project/git/Source/kwsys/ProcessUNIX.c:1544:5: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
    strcpy(cp->ProcessResults[i].ExitExceptionString, "No exception");
    ^
/project/git/Source/kwsys/ProcessUNIX.c:1544:5: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
/project/git/Source/kwsys/ProcessUNIX.c:2097:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
      KWSYSPE_CASE(Fault, "Segmentation fault");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2097:7: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
      KWSYSPE_CASE(Fault, "Segmentation fault");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2103:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
      KWSYSPE_CASE(Fault, "Bus error");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2103:7: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
      KWSYSPE_CASE(Fault, "Bus error");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2109:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
      KWSYSPE_CASE(Numerical, "Floating-point exception");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2109:7: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
      KWSYSPE_CASE(Numerical, "Floating-point exception");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2114:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
      KWSYSPE_CASE(Illegal, "Illegal instruction");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2114:7: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
      KWSYSPE_CASE(Illegal, "Illegal instruction");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2119:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
      KWSYSPE_CASE(Interrupt, "User interrupt");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2119:7: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
      KWSYSPE_CASE(Interrupt, "User interrupt");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2124:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
      KWSYSPE_CASE(Other, "Child aborted");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2124:7: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
      KWSYSPE_CASE(Other, "Child aborted");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2129:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
      KWSYSPE_CASE(Other, "Child killed");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2129:7: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
      KWSYSPE_CASE(Other, "Child killed");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2134:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
      KWSYSPE_CASE(Other, "Child terminated");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2134:7: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
      KWSYSPE_CASE(Other, "Child terminated");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2139:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
      KWSYSPE_CASE(Other, "SIGHUP");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2139:7: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
      KWSYSPE_CASE(Other, "SIGHUP");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2144:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
      KWSYSPE_CASE(Other, "SIGQUIT");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2144:7: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
      KWSYSPE_CASE(Other, "SIGQUIT");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2149:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
      KWSYSPE_CASE(Other, "SIGTRAP");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2149:7: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
      KWSYSPE_CASE(Other, "SIGTRAP");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2161:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
      KWSYSPE_CASE(Other, "SIGUSR1");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2161:7: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
      KWSYSPE_CASE(Other, "SIGUSR1");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2166:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
      KWSYSPE_CASE(Other, "SIGUSR2");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2166:7: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
      KWSYSPE_CASE(Other, "SIGUSR2");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2171:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
      KWSYSPE_CASE(Other, "SIGPIPE");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2171:7: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
      KWSYSPE_CASE(Other, "SIGPIPE");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2176:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
      KWSYSPE_CASE(Other, "SIGALRM");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2176:7: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
      KWSYSPE_CASE(Other, "SIGALRM");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2181:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
      KWSYSPE_CASE(Other, "SIGSTKFLT");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2181:7: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
      KWSYSPE_CASE(Other, "SIGSTKFLT");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2186:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
      KWSYSPE_CASE(Other, "SIGCHLD");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2186:7: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
      KWSYSPE_CASE(Other, "SIGCHLD");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2195:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
      KWSYSPE_CASE(Other, "SIGCONT");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2195:7: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
      KWSYSPE_CASE(Other, "SIGCONT");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2200:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
      KWSYSPE_CASE(Other, "SIGSTOP");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2200:7: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
      KWSYSPE_CASE(Other, "SIGSTOP");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2205:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
      KWSYSPE_CASE(Other, "SIGTSTP");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2205:7: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
      KWSYSPE_CASE(Other, "SIGTSTP");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2210:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
      KWSYSPE_CASE(Other, "SIGTTIN");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2210:7: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
      KWSYSPE_CASE(Other, "SIGTTIN");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2215:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
      KWSYSPE_CASE(Other, "SIGTTOU");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2215:7: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
      KWSYSPE_CASE(Other, "SIGTTOU");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2220:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
      KWSYSPE_CASE(Other, "SIGURG");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2220:7: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
      KWSYSPE_CASE(Other, "SIGURG");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2225:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
      KWSYSPE_CASE(Other, "SIGXCPU");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2225:7: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
      KWSYSPE_CASE(Other, "SIGXCPU");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2230:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
      KWSYSPE_CASE(Other, "SIGXFSZ");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2230:7: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
      KWSYSPE_CASE(Other, "SIGXFSZ");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2235:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
      KWSYSPE_CASE(Other, "SIGVTALRM");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2235:7: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
      KWSYSPE_CASE(Other, "SIGVTALRM");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2240:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
      KWSYSPE_CASE(Other, "SIGPROF");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2240:7: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
      KWSYSPE_CASE(Other, "SIGPROF");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2245:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
      KWSYSPE_CASE(Other, "SIGWINCH");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2245:7: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
      KWSYSPE_CASE(Other, "SIGWINCH");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2250:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
      KWSYSPE_CASE(Other, "SIGPOLL");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2250:7: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
      KWSYSPE_CASE(Other, "SIGPOLL");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2262:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
      KWSYSPE_CASE(Other, "SIGPWR");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2262:7: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
      KWSYSPE_CASE(Other, "SIGPWR");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2267:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
      KWSYSPE_CASE(Other, "SIGSYS");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2267:7: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
      KWSYSPE_CASE(Other, "SIGSYS");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:446:46: warning: Null pointer passed as an argument to a 'nonnull' parameter [clang-analyzer-core.NonNullParamChecker]
      newCommands[cp->NumberOfCommands][i] = strdup(command[i]);
                                             ^
/project/git/Source/kwsys/ProcessUNIX.c:397:7: note: Assuming 'cp' is non-null
  if (!cp || !command || !*command) {
      ^
/project/git/Source/kwsys/ProcessUNIX.c:397:7: note: Left side of '||' is false
/project/git/Source/kwsys/ProcessUNIX.c:397:14: note: Assuming 'command' is non-null
  if (!cp || !command || !*command) {
             ^
/project/git/Source/kwsys/ProcessUNIX.c:397:7: note: Left side of '||' is false
  if (!cp || !command || !*command) {
      ^
/project/git/Source/kwsys/ProcessUNIX.c:397:26: note: Assuming the condition is false
  if (!cp || !command || !*command) {
                         ^
/project/git/Source/kwsys/ProcessUNIX.c:397:3: note: Taking false branch
  if (!cp || !command || !*command) {
  ^
/project/git/Source/kwsys/ProcessUNIX.c:403:9: note: Assuming 'newCommands' is not null
  if (!(newCommands =
        ^
/project/git/Source/kwsys/ProcessUNIX.c:403:3: note: Taking false branch
  if (!(newCommands =
  ^
/project/git/Source/kwsys/ProcessUNIX.c:412:17: note: Assuming the condition is false
    for (i = 0; i < cp->NumberOfCommands; ++i) {
                ^
/project/git/Source/kwsys/ProcessUNIX.c:412:5: note: Loop condition is false. Execution continues on line 418
    for (i = 0; i < cp->NumberOfCommands; ++i) {
    ^
/project/git/Source/kwsys/ProcessUNIX.c:418:7: note: Assuming the condition is false
  if (cp->Verbatim) {
      ^
/project/git/Source/kwsys/ProcessUNIX.c:418:3: note: Taking false branch
  if (cp->Verbatim) {
  ^
/project/git/Source/kwsys/ProcessUNIX.c:434:5: note: Loop condition is true.  Entering loop body
    while (*c++)
    ^
/project/git/Source/kwsys/ProcessUNIX.c:434:12: note: Assuming pointer value is null
    while (*c++)
           ^
/project/git/Source/kwsys/ProcessUNIX.c:434:5: note: Loop condition is false. Execution continues on line 436
    while (*c++)
    ^
/project/git/Source/kwsys/ProcessUNIX.c:439:9: note: Assuming the condition is false
    if (!newCommands[cp->NumberOfCommands]) {
        ^
/project/git/Source/kwsys/ProcessUNIX.c:439:5: note: Taking false branch
    if (!newCommands[cp->NumberOfCommands]) {
    ^
/project/git/Source/kwsys/ProcessUNIX.c:444:17: note: Assuming 'i' is < 'n'
    for (i = 0; i < n; ++i) {
                ^
/project/git/Source/kwsys/ProcessUNIX.c:444:5: note: Loop condition is true.  Entering loop body
    for (i = 0; i < n; ++i) {
    ^
/project/git/Source/kwsys/ProcessUNIX.c:447:11: note: Assuming the condition is false
      if (!newCommands[cp->NumberOfCommands][i]) {
          ^
/project/git/Source/kwsys/ProcessUNIX.c:447:7: note: Taking false branch
      if (!newCommands[cp->NumberOfCommands][i]) {
      ^
/project/git/Source/kwsys/ProcessUNIX.c:444:17: note: Assuming 'i' is < 'n'
    for (i = 0; i < n; ++i) {
                ^
/project/git/Source/kwsys/ProcessUNIX.c:444:5: note: Loop condition is true.  Entering loop body
    for (i = 0; i < n; ++i) {
    ^
/project/git/Source/kwsys/ProcessUNIX.c:446:46: note: Null pointer passed as an argument to a 'nonnull' parameter
      newCommands[cp->NumberOfCommands][i] = strdup(command[i]);
                                             ^
/project/git/Source/kwsys/ProcessUNIX.c:756:5: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
    strcpy(cp->ErrorMessage, "No command");
    ^
/project/git/Source/kwsys/ProcessUNIX.c:756:5: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
/project/git/Source/kwsys/ProcessUNIX.c:763:5: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
    strcpy(cp->ErrorMessage, "Out of memory");
    ^
/project/git/Source/kwsys/ProcessUNIX.c:763:5: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
/project/git/Source/kwsys/ProcessUNIX.c:1377:9: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
        strcpy(cp->ProcessResults[prPipe].ExitExceptionString,
        ^
/project/git/Source/kwsys/ProcessUNIX.c:1377:9: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
/project/git/Source/kwsys/ProcessUNIX.c:1544:5: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
    strcpy(cp->ProcessResults[i].ExitExceptionString, "No exception");
    ^
/project/git/Source/kwsys/ProcessUNIX.c:1544:5: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
/project/git/Source/kwsys/ProcessUNIX.c:2097:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
      KWSYSPE_CASE(Fault, "Segmentation fault");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2097:7: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
      KWSYSPE_CASE(Fault, "Segmentation fault");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2103:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
      KWSYSPE_CASE(Fault, "Bus error");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2103:7: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
      KWSYSPE_CASE(Fault, "Bus error");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2109:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
      KWSYSPE_CASE(Numerical, "Floating-point exception");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2109:7: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
      KWSYSPE_CASE(Numerical, "Floating-point exception");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2114:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
      KWSYSPE_CASE(Illegal, "Illegal instruction");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2114:7: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
      KWSYSPE_CASE(Illegal, "Illegal instruction");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2119:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
      KWSYSPE_CASE(Interrupt, "User interrupt");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2119:7: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
      KWSYSPE_CASE(Interrupt, "User interrupt");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2124:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
      KWSYSPE_CASE(Other, "Child aborted");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2124:7: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
      KWSYSPE_CASE(Other, "Child aborted");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2129:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
      KWSYSPE_CASE(Other, "Child killed");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2129:7: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
      KWSYSPE_CASE(Other, "Child killed");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2134:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
      KWSYSPE_CASE(Other, "Child terminated");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2134:7: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
      KWSYSPE_CASE(Other, "Child terminated");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2139:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
      KWSYSPE_CASE(Other, "SIGHUP");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2139:7: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
      KWSYSPE_CASE(Other, "SIGHUP");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2144:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
      KWSYSPE_CASE(Other, "SIGQUIT");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2144:7: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
      KWSYSPE_CASE(Other, "SIGQUIT");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2149:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
      KWSYSPE_CASE(Other, "SIGTRAP");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2149:7: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
      KWSYSPE_CASE(Other, "SIGTRAP");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2161:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
      KWSYSPE_CASE(Other, "SIGUSR1");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2161:7: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
      KWSYSPE_CASE(Other, "SIGUSR1");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2166:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
      KWSYSPE_CASE(Other, "SIGUSR2");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2166:7: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
      KWSYSPE_CASE(Other, "SIGUSR2");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2171:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
      KWSYSPE_CASE(Other, "SIGPIPE");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2171:7: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
      KWSYSPE_CASE(Other, "SIGPIPE");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2176:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
      KWSYSPE_CASE(Other, "SIGALRM");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2176:7: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
      KWSYSPE_CASE(Other, "SIGALRM");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2181:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
      KWSYSPE_CASE(Other, "SIGSTKFLT");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2181:7: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
      KWSYSPE_CASE(Other, "SIGSTKFLT");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2186:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
      KWSYSPE_CASE(Other, "SIGCHLD");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2186:7: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
      KWSYSPE_CASE(Other, "SIGCHLD");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2195:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
      KWSYSPE_CASE(Other, "SIGCONT");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2195:7: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
      KWSYSPE_CASE(Other, "SIGCONT");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2200:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
      KWSYSPE_CASE(Other, "SIGSTOP");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2200:7: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
      KWSYSPE_CASE(Other, "SIGSTOP");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2205:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
      KWSYSPE_CASE(Other, "SIGTSTP");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2205:7: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
      KWSYSPE_CASE(Other, "SIGTSTP");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2210:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
      KWSYSPE_CASE(Other, "SIGTTIN");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2210:7: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
      KWSYSPE_CASE(Other, "SIGTTIN");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2215:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
      KWSYSPE_CASE(Other, "SIGTTOU");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2215:7: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
      KWSYSPE_CASE(Other, "SIGTTOU");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2220:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
      KWSYSPE_CASE(Other, "SIGURG");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2220:7: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
      KWSYSPE_CASE(Other, "SIGURG");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2225:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
      KWSYSPE_CASE(Other, "SIGXCPU");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2225:7: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
      KWSYSPE_CASE(Other, "SIGXCPU");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2230:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
      KWSYSPE_CASE(Other, "SIGXFSZ");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2230:7: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
      KWSYSPE_CASE(Other, "SIGXFSZ");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2235:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
      KWSYSPE_CASE(Other, "SIGVTALRM");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2235:7: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
      KWSYSPE_CASE(Other, "SIGVTALRM");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2240:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
      KWSYSPE_CASE(Other, "SIGPROF");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2240:7: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
      KWSYSPE_CASE(Other, "SIGPROF");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2245:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
      KWSYSPE_CASE(Other, "SIGWINCH");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2245:7: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
      KWSYSPE_CASE(Other, "SIGWINCH");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2250:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
      KWSYSPE_CASE(Other, "SIGPOLL");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2250:7: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
      KWSYSPE_CASE(Other, "SIGPOLL");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2262:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
      KWSYSPE_CASE(Other, "SIGPWR");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2262:7: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
      KWSYSPE_CASE(Other, "SIGPWR");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2267:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
      KWSYSPE_CASE(Other, "SIGSYS");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^
/project/git/Source/kwsys/ProcessUNIX.c:2267:7: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
      KWSYSPE_CASE(Other, "SIGSYS");
      ^
/project/git/Source/kwsys/ProcessUNIX.c:2090:3: note: expanded from macro 'KWSYSPE_CASE'
  strcpy(cp->ProcessResults[idx].ExitExceptionString, str)
  ^

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpBrJ82M.yaml -p=/project/git /project/git/Utilities/cmcurl/lib/hmac.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpedplsd.yaml -p=/project/git /project/git/Utilities/cmcurl/lib/openldap.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpQuIqHV.yaml -p=/project/git /project/git/Utilities/cmcurl/lib/curl_gethostname.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmp6UiKZb.yaml -p=/project/git /project/git/Utilities/cmcurl/lib/gopher.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpFwycq7.yaml -p=/project/git /project/git/Utilities/cmcurl/lib/idn_win32.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmp3md_dt.yaml -p=/project/git /project/git/Utilities/cmcurl/lib/non-ascii.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpMkv6wD.yaml -p=/project/git /project/git/Utilities/cmcurl/lib/asyn-ares.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpDlKT6q.yaml -p=/project/git /project/git/Utilities/cmcurl/lib/asyn-thread.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmp7mhm4r.yaml -p=/project/git /project/git/Utilities/cmcurl/lib/http_ntlm.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpKwoQfU.yaml -p=/project/git /project/git/Utilities/cmcurl/lib/curl_gssapi.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpfjmdLK.yaml -p=/project/git /project/git/Utilities/cmcurl/lib/curl_ntlm_wb.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpITiQM8.yaml -p=/project/git /project/git/Utilities/cmcurl/lib/curl_ntlm_core.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpUyv9wZ.yaml -p=/project/git /project/git/Utilities/cmcurl/lib/curl_multibyte.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpqGAbAy.yaml -p=/project/git /project/git/Utilities/cmcurl/lib/rand.c
/project/git/Utilities/cmcurl/lib/urldata.h:1209:8: warning: Excessive padding in 'struct UrlState' (61 padding bytes, where 5 is optimal). 
Optimal fields order: 
conn_cache, 
lastconnect, 
headerbuff, 
headersize, 
buffer, 
ulbuf, 
current_speed, 
first_host, 
session, 
sessionage, 
scratch, 
prev_signal, 
resolver, 
most_recent_ftp_entrypath, 
crlf_conversions, 
pathbuffer, 
path, 
range, 
resume_from, 
rtsp_next_client_CSeq, 
rtsp_next_server_CSeq, 
rtsp_CSeq_recv, 
infilesize, 
drain, 
fread_func, 
in, 
stream_depends_on, 
keeps_speed, 
expiretime, 
authhost, 
authproxy, 
timeoutlist, 
timenode, 
digest, 
proxydigest, 
tempwrite, 
expires, 
first_remote_port, 
tempcount, 
os_errno, 
httpversion, 
stream_weight, 
multi_owned_by_easy, 
this_is_a_follow, 
refused_stream, 
errorbuf, 
allow_port, 
authproblem, 
ftp_trying_alternative, 
wildcardmatch, 
expect100header, 
prev_block_had_trailing_cr, 
slash_removed, 
use_range, 
rangestringalloc, 
done, 
stream_depends_e, 
consider reordering the fields or adding explicit padding members [clang-analyzer-optin.performance.Padding]
struct UrlState {
       ^
/project/git/Utilities/cmcurl/lib/urldata.h:1209:8: note: Excessive padding in 'struct UrlState' (61 padding bytes, where 5 is optimal). Optimal fields order: conn_cache, lastconnect, headerbuff, headersize, buffer, ulbuf, current_speed, first_host, session, sessionage, scratch, prev_signal, resolver, most_recent_ftp_entrypath, crlf_conversions, pathbuffer, path, range, resume_from, rtsp_next_client_CSeq, rtsp_next_server_CSeq, rtsp_CSeq_recv, infilesize, drain, fread_func, in, stream_depends_on, keeps_speed, expiretime, authhost, authproxy, timeoutlist, timenode, digest, proxydigest, tempwrite, expires, first_remote_port, tempcount, os_errno, httpversion, stream_weight, multi_owned_by_easy, this_is_a_follow, refused_stream, errorbuf, allow_port, authproblem, ftp_trying_alternative, wildcardmatch, expect100header, prev_block_had_trailing_cr, slash_removed, use_range, rangestringalloc, done, stream_depends_e, consider reordering the fields or adding explicit padding members
/project/git/Utilities/cmcurl/lib/urldata.h:1457:8: warning: Excessive padding in 'struct UserDefined' (120 padding bytes, where 0 is optimal). 
Optimal fields order: 
err, 
debugdata, 
errorbuffer, 
proxyport, 
out, 
in_set, 
writeheader, 
rtp_out, 
use_port, 
httpauth, 
proxyauth, 
socks5auth, 
followlocation, 
maxredirs, 
postfields, 
seek_func, 
postfieldsize, 
fwrite_func, 
fwrite_header, 
fwrite_rtp, 
fread_func_set, 
fprogress, 
fxferinfo, 
fdebug, 
ioctl_func, 
fsockopt, 
sockopt_client, 
fopensocket, 
opensocket_client, 
fclosesocket, 
closesocket_client, 
seek_client, 
convfromnetwork, 
convtonetwork, 
convfromutf8, 
progress_client, 
ioctl_client, 
timeout, 
connecttimeout, 
accepttimeout, 
happy_eyeballs_timeout, 
server_response_timeout, 
tftp_blksize, 
filesize, 
low_speed_limit, 
low_speed_time, 
max_send_speed, 
max_recv_speed, 
set_resume_from, 
headers, 
proxyheaders, 
httppost, 
quote, 
postquote, 
prequote, 
source_quote, 
source_prequote, 
source_postquote, 
telnet_options, 
resolve, 
connect_to, 
timevalue, 
httpversion, 
general_ssl, 
dns_cache_timeout, 
buffer_size, 
upload_buffer_size, 
private_data, 
http200aliases, 
ipver, 
max_filesize, 
ssh_keyfunc, 
ssh_keyfunc_userp, 
ssh_auth_types, 
new_file_perms, 
new_directory_perms, 
allowed_protocols, 
redir_protocols, 
mail_rcpt, 
rtspversion, 
chunk_bgn, 
chunk_end, 
fnmatch, 
fnmatch_data, 
gssapi_delegation, 
tcp_keepidle, 
tcp_keepintvl, 
maxconnects, 
expect_100_timeout, 
stream_depends_on, 
stream_dependents, 
resolver_start, 
resolver_start_client, 
ssl, 
proxy_ssl, 
mimepost, 
str, 
keep_post, 
localportrange, 
is_fread_set, 
is_fwrite_set, 
timecondition, 
httpreq, 
proxytype, 
ftp_filemethod, 
ftp_create_missing_dirs, 
use_netrc, 
use_ssl, 
ftpsslauth, 
ftp_ccc, 
scope_id, 
rtspreq, 
stream_weight, 
localport, 
free_referer, 
tftp_no_options, 
sep_headers, 
cookiesession, 
crlf, 
strip_path_slash, 
ssh_compression, 
get_filetime, 
tunnel_thru_httpproxy, 
prefer_ascii, 
ftp_append, 
ftp_list_only, 
ftp_use_port, 
hide_progress, 
http_fail_on_error, 
http_keep_sending_on_error, 
http_follow_location, 
http_transfer_encoding, 
allow_auth_to_other_hosts, 
include_header, 
http_set_referer, 
http_auto_referer, 
opt_no_body, 
upload, 
verbose, 
krb, 
reuse_forbid, 
reuse_fresh, 
ftp_use_epsv, 
ftp_use_eprt, 
ftp_use_pret, 
no_signal, 
global_dns_cache, 
tcp_nodelay, 
ignorecl, 
ftp_skip_ip, 
connect_only, 
http_te_skip, 
http_ce_skip, 
proxy_transfer_mode, 
sasl_ir, 
wildcard_enabled, 
tcp_keepalive, 
tcp_fastopen, 
ssl_enable_npn, 
ssl_enable_alpn, 
path_as_is, 
pipewait, 
suppress_connect_headers, 
dns_shuffle_addresses, 
stream_depends_e, 
haproxyprotocol, 
abstract_unix_socket, 
disallow_username_in_url, 
consider reordering the fields or adding explicit padding members [clang-analyzer-optin.performance.Padding]
struct UserDefined {
       ^
2 warnings generated.

4 warnings generated.

/project/git/Utilities/cmcurl/lib/urldata.h:1457:8: note: Excessive padding in 'struct UserDefined' (120 padding bytes, where 0 is optimal). Optimal fields order: err, debugdata, errorbuffer, proxyport, out, in_set, writeheader, rtp_out, use_port, httpauth, proxyauth, socks5auth, followlocation, maxredirs, postfields, seek_func, postfieldsize, fwrite_func, fwrite_header, fwrite_rtp, fread_func_set, fprogress, fxferinfo, fdebug, ioctl_func, fsockopt, sockopt_client, fopensocket, opensocket_client, fclosesocket, closesocket_client, seek_client, convfromnetwork, convtonetwork, convfromutf8, progress_client, ioctl_client, timeout, connecttimeout, accepttimeout, happy_eyeballs_timeout, server_response_timeout, tftp_blksize, filesize, low_speed_limit, low_speed_time, max_send_speed, max_recv_speed, set_resume_from, headers, proxyheaders, httppost, quote, postquote, prequote, source_quote, source_prequote, source_postquote, telnet_options, resolve, connect_to, timevalue, httpversion, general_ssl, dns_cache_timeout, buffer_size, upload_buffer_size, private_data, http200aliases, ipver, max_filesize, ssh_keyfunc, ssh_keyfunc_userp, ssh_auth_types, new_file_perms, new_directory_perms, allowed_protocols, redir_protocols, mail_rcpt, rtspversion, chunk_bgn, chunk_end, fnmatch, fnmatch_data, gssapi_delegation, tcp_keepidle, tcp_keepintvl, maxconnects, expect_100_timeout, stream_depends_on, stream_dependents, resolver_start, resolver_start_client, ssl, proxy_ssl, mimepost, str, keep_post, localportrange, is_fread_set, is_fwrite_set, timecondition, httpreq, proxytype, ftp_filemethod, ftp_create_missing_dirs, use_netrc, use_ssl, ftpsslauth, ftp_ccc, scope_id, rtspreq, stream_weight, localport, free_referer, tftp_no_options, sep_headers, cookiesession, crlf, strip_path_slash, ssh_compression, get_filetime, tunnel_thru_httpproxy, prefer_ascii, ftp_append, ftp_list_only, ftp_use_port, hide_progress, http_fail_on_error, http_keep_sending_on_error, http_follow_location, http_transfer_encoding, allow_auth_to_other_hosts, include_header, http_set_referer, http_auto_referer, opt_no_body, upload, verbose, krb, reuse_forbid, reuse_fresh, ftp_use_epsv, ftp_use_eprt, ftp_use_pret, no_signal, global_dns_cache, tcp_nodelay, ignorecl, ftp_skip_ip, connect_only, http_te_skip, http_ce_skip, proxy_transfer_mode, sasl_ir, wildcard_enabled, tcp_keepalive, tcp_fastopen, ssl_enable_npn, ssl_enable_alpn, path_as_is, pipewait, suppress_connect_headers, dns_shuffle_addresses, stream_depends_e, haproxyprotocol, abstract_unix_socket, disallow_username_in_url, consider reordering the fields or adding explicit padding members

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpCKKect.yaml -p=/project/git /project/git/Utilities/cmcurl/lib/hostcheck.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmp5nDgyW.yaml -p=/project/git /project/git/Utilities/cmcurl/lib/pipeline.c
/project/git/Utilities/cmcurl/lib/pipeline.c:213:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
      strcpy(entry->hostname, *sites);
      ^
/project/git/Utilities/cmcurl/lib/pipeline.c:213:7: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
/project/git/Utilities/cmcurl/lib/pipeline.c:282:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
      strcpy(n->server_name, *servers);
      ^
/project/git/Utilities/cmcurl/lib/pipeline.c:282:7: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
/project/git/Utilities/cmcurl/lib/urldata.h:1209:8: warning: Excessive padding in 'struct UrlState' (61 padding bytes, where 5 is optimal). 
Optimal fields order: 
conn_cache, 
lastconnect, 
headerbuff, 
headersize, 
buffer, 
ulbuf, 
current_speed, 
first_host, 
session, 
sessionage, 
scratch, 
prev_signal, 
resolver, 
most_recent_ftp_entrypath, 
crlf_conversions, 
pathbuffer, 
path, 
range, 
resume_from, 
rtsp_next_client_CSeq, 
rtsp_next_server_CSeq, 
rtsp_CSeq_recv, 
infilesize, 
drain, 
fread_func, 
in, 
stream_depends_on, 
keeps_speed, 
expiretime, 
authhost, 
authproxy, 
timeoutlist, 
timenode, 
digest, 
proxydigest, 
tempwrite, 
expires, 
first_remote_port, 
tempcount, 
os_errno, 
httpversion, 
stream_weight, 
multi_owned_by_easy, 
this_is_a_follow, 
refused_stream, 
errorbuf, 
allow_port, 
authproblem, 
ftp_trying_alternative, 
wildcardmatch, 
expect100header, 
prev_block_had_trailing_cr, 
slash_removed, 
use_range, 
rangestringalloc, 
done, 
stream_depends_e, 
consider reordering the fields or adding explicit padding members [clang-analyzer-optin.performance.Padding]
struct UrlState {
       ^
/project/git/Utilities/cmcurl/lib/urldata.h:1209:8: note: Excessive padding in 'struct UrlState' (61 padding bytes, where 5 is optimal). Optimal fields order: conn_cache, lastconnect, headerbuff, headersize, buffer, ulbuf, current_speed, first_host, session, sessionage, scratch, prev_signal, resolver, most_recent_ftp_entrypath, crlf_conversions, pathbuffer, path, range, resume_from, rtsp_next_client_CSeq, rtsp_next_server_CSeq, rtsp_CSeq_recv, infilesize, drain, fread_func, in, stream_depends_on, keeps_speed, expiretime, authhost, authproxy, timeoutlist, timenode, digest, proxydigest, tempwrite, expires, first_remote_port, tempcount, os_errno, httpversion, stream_weight, multi_owned_by_easy, this_is_a_follow, refused_stream, errorbuf, allow_port, authproblem, ftp_trying_alternative, wildcardmatch, expect100header, prev_block_had_trailing_cr, slash_removed, use_range, rangestringalloc, done, stream_depends_e, consider reordering the fields or adding explicit padding members
/project/git/Utilities/cmcurl/lib/urldata.h:1457:8: warning: Excessive padding in 'struct UserDefined' (120 padding bytes, where 0 is optimal). 
Optimal fields order: 
err, 
debugdata, 
errorbuffer, 
proxyport, 
out, 
in_set, 
writeheader, 
rtp_out, 
use_port, 
httpauth, 
proxyauth, 
socks5auth, 
followlocation, 
maxredirs, 
postfields, 
seek_func, 
postfieldsize, 
fwrite_func, 
fwrite_header, 
fwrite_rtp, 
fread_func_set, 
fprogress, 
fxferinfo, 
fdebug, 
ioctl_func, 
fsockopt, 
sockopt_client, 
fopensocket, 
opensocket_client, 
fclosesocket, 
closesocket_client, 
seek_client, 
convfromnetwork, 
convtonetwork, 
convfromutf8, 
progress_client, 
ioctl_client, 
timeout, 
connecttimeout, 
accepttimeout, 
happy_eyeballs_timeout, 
server_response_timeout, 
tftp_blksize, 
filesize, 
low_speed_limit, 
low_speed_time, 
max_send_speed, 
max_recv_speed, 
set_resume_from, 
headers, 
proxyheaders, 
httppost, 
quote, 
postquote, 
prequote, 
source_quote, 
source_prequote, 
source_postquote, 
telnet_options, 
resolve, 
connect_to, 
timevalue, 
httpversion, 
general_ssl, 
dns_cache_timeout, 
buffer_size, 
upload_buffer_size, 
private_data, 
http200aliases, 
ipver, 
max_filesize, 
ssh_keyfunc, 
ssh_keyfunc_userp, 
ssh_auth_types, 
new_file_perms, 
new_directory_perms, 
allowed_protocols, 
redir_protocols, 
mail_rcpt, 
rtspversion, 
chunk_bgn, 
chunk_end, 
fnmatch, 
fnmatch_data, 
gssapi_delegation, 
tcp_keepidle, 
tcp_keepintvl, 
maxconnects, 
expect_100_timeout, 
stream_depends_on, 
stream_dependents, 
resolver_start, 
resolver_start_client, 
ssl, 
proxy_ssl, 
mimepost, 
str, 
keep_post, 
localportrange, 
is_fread_set, 
is_fwrite_set, 
timecondition, 
httpreq, 
proxytype, 
ftp_filemethod, 
ftp_create_missing_dirs, 
use_netrc, 
use_ssl, 
ftpsslauth, 
ftp_ccc, 
scope_id, 
rtspreq, 
stream_weight, 
localport, 
free_referer, 
tftp_no_options, 
sep_headers, 
cookiesession, 
crlf, 
strip_path_slash, 
ssh_compression, 
get_filetime, 
tunnel_thru_httpproxy, 
prefer_ascii, 
ftp_append, 
ftp_list_only, 
ftp_use_port, 
hide_progress, 
http_fail_on_error, 
http_keep_sending_on_error, 
http_follow_location, 
http_transfer_encoding, 
allow_auth_to_other_hosts, 
include_header, 
http_set_referer, 
http_auto_referer, 
opt_no_body, 
upload, 
verbose, 
krb, 
reuse_forbid, 
reuse_fresh, 
ftp_use_epsv, 
ftp_use_eprt, 
ftp_use_pret, 
no_signal, 
global_dns_cache, 
tcp_nodelay, 
ignorecl, 
ftp_skip_ip, 
connect_only, 
http_te_skip, 
http_ce_skip, 
proxy_transfer_mode, 
sasl_ir, 
wildcard_enabled, 
tcp_keepalive, 
tcp_fastopen, 
ssl_enable_npn, 
ssl_enable_alpn, 
path_as_is, 
pipewait, 
suppress_connect_headers, 
dns_shuffle_addresses, 
stream_depends_e, 
haproxyprotocol, 
abstract_unix_socket, 
disallow_username_in_url, 
consider reordering the fields or adding explicit padding members [clang-analyzer-optin.performance.Padding]
struct UserDefined {
       ^
3 warnings generated.

/project/git/Utilities/cmcurl/lib/urldata.h:1457:8: note: Excessive padding in 'struct UserDefined' (120 padding bytes, where 0 is optimal). Optimal fields order: err, debugdata, errorbuffer, proxyport, out, in_set, writeheader, rtp_out, use_port, httpauth, proxyauth, socks5auth, followlocation, maxredirs, postfields, seek_func, postfieldsize, fwrite_func, fwrite_header, fwrite_rtp, fread_func_set, fprogress, fxferinfo, fdebug, ioctl_func, fsockopt, sockopt_client, fopensocket, opensocket_client, fclosesocket, closesocket_client, seek_client, convfromnetwork, convtonetwork, convfromutf8, progress_client, ioctl_client, timeout, connecttimeout, accepttimeout, happy_eyeballs_timeout, server_response_timeout, tftp_blksize, filesize, low_speed_limit, low_speed_time, max_send_speed, max_recv_speed, set_resume_from, headers, proxyheaders, httppost, quote, postquote, prequote, source_quote, source_prequote, source_postquote, telnet_options, resolve, connect_to, timevalue, httpversion, general_ssl, dns_cache_timeout, buffer_size, upload_buffer_size, private_data, http200aliases, ipver, max_filesize, ssh_keyfunc, ssh_keyfunc_userp, ssh_auth_types, new_file_perms, new_directory_perms, allowed_protocols, redir_protocols, mail_rcpt, rtspversion, chunk_bgn, chunk_end, fnmatch, fnmatch_data, gssapi_delegation, tcp_keepidle, tcp_keepintvl, maxconnects, expect_100_timeout, stream_depends_on, stream_dependents, resolver_start, resolver_start_client, ssl, proxy_ssl, mimepost, str, keep_post, localportrange, is_fread_set, is_fwrite_set, timecondition, httpreq, proxytype, ftp_filemethod, ftp_create_missing_dirs, use_netrc, use_ssl, ftpsslauth, ftp_ccc, scope_id, rtspreq, stream_weight, localport, free_referer, tftp_no_options, sep_headers, cookiesession, crlf, strip_path_slash, ssh_compression, get_filetime, tunnel_thru_httpproxy, prefer_ascii, ftp_append, ftp_list_only, ftp_use_port, hide_progress, http_fail_on_error, http_keep_sending_on_error, http_follow_location, http_transfer_encoding, allow_auth_to_other_hosts, include_header, http_set_referer, http_auto_referer, opt_no_body, upload, verbose, krb, reuse_forbid, reuse_fresh, ftp_use_epsv, ftp_use_eprt, ftp_use_pret, no_signal, global_dns_cache, tcp_nodelay, ignorecl, ftp_skip_ip, connect_only, http_te_skip, http_ce_skip, proxy_transfer_mode, sasl_ir, wildcard_enabled, tcp_keepalive, tcp_fastopen, ssl_enable_npn, ssl_enable_alpn, path_as_is, pipewait, suppress_connect_headers, dns_shuffle_addresses, stream_depends_e, haproxyprotocol, abstract_unix_socket, disallow_username_in_url, consider reordering the fields or adding explicit padding members

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpZao0GM.yaml -p=/project/git /project/git/Utilities/cmcurl/lib/content_encoding.c
/project/git/Utilities/cmcurl/lib/content_encoding.c:784:9: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
        strcpy(p, ce->name);
        ^
/project/git/Utilities/cmcurl/lib/content_encoding.c:784:9: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
/project/git/Utilities/cmcurl/lib/urldata.h:1209:8: warning: Excessive padding in 'struct UrlState' (61 padding bytes, where 5 is optimal). 
Optimal fields order: 
conn_cache, 
lastconnect, 
headerbuff, 
headersize, 
buffer, 
ulbuf, 
current_speed, 
first_host, 
session, 
sessionage, 
scratch, 
prev_signal, 
resolver, 
most_recent_ftp_entrypath, 
crlf_conversions, 
pathbuffer, 
path, 
range, 
resume_from, 
rtsp_next_client_CSeq, 
rtsp_next_server_CSeq, 
rtsp_CSeq_recv, 
infilesize, 
drain, 
fread_func, 
in, 
stream_depends_on, 
keeps_speed, 
expiretime, 
authhost, 
authproxy, 
timeoutlist, 
timenode, 
digest, 
proxydigest, 
tempwrite, 
expires, 
first_remote_port, 
tempcount, 
os_errno, 
httpversion, 
stream_weight, 
multi_owned_by_easy, 
this_is_a_follow, 
refused_stream, 
errorbuf, 
allow_port, 
authproblem, 
ftp_trying_alternative, 
wildcardmatch, 
expect100header, 
prev_block_had_trailing_cr, 
slash_removed, 
use_range, 
rangestringalloc, 
done, 
stream_depends_e, 
consider reordering the fields or adding explicit padding members [clang-analyzer-optin.performance.Padding]
struct UrlState {
       ^
/project/git/Utilities/cmcurl/lib/urldata.h:1209:8: note: Excessive padding in 'struct UrlState' (61 padding bytes, where 5 is optimal). Optimal fields order: conn_cache, lastconnect, headerbuff, headersize, buffer, ulbuf, current_speed, first_host, session, sessionage, scratch, prev_signal, resolver, most_recent_ftp_entrypath, crlf_conversions, pathbuffer, path, range, resume_from, rtsp_next_client_CSeq, rtsp_next_server_CSeq, rtsp_CSeq_recv, infilesize, drain, fread_func, in, stream_depends_on, keeps_speed, expiretime, authhost, authproxy, timeoutlist, timenode, digest, proxydigest, tempwrite, expires, first_remote_port, tempcount, os_errno, httpversion, stream_weight, multi_owned_by_easy, this_is_a_follow, refused_stream, errorbuf, allow_port, authproblem, ftp_trying_alternative, wildcardmatch, expect100header, prev_block_had_trailing_cr, slash_removed, use_range, rangestringalloc, done, stream_depends_e, consider reordering the fields or adding explicit padding members
/project/git/Utilities/cmcurl/lib/urldata.h:1457:8: warning: Excessive padding in 'struct UserDefined' (120 padding bytes, where 0 is optimal). 
Optimal fields order: 
err, 
debugdata, 
errorbuffer, 
proxyport, 
out, 
in_set, 
writeheader, 
rtp_out, 
use_port, 
httpauth, 
proxyauth, 
socks5auth, 
followlocation, 
maxredirs, 
postfields, 
seek_func, 
postfieldsize, 
fwrite_func, 
fwrite_header, 
fwrite_rtp, 
fread_func_set, 
fprogress, 
fxferinfo, 
fdebug, 
ioctl_func, 
fsockopt, 
sockopt_client, 
fopensocket, 
opensocket_client, 
fclosesocket, 
closesocket_client, 
seek_client, 
convfromnetwork, 
convtonetwork, 
convfromutf8, 
progress_client, 
ioctl_client, 
timeout, 
connecttimeout, 
accepttimeout, 
happy_eyeballs_timeout, 
server_response_timeout, 
tftp_blksize, 
filesize, 
low_speed_limit, 
low_speed_time, 
max_send_speed, 
max_recv_speed, 
set_resume_from, 
headers, 
proxyheaders, 
httppost, 
quote, 
postquote, 
prequote, 
source_quote, 
source_prequote, 
source_postquote, 
telnet_options, 
resolve, 
connect_to, 
timevalue, 
httpversion, 
general_ssl, 
dns_cache_timeout, 
buffer_size, 
upload_buffer_size, 
private_data, 
http200aliases, 
ipver, 
max_filesize, 
ssh_keyfunc, 
ssh_keyfunc_userp, 
ssh_auth_types, 
new_file_perms, 
new_directory_perms, 
allowed_protocols, 
redir_protocols, 
mail_rcpt, 
rtspversion, 
chunk_bgn, 
chunk_end, 
fnmatch, 
fnmatch_data, 
gssapi_delegation, 
tcp_keepidle, 
tcp_keepintvl, 
maxconnects, 
expect_100_timeout, 
stream_depends_on, 
stream_dependents, 
resolver_start, 
resolver_start_client, 
ssl, 
proxy_ssl, 
mimepost, 
str, 
keep_post, 
localportrange, 
is_fread_set, 
is_fwrite_set, 
timecondition, 
httpreq, 
proxytype, 
ftp_filemethod, 
ftp_create_missing_dirs, 
use_netrc, 
use_ssl, 
ftpsslauth, 
ftp_ccc, 
scope_id, 
rtspreq, 
stream_weight, 
localport, 
free_referer, 
tftp_no_options, 
sep_headers, 
cookiesession, 
crlf, 
strip_path_slash, 
ssh_compression, 
get_filetime, 
tunnel_thru_httpproxy, 
prefer_ascii, 
ftp_append, 
ftp_list_only, 
ftp_use_port, 
hide_progress, 
http_fail_on_error, 
http_keep_sending_on_error, 
http_follow_location, 
http_transfer_encoding, 
allow_auth_to_other_hosts, 
include_header, 
http_set_referer, 
http_auto_referer, 
opt_no_body, 
upload, 
verbose, 
krb, 
reuse_forbid, 
reuse_fresh, 
ftp_use_epsv, 
ftp_use_eprt, 
ftp_use_pret, 
no_signal, 
global_dns_cache, 
tcp_nodelay, 
ignorecl, 
ftp_skip_ip, 
connect_only, 
http_te_skip, 
http_ce_skip, 
proxy_transfer_mode, 
sasl_ir, 
wildcard_enabled, 
tcp_keepalive, 
tcp_fastopen, 
ssl_enable_npn, 
ssl_enable_alpn, 
path_as_is, 
pipewait, 
suppress_connect_headers, 
dns_shuffle_addresses, 
2 warnings generated.

stream_depends_e, 
haproxyprotocol, 
abstract_unix_socket, 
disallow_username_in_url, 
consider reordering the fields or adding explicit padding members [clang-analyzer-optin.performance.Padding]
struct UserDefined {
       ^
/project/git/Utilities/cmcurl/lib/urldata.h:1457:8: note: Excessive padding in 'struct UserDefined' (120 padding bytes, where 0 is optimal). Optimal fields order: err, debugdata, errorbuffer, proxyport, out, in_set, writeheader, rtp_out, use_port, httpauth, proxyauth, socks5auth, followlocation, maxredirs, postfields, seek_func, postfieldsize, fwrite_func, fwrite_header, fwrite_rtp, fread_func_set, fprogress, fxferinfo, fdebug, ioctl_func, fsockopt, sockopt_client, fopensocket, opensocket_client, fclosesocket, closesocket_client, seek_client, convfromnetwork, convtonetwork, convfromutf8, progress_client, ioctl_client, timeout, connecttimeout, accepttimeout, happy_eyeballs_timeout, server_response_timeout, tftp_blksize, filesize, low_speed_limit, low_speed_time, max_send_speed, max_recv_speed, set_resume_from, headers, proxyheaders, httppost, quote, postquote, prequote, source_quote, source_prequote, source_postquote, telnet_options, resolve, connect_to, timevalue, httpversion, general_ssl, dns_cache_timeout, buffer_size, upload_buffer_size, private_data, http200aliases, ipver, max_filesize, ssh_keyfunc, ssh_keyfunc_userp, ssh_auth_types, new_file_perms, new_directory_perms, allowed_protocols, redir_protocols, mail_rcpt, rtspversion, chunk_bgn, chunk_end, fnmatch, fnmatch_data, gssapi_delegation, tcp_keepidle, tcp_keepintvl, maxconnects, expect_100_timeout, stream_depends_on, stream_dependents, resolver_start, resolver_start_client, ssl, proxy_ssl, mimepost, str, keep_post, localportrange, is_fread_set, is_fwrite_set, timecondition, httpreq, proxytype, ftp_filemethod, ftp_create_missing_dirs, use_netrc, use_ssl, ftpsslauth, ftp_ccc, scope_id, rtspreq, stream_weight, localport, free_referer, tftp_no_options, sep_headers, cookiesession, crlf, strip_path_slash, ssh_compression, get_filetime, tunnel_thru_httpproxy, prefer_ascii, ftp_append, ftp_list_only, ftp_use_port, hide_progress, http_fail_on_error, http_keep_sending_on_error, http_follow_location, http_transfer_encoding, allow_auth_to_other_hosts, include_header, http_set_referer, http_auto_referer, opt_no_body, upload, verbose, krb, reuse_forbid, reuse_fresh, ftp_use_epsv, ftp_use_eprt, ftp_use_pret, no_signal, global_dns_cache, tcp_nodelay, ignorecl, ftp_skip_ip, connect_only, http_te_skip, http_ce_skip, proxy_transfer_mode, sasl_ir, wildcard_enabled, tcp_keepalive, tcp_fastopen, ssl_enable_npn, ssl_enable_alpn, path_as_is, pipewait, suppress_connect_headers, dns_shuffle_addresses, stream_depends_e, haproxyprotocol, abstract_unix_socket, disallow_username_in_url, consider reordering the fields or adding explicit padding members

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmp59Phjl.yaml -p=/project/git /project/git/Utilities/cmcurl/lib/transfer.c
/project/git/Utilities/cmcurl/lib/urldata.h:1209:8: warning: Excessive padding in 'struct UrlState' (61 padding bytes, where 5 is optimal). 
Optimal fields order: 
conn_cache, 
lastconnect, 
headerbuff, 
headersize, 
buffer, 
ulbuf, 
current_speed, 
first_host, 
session, 
sessionage, 
scratch, 
prev_signal, 
resolver, 
most_recent_ftp_entrypath, 
crlf_conversions, 
pathbuffer, 
path, 
range, 
resume_from, 
rtsp_next_client_CSeq, 
rtsp_next_server_CSeq, 
rtsp_CSeq_recv, 
infilesize, 
drain, 
fread_func, 
in, 
stream_depends_on, 
keeps_speed, 
expiretime, 
authhost, 
authproxy, 
timeoutlist, 
timenode, 
digest, 
proxydigest, 
tempwrite, 
expires, 
first_remote_port, 
tempcount, 
os_errno, 
httpversion, 
stream_weight, 
multi_owned_by_easy, 
this_is_a_follow, 
refused_stream, 
errorbuf, 
allow_port, 
authproblem, 
ftp_trying_alternative, 
wildcardmatch, 
expect100header, 
prev_block_had_trailing_cr, 
slash_removed, 
use_range, 
rangestringalloc, 
done, 
stream_depends_e, 
consider reordering the fields or adding explicit padding members [clang-analyzer-optin.performance.Padding]
struct UrlState {
       ^
/project/git/Utilities/cmcurl/lib/urldata.h:1209:8: note: Excessive padding in 'struct UrlState' (61 padding bytes, where 5 is optimal). Optimal fields order: conn_cache, lastconnect, headerbuff, headersize, buffer, ulbuf, current_speed, first_host, session, sessionage, scratch, prev_signal, resolver, most_recent_ftp_entrypath, crlf_conversions, pathbuffer, path, range, resume_from, rtsp_next_client_CSeq, rtsp_next_server_CSeq, rtsp_CSeq_recv, infilesize, drain, fread_func, in, stream_depends_on, keeps_speed, expiretime, authhost, authproxy, timeoutlist, timenode, digest, proxydigest, tempwrite, expires, first_remote_port, tempcount, os_errno, httpversion, stream_weight, multi_owned_by_easy, this_is_a_follow, refused_stream, errorbuf, allow_port, authproblem, ftp_trying_alternative, wildcardmatch, expect100header, prev_block_had_trailing_cr, slash_removed, use_range, rangestringalloc, done, stream_depends_e, consider reordering the fields or adding explicit padding members
/project/git/Utilities/cmcurl/lib/urldata.h:1457:8: warning: Excessive padding in 'struct UserDefined' (120 padding bytes, where 0 is optimal). 
Optimal fields order: 
err, 
debugdata, 
errorbuffer, 
proxyport, 
out, 
in_set, 
writeheader, 
rtp_out, 
use_port, 
httpauth, 
proxyauth, 
socks5auth, 
followlocation, 
maxredirs, 
postfields, 
seek_func, 
postfieldsize, 
fwrite_func, 
fwrite_header, 
fwrite_rtp, 
fread_func_set, 
fprogress, 
fxferinfo, 
fdebug, 
ioctl_func, 
fsockopt, 
sockopt_client, 
fopensocket, 
opensocket_client, 
fclosesocket, 
closesocket_client, 
seek_client, 
convfromnetwork, 
convtonetwork, 
convfromutf8, 
progress_client, 
ioctl_client, 
timeout, 
connecttimeout, 
accepttimeout, 
happy_eyeballs_timeout, 
server_response_timeout, 
tftp_blksize, 
filesize, 
low_speed_limit, 
low_speed_time, 
max_send_speed, 
max_recv_speed, 
set_resume_from, 
headers, 
proxyheaders, 
httppost, 
quote, 
postquote, 
prequote, 
source_quote, 
source_prequote, 
source_postquote, 
telnet_options, 
resolve, 
connect_to, 
timevalue, 
httpversion, 
general_ssl, 
dns_cache_timeout, 
buffer_size, 
upload_buffer_size, 
private_data, 
http200aliases, 
ipver, 
max_filesize, 
ssh_keyfunc, 
ssh_keyfunc_userp, 
ssh_auth_types, 
new_file_perms, 
new_directory_perms, 
allowed_protocols, 
redir_protocols, 
mail_rcpt, 
rtspversion, 
chunk_bgn, 
chunk_end, 
fnmatch, 
fnmatch_data, 
gssapi_delegation, 
tcp_keepidle, 
tcp_keepintvl, 
maxconnects, 
expect_100_timeout, 
stream_depends_on, 
stream_dependents, 
resolver_start, 
resolver_start_client, 
ssl, 
proxy_ssl, 
mimepost, 
str, 
keep_post, 
localportrange, 
is_fread_set, 
is_fwrite_set, 
timecondition, 
httpreq, 
proxytype, 
ftp_filemethod, 
ftp_create_missing_dirs, 
use_netrc, 
use_ssl, 
ftpsslauth, 
ftp_ccc, 
scope_id, 
rtspreq, 
stream_weight, 
localport, 
free_referer, 
tftp_no_options, 
sep_headers, 
cookiesession, 
crlf, 
strip_path_slash, 
ssh_compression, 
get_filetime, 
tunnel_thru_httpproxy, 
prefer_ascii, 
ftp_append, 
ftp_list_only, 
ftp_use_port, 
hide_progress, 
http_fail_on_error, 
http_keep_sending_on_error, 
http_follow_location, 
http_transfer_encoding, 
allow_auth_to_other_hosts, 
include_header, 
http_set_referer, 
http_auto_referer, 
opt_no_body, 
upload, 
verbose, 
krb, 
reuse_forbid, 
reuse_fresh, 
ftp_use_epsv, 
ftp_use_eprt, 
ftp_use_pret, 
no_signal, 
global_dns_cache, 
tcp_nodelay, 
ignorecl, 
ftp_skip_ip, 
connect_only, 
http_te_skip, 
http_ce_skip, 
proxy_transfer_mode, 
sasl_ir, 
wildcard_enabled, 
tcp_keepalive, 
tcp_fastopen, 
ssl_enable_npn, 
ssl_enable_alpn, 
path_as_is, 
pipewait, 
suppress_connect_headers, 
dns_shuffle_addresses, 
stream_depends_e, 
haproxyprotocol, 
abstract_unix_socket, 
disallow_username_in_url, 
consider reordering the fields or adding explicit padding members [clang-analyzer-optin.performance.Padding]
struct UserDefined {
       ^
/project/git/Utilities/cmcurl/lib/urldata.h:1457:8: note: Excessive padding in 'struct UserDefined' (120 padding bytes, where 0 is optimal). Optimal fields order: err, debugdata, errorbuffer, proxyport, out, in_set, writeheader, rtp_out, use_port, httpauth, proxyauth, socks5auth, followlocation, maxredirs, postfields, seek_func, postfieldsize, fwrite_func, fwrite_header, fwrite_rtp, fread_func_set, fprogress, fxferinfo, fdebug, ioctl_func, fsockopt, sockopt_client, fopensocket, opensocket_client, fclosesocket, closesocket_client, seek_client, convfromnetwork, convtonetwork, convfromutf8, progress_client, ioctl_client, timeout, connecttimeout, accepttimeout, happy_eyeballs_timeout, server_response_timeout, tftp_blksize, filesize, low_speed_limit, low_speed_time, max_send_speed, max_recv_speed, set_resume_from, headers, proxyheaders, httppost, quote, postquote, prequote, source_quote, source_prequote, source_postquote, telnet_options, resolve, connect_to, timevalue, httpversion, general_ssl, dns_cache_timeout, buffer_size, upload_buffer_size, private_data, http200aliases, ipver, max_filesize, ssh_keyfunc, ssh_keyfunc_userp, ssh_auth_types, new_file_perms, new_directory_perms, allowed_protocols, redir_protocols, mail_rcpt, rtspversion, chunk_bgn, chunk_end, fnmatch, fnmatch_data, gssapi_delegation, tcp_keepidle, tcp_keepintvl, maxconnects, expect_100_timeout, stream_depends_on, stream_dependents, resolver_start, resolver_start_client, ssl, proxy_ssl, mimepost, str, keep_post, localportrange, is_fread_set, is_fwrite_set, timecondition, httpreq, proxytype, ftp_filemethod, ftp_create_missing_dirs, use_netrc, use_ssl, ftpsslauth, ftp_ccc, scope_id, rtspreq, stream_weight, localport, free_referer, tftp_no_options, sep_headers, cookiesession, crlf, strip_path_slash, ssh_compression, get_filetime, tunnel_thru_httpproxy, prefer_ascii, ftp_append, ftp_list_only, ftp_use_port, hide_progress, http_fail_on_error, http_keep_sending_on_error, http_follow_location, http_transfer_encoding, allow_auth_to_other_hosts, include_header, http_set_referer, http_auto_referer, opt_no_body, upload, verbose, krb, reuse_forbid, reuse_fresh, ftp_use_epsv, ftp_use_eprt, ftp_use_pret, no_signal, global_dns_cache, tcp_nodelay, ignorecl, ftp_skip_ip, connect_only, http_te_skip, http_ce_skip, proxy_transfer_mode, sasl_ir, wildcard_enabled, tcp_keepalive, tcp_fastopen, ssl_enable_npn, ssl_enable_alpn, path_as_is, pipewait, suppress_connect_headers, dns_shuffle_addresses, stream_depends_e, haproxyprotocol, abstract_unix_socket, disallow_username_in_url, consider reordering the fields or adding explicit padding members

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpktMNlW.yaml -p=/project/git /project/git/Utilities/cmcurl/lib/select.c
/project/git/Utilities/cmcurl/lib/urldata.h:1209:8: warning: Excessive padding in 'struct UrlState' (61 padding bytes, where 5 is optimal). 
Optimal fields order: 
conn_cache, 
lastconnect, 
headerbuff, 
headersize, 
buffer, 
ulbuf, 
current_speed, 
first_host, 
session, 
sessionage, 
scratch, 
prev_signal, 
resolver, 
most_recent_ftp_entrypath, 
crlf_conversions, 
pathbuffer, 
path, 
range, 
resume_from, 
rtsp_next_client_CSeq, 
rtsp_next_server_CSeq, 
rtsp_CSeq_recv, 
infilesize, 
drain, 
fread_func, 
in, 
stream_depends_on, 
keeps_speed, 
expiretime, 
authhost, 
authproxy, 
timeoutlist, 
timenode, 
digest, 
proxydigest, 
tempwrite, 
expires, 
first_remote_port, 
tempcount, 
os_errno, 
httpversion, 
stream_weight, 
multi_owned_by_easy, 
this_is_a_follow, 
refused_stream, 
errorbuf, 
allow_port, 
authproblem, 
ftp_trying_alternative, 
wildcardmatch, 
expect100header, 
prev_block_had_trailing_cr, 
slash_removed, 
use_range, 
rangestringalloc, 
done, 
stream_depends_e, 
consider reordering the fields or adding explicit padding members [clang-analyzer-optin.performance.Padding]
struct UrlState {
       ^
/project/git/Utilities/cmcurl/lib/urldata.h:1209:8: note: Excessive padding in 'struct UrlState' (61 padding bytes, where 5 is optimal). Optimal fields order: conn_cache, lastconnect, headerbuff, headersize, buffer, ulbuf, current_speed, first_host, session, sessionage, scratch, prev_signal, resolver, most_recent_ftp_entrypath, crlf_conversions, pathbuffer, path, range, resume_from, rtsp_next_client_CSeq, rtsp_next_server_CSeq, rtsp_CSeq_recv, infilesize, drain, fread_func, in, stream_depends_on, keeps_speed, expiretime, authhost, authproxy, timeoutlist, timenode, digest, proxydigest, tempwrite, expires, first_remote_port, tempcount, os_errno, httpversion, stream_weight, multi_owned_by_easy, this_is_a_follow, refused_stream, errorbuf, allow_port, authproblem, ftp_trying_alternative, wildcardmatch, expect100header, prev_block_had_trailing_cr, slash_removed, use_range, rangestringalloc, done, stream_depends_e, consider reordering the fields or adding explicit padding members
/project/git/Utilities/cmcurl/lib/urldata.h:1457:8: warning: Excessive padding in 'struct UserDefined' (120 padding bytes, where 0 is optimal). 
Optimal fields order: 
err, 
debugdata, 
errorbuffer, 
proxyport, 
out, 
in_set, 
writeheader, 
rtp_out, 
use_port, 
httpauth, 
proxyauth, 
socks5auth, 
followlocation, 
maxredirs, 
postfields, 
seek_func, 
postfieldsize, 
fwrite_func, 
fwrite_header, 
fwrite_rtp, 
fread_func_set, 
fprogress, 
fxferinfo, 
fdebug, 
ioctl_func, 
fsockopt, 
sockopt_client, 
fopensocket, 
opensocket_client, 
fclosesocket, 
closesocket_client, 
seek_client, 
convfromnetwork, 
convtonetwork, 
convfromutf8, 
progress_client, 
ioctl_client, 
timeout, 
connecttimeout, 
accepttimeout, 
happy_eyeballs_timeout, 
server_response_timeout, 
tftp_blksize, 
filesize, 
low_speed_limit, 
low_speed_time, 
max_send_speed, 
max_recv_speed, 
set_resume_from, 
headers, 
proxyheaders, 
httppost, 
quote, 
postquote, 
prequote, 
source_quote, 
source_prequote, 
source_postquote, 
telnet_options, 
resolve, 
connect_to, 
timevalue, 
httpversion, 
general_ssl, 
dns_cache_timeout, 
buffer_size, 
upload_buffer_size, 
private_data, 
http200aliases, 
ipver, 
max_filesize, 
ssh_keyfunc, 
ssh_keyfunc_userp, 
ssh_auth_types, 
new_file_perms, 
new_directory_perms, 
allowed_protocols, 
redir_protocols, 
mail_rcpt, 
rtspversion, 
chunk_bgn, 
chunk_end, 
fnmatch, 
fnmatch_data, 
gssapi_delegation, 
tcp_keepidle, 
tcp_keepintvl, 
maxconnects, 
expect_100_timeout, 
stream_depends_on, 
stream_dependents, 
resolver_start, 
resolver_start_client, 
ssl, 
proxy_ssl, 
mimepost, 
str, 
keep_post, 
localportrange, 
is_fread_set, 
is_fwrite_set, 
timecondition, 
httpreq, 
proxytype, 
ftp_filemethod, 
ftp_create_missing_dirs, 
use_netrc, 
use_ssl, 
ftpsslauth, 
ftp_ccc, 
scope_id, 
rtspreq, 
stream_weight, 
localport, 
free_referer, 
tftp_no_options, 
sep_headers, 
cookiesession, 
crlf, 
strip_path_slash, 
ssh_compression, 
get_filetime, 
tunnel_thru_httpproxy, 
prefer_ascii, 
ftp_append, 
ftp_list_only, 
ftp_use_port, 
hide_progress, 
http_fail_on_error, 
http_keep_sending_on_error, 
http_follow_location, 
http_transfer_encoding, 
allow_auth_to_other_hosts, 
include_header, 
http_set_referer, 
http_auto_referer, 
opt_no_body, 
upload, 
verbose, 
krb, 
reuse_forbid, 
reuse_fresh, 
ftp_use_epsv, 
ftp_use_eprt, 
ftp_use_pret, 
no_signal, 
global_dns_cache, 
tcp_nodelay, 
ignorecl, 
ftp_skip_ip, 
connect_only, 
http_te_skip, 
http_ce_skip, 
proxy_transfer_mode, 
sasl_ir, 
wildcard_enabled, 
tcp_keepalive, 
tcp_fastopen, 
ssl_enable_npn, 
ssl_enable_alpn, 
path_as_is, 
pipewait, 
suppress_connect_headers, 
dns_shuffle_addresses, 
stream_depends_e, 
haproxyprotocol, 
abstract_unix_socket, 
disallow_username_in_url, 
consider reordering the fields or adding explicit padding members [clang-analyzer-optin.performance.Padding]
struct UserDefined {
       ^
2 warnings generated.

/project/git/Utilities/cmcurl/lib/urldata.h:1457:8: note: Excessive padding in 'struct UserDefined' (120 padding bytes, where 0 is optimal). Optimal fields order: err, debugdata, errorbuffer, proxyport, out, in_set, writeheader, rtp_out, use_port, httpauth, proxyauth, socks5auth, followlocation, maxredirs, postfields, seek_func, postfieldsize, fwrite_func, fwrite_header, fwrite_rtp, fread_func_set, fprogress, fxferinfo, fdebug, ioctl_func, fsockopt, sockopt_client, fopensocket, opensocket_client, fclosesocket, closesocket_client, seek_client, convfromnetwork, convtonetwork, convfromutf8, progress_client, ioctl_client, timeout, connecttimeout, accepttimeout, happy_eyeballs_timeout, server_response_timeout, tftp_blksize, filesize, low_speed_limit, low_speed_time, max_send_speed, max_recv_speed, set_resume_from, headers, proxyheaders, httppost, quote, postquote, prequote, source_quote, source_prequote, source_postquote, telnet_options, resolve, connect_to, timevalue, httpversion, general_ssl, dns_cache_timeout, buffer_size, upload_buffer_size, private_data, http200aliases, ipver, max_filesize, ssh_keyfunc, ssh_keyfunc_userp, ssh_auth_types, new_file_perms, new_directory_perms, allowed_protocols, redir_protocols, mail_rcpt, rtspversion, chunk_bgn, chunk_end, fnmatch, fnmatch_data, gssapi_delegation, tcp_keepidle, tcp_keepintvl, maxconnects, expect_100_timeout, stream_depends_on, stream_dependents, resolver_start, resolver_start_client, ssl, proxy_ssl, mimepost, str, keep_post, localportrange, is_fread_set, is_fwrite_set, timecondition, httpreq, proxytype, ftp_filemethod, ftp_create_missing_dirs, use_netrc, use_ssl, ftpsslauth, ftp_ccc, scope_id, rtspreq, stream_weight, localport, free_referer, tftp_no_options, sep_headers, cookiesession, crlf, strip_path_slash, ssh_compression, get_filetime, tunnel_thru_httpproxy, prefer_ascii, ftp_append, ftp_list_only, ftp_use_port, hide_progress, http_fail_on_error, http_keep_sending_on_error, http_follow_location, http_transfer_encoding, allow_auth_to_other_hosts, include_header, http_set_referer, http_auto_referer, opt_no_body, upload, verbose, krb, reuse_forbid, reuse_fresh, ftp_use_epsv, ftp_use_eprt, ftp_use_pret, no_signal, global_dns_cache, tcp_nodelay, ignorecl, ftp_skip_ip, connect_only, http_te_skip, http_ce_skip, proxy_transfer_mode, sasl_ir, wildcard_enabled, tcp_keepalive, tcp_fastopen, ssl_enable_npn, ssl_enable_alpn, path_as_is, pipewait, suppress_connect_headers, dns_shuffle_addresses, stream_depends_e, haproxyprotocol, abstract_unix_socket, disallow_username_in_url, consider reordering the fields or adding explicit padding members

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpnV_iRC.yaml -p=/project/git /project/git/Utilities/cmcurl/lib/x509asn1.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpykJoOh.yaml -p=/project/git /project/git/Utilities/cmcurl/lib/http2.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpzXv37F.yaml -p=/project/git /project/git/Utilities/cmcurl/lib/ssh-libssh.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmphO3f6l.yaml -p=/project/git /project/git/Utilities/cmcurl/lib/socks_gssapi.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpjL8zGq.yaml -p=/project/git /project/git/Utilities/cmcurl/lib/curl_addrinfo.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpSjvWNp.yaml -p=/project/git /project/git/Utilities/cmcurl/lib/smb.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpj3Yb18.yaml -p=/project/git /project/git/Utilities/cmcurl/lib/curl_des.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmp5rcCQI.yaml -p=/project/git /project/git/Utilities/cmcurl/lib/curl_endian.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmp_8s1K3.yaml -p=/project/git /project/git/Utilities/cmcurl/lib/system_win32.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmp0u3pgD.yaml -p=/project/git /project/git/Utilities/cmcurl/lib/curl_ctype.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpQyl1pO.yaml -p=/project/git /project/git/Utilities/cmcurl/lib/curl_path.c
/project/git/Utilities/cmcurl/lib/curl_path.c:179:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
      strcpy(*path, homedir);
      ^
/project/git/Utilities/cmcurl/lib/curl_path.c:179:7: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
/project/git/Utilities/cmcurl/lib/urldata.h:1209:8: warning: Excessive padding in 'struct UrlState' (61 padding bytes, where 5 is optimal). 
Optimal fields order: 
conn_cache, 
lastconnect, 
headerbuff, 
headersize, 
buffer, 
ulbuf, 
current_speed, 
first_host, 
session, 
sessionage, 
scratch, 
prev_signal, 
resolver, 
most_recent_ftp_entrypath, 
crlf_conversions, 
pathbuffer, 
path, 
range, 
resume_from, 
rtsp_next_client_CSeq, 
rtsp_next_server_CSeq, 
rtsp_CSeq_recv, 
infilesize, 
drain, 
fread_func, 
in, 
stream_depends_on, 
keeps_speed, 
expiretime, 
authhost, 
authproxy, 
timeoutlist, 
timenode, 
digest, 
proxydigest, 
tempwrite, 
expires, 
first_remote_port, 
tempcount, 
os_errno, 
httpversion, 
stream_weight, 
multi_owned_by_easy, 
this_is_a_follow, 
refused_stream, 
errorbuf, 
allow_port, 
authproblem, 
ftp_trying_alternative, 
wildcardmatch, 
expect100header, 
prev_block_had_trailing_cr, 
slash_removed, 
use_range, 
rangestringalloc, 
done, 
stream_depends_e, 
consider reordering the fields or adding explicit padding members [clang-analyzer-optin.performance.Padding]
struct UrlState {
       ^
/project/git/Utilities/cmcurl/lib/urldata.h:1209:8: note: Excessive padding in 'struct UrlState' (61 padding bytes, where 5 is optimal). Optimal fields order: conn_cache, lastconnect, headerbuff, headersize, buffer, ulbuf, current_speed, first_host, session, sessionage, scratch, prev_signal, resolver, most_recent_ftp_entrypath, crlf_conversions, pathbuffer, path, range, resume_from, rtsp_next_client_CSeq, rtsp_next_server_CSeq, rtsp_CSeq_recv, infilesize, drain, fread_func, in, stream_depends_on, keeps_speed, expiretime, authhost, authproxy, timeoutlist, timenode, digest, proxydigest, tempwrite, expires, first_remote_port, tempcount, os_errno, httpversion, stream_weight, multi_owned_by_easy, this_is_a_follow, refused_stream, errorbuf, allow_port, authproblem, ftp_trying_alternative, wildcardmatch, expect100header, prev_block_had_trailing_cr, slash_removed, use_range, rangestringalloc, done, stream_depends_e, consider reordering the fields or adding explicit padding members
/project/git/Utilities/cmcurl/lib/urldata.h:1457:8: warning: Excessive padding in 'struct UserDefined' (120 padding bytes, where 0 is optimal). 
Optimal fields order: 
err, 
debugdata, 
errorbuffer, 
proxyport, 
out, 
in_set, 
writeheader, 
rtp_out, 
use_port, 
httpauth, 
proxyauth, 
socks5auth, 
followlocation, 
maxredirs, 
postfields, 
seek_func, 
postfieldsize, 
fwrite_func, 
fwrite_header, 
fwrite_rtp, 
fread_func_set, 
fprogress, 
fxferinfo, 
fdebug, 
ioctl_func, 
fsockopt, 
sockopt_client, 
fopensocket, 
opensocket_client, 
fclosesocket, 
closesocket_client, 
seek_client, 
convfromnetwork, 
convtonetwork, 
convfromutf8, 
progress_client, 
ioctl_client, 
timeout, 
connecttimeout, 
accepttimeout, 
happy_eyeballs_timeout, 
server_response_timeout, 
tftp_blksize, 
filesize, 
low_speed_limit, 
low_speed_time, 
max_send_speed, 
max_recv_speed, 
set_resume_from, 
headers, 
proxyheaders, 
httppost, 
quote, 
postquote, 
prequote, 
source_quote, 
source_prequote, 
source_postquote, 
telnet_options, 
resolve, 
connect_to, 
timevalue, 
httpversion, 
general_ssl, 
dns_cache_timeout, 
buffer_size, 
upload_buffer_size, 
private_data, 
http200aliases, 
ipver, 
max_filesize, 
ssh_keyfunc, 
ssh_keyfunc_userp, 
ssh_auth_types, 
new_file_perms, 
new_directory_perms, 
allowed_protocols, 
redir_protocols, 
mail_rcpt, 
rtspversion, 
chunk_bgn, 
chunk_end, 
fnmatch, 
fnmatch_data, 
gssapi_delegation, 
tcp_keepidle, 
tcp_keepintvl, 
maxconnects, 
expect_100_timeout, 
3 warnings generated.

stream_depends_on, 
stream_dependents, 
resolver_start, 
resolver_start_client, 
ssl, 
proxy_ssl, 
mimepost, 
str, 
keep_post, 
localportrange, 
is_fread_set, 
is_fwrite_set, 
timecondition, 
httpreq, 
proxytype, 
ftp_filemethod, 
ftp_create_missing_dirs, 
use_netrc, 
use_ssl, 
ftpsslauth, 
ftp_ccc, 
scope_id, 
rtspreq, 
stream_weight, 
localport, 
free_referer, 
tftp_no_options, 
sep_headers, 
cookiesession, 
crlf, 
strip_path_slash, 
ssh_compression, 
get_filetime, 
tunnel_thru_httpproxy, 
prefer_ascii, 
ftp_append, 
ftp_list_only, 
ftp_use_port, 
hide_progress, 
http_fail_on_error, 
http_keep_sending_on_error, 
http_follow_location, 
http_transfer_encoding, 
allow_auth_to_other_hosts, 
include_header, 
http_set_referer, 
http_auto_referer, 
opt_no_body, 
upload, 
verbose, 
krb, 
reuse_forbid, 
reuse_fresh, 
ftp_use_epsv, 
ftp_use_eprt, 
ftp_use_pret, 
no_signal, 
global_dns_cache, 
tcp_nodelay, 
ignorecl, 
ftp_skip_ip, 
connect_only, 
http_te_skip, 
http_ce_skip, 
proxy_transfer_mode, 
sasl_ir, 
wildcard_enabled, 
tcp_keepalive, 
tcp_fastopen, 
ssl_enable_npn, 
ssl_enable_alpn, 
path_as_is, 
pipewait, 
suppress_connect_headers, 
dns_shuffle_addresses, 
stream_depends_e, 
haproxyprotocol, 
abstract_unix_socket, 
disallow_username_in_url, 
consider reordering the fields or adding explicit padding members [clang-analyzer-optin.performance.Padding]
struct UserDefined {
       ^
/project/git/Utilities/cmcurl/lib/urldata.h:1457:8: note: Excessive padding in 'struct UserDefined' (120 padding bytes, where 0 is optimal). Optimal fields order: err, debugdata, errorbuffer, proxyport, out, in_set, writeheader, rtp_out, use_port, httpauth, proxyauth, socks5auth, followlocation, maxredirs, postfields, seek_func, postfieldsize, fwrite_func, fwrite_header, fwrite_rtp, fread_func_set, fprogress, fxferinfo, fdebug, ioctl_func, fsockopt, sockopt_client, fopensocket, opensocket_client, fclosesocket, closesocket_client, seek_client, convfromnetwork, convtonetwork, convfromutf8, progress_client, ioctl_client, timeout, connecttimeout, accepttimeout, happy_eyeballs_timeout, server_response_timeout, tftp_blksize, filesize, low_speed_limit, low_speed_time, max_send_speed, max_recv_speed, set_resume_from, headers, proxyheaders, httppost, quote, postquote, prequote, source_quote, source_prequote, source_postquote, telnet_options, resolve, connect_to, timevalue, httpversion, general_ssl, dns_cache_timeout, buffer_size, upload_buffer_size, private_data, http200aliases, ipver, max_filesize, ssh_keyfunc, ssh_keyfunc_userp, ssh_auth_types, new_file_perms, new_directory_perms, allowed_protocols, redir_protocols, mail_rcpt, rtspversion, chunk_bgn, chunk_end, fnmatch, fnmatch_data, gssapi_delegation, tcp_keepidle, tcp_keepintvl, maxconnects, expect_100_timeout, stream_depends_on, stream_dependents, resolver_start, resolver_start_client, ssl, proxy_ssl, mimepost, str, keep_post, localportrange, is_fread_set, is_fwrite_set, timecondition, httpreq, proxytype, ftp_filemethod, ftp_create_missing_dirs, use_netrc, use_ssl, ftpsslauth, ftp_ccc, scope_id, rtspreq, stream_weight, localport, free_referer, tftp_no_options, sep_headers, cookiesession, crlf, strip_path_slash, ssh_compression, get_filetime, tunnel_thru_httpproxy, prefer_ascii, ftp_append, ftp_list_only, ftp_use_port, hide_progress, http_fail_on_error, http_keep_sending_on_error, http_follow_location, http_transfer_encoding, allow_auth_to_other_hosts, include_header, http_set_referer, http_auto_referer, opt_no_body, upload, verbose, krb, reuse_forbid, reuse_fresh, ftp_use_epsv, ftp_use_eprt, ftp_use_pret, no_signal, global_dns_cache, tcp_nodelay, ignorecl, ftp_skip_ip, connect_only, http_te_skip, http_ce_skip, proxy_transfer_mode, sasl_ir, wildcard_enabled, tcp_keepalive, tcp_fastopen, ssl_enable_npn, ssl_enable_alpn, path_as_is, pipewait, suppress_connect_headers, dns_shuffle_addresses, stream_depends_e, haproxyprotocol, abstract_unix_socket, disallow_username_in_url, consider reordering the fields or adding explicit padding members

2 warnings generated.

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpNmoT1l.yaml -p=/project/git /project/git/Utilities/cmcurl/lib/sha256.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpxP5R8J.yaml -p=/project/git /project/git/Utilities/cmcurl/lib/curl_range.c
/project/git/Utilities/cmcurl/lib/urldata.h:1209:8: warning: Excessive padding in 'struct UrlState' (61 padding bytes, where 5 is optimal). 
Optimal fields order: 
conn_cache, 
lastconnect, 
headerbuff, 
headersize, 
buffer, 
ulbuf, 
current_speed, 
first_host, 
session, 
sessionage, 
scratch, 
prev_signal, 
resolver, 
most_recent_ftp_entrypath, 
crlf_conversions, 
pathbuffer, 
path, 
range, 
resume_from, 
rtsp_next_client_CSeq, 
rtsp_next_server_CSeq, 
rtsp_CSeq_recv, 
infilesize, 
drain, 
fread_func, 
in, 
stream_depends_on, 
keeps_speed, 
expiretime, 
authhost, 
authproxy, 
timeoutlist, 
timenode, 
digest, 
proxydigest, 
tempwrite, 
expires, 
first_remote_port, 
tempcount, 
os_errno, 
httpversion, 
stream_weight, 
multi_owned_by_easy, 
this_is_a_follow, 
refused_stream, 
errorbuf, 
allow_port, 
authproblem, 
ftp_trying_alternative, 
wildcardmatch, 
expect100header, 
prev_block_had_trailing_cr, 
slash_removed, 
use_range, 
rangestringalloc, 
done, 
stream_depends_e, 
consider reordering the fields or adding explicit padding members [clang-analyzer-optin.performance.Padding]
struct UrlState {
       ^
/project/git/Utilities/cmcurl/lib/urldata.h:1209:8: note: Excessive padding in 'struct UrlState' (61 padding bytes, where 5 is optimal). Optimal fields order: conn_cache, lastconnect, headerbuff, headersize, buffer, ulbuf, current_speed, first_host, session, sessionage, scratch, prev_signal, resolver, most_recent_ftp_entrypath, crlf_conversions, pathbuffer, path, range, resume_from, rtsp_next_client_CSeq, rtsp_next_server_CSeq, rtsp_CSeq_recv, infilesize, drain, fread_func, in, stream_depends_on, keeps_speed, expiretime, authhost, authproxy, timeoutlist, timenode, digest, proxydigest, tempwrite, expires, first_remote_port, tempcount, os_errno, httpversion, stream_weight, multi_owned_by_easy, this_is_a_follow, refused_stream, errorbuf, allow_port, authproblem, ftp_trying_alternative, wildcardmatch, expect100header, prev_block_had_trailing_cr, slash_removed, use_range, rangestringalloc, done, stream_depends_e, consider reordering the fields or adding explicit padding members
/project/git/Utilities/cmcurl/lib/urldata.h:1457:8: warning: Excessive padding in 'struct UserDefined' (120 padding bytes, where 0 is optimal). 
Optimal fields order: 
err, 
debugdata, 
errorbuffer, 
proxyport, 
out, 
in_set, 
writeheader, 
rtp_out, 
use_port, 
httpauth, 
proxyauth, 
socks5auth, 
followlocation, 
maxredirs, 
postfields, 
seek_func, 
postfieldsize, 
fwrite_func, 
fwrite_header, 
fwrite_rtp, 
fread_func_set, 
fprogress, 
fxferinfo, 
fdebug, 
ioctl_func, 
fsockopt, 
sockopt_client, 
fopensocket, 
opensocket_client, 
fclosesocket, 
closesocket_client, 
seek_client, 
convfromnetwork, 
convtonetwork, 
convfromutf8, 
progress_client, 
ioctl_client, 
timeout, 
connecttimeout, 
accepttimeout, 
happy_eyeballs_timeout, 
server_response_timeout, 
tftp_blksize, 
filesize, 
low_speed_limit, 
low_speed_time, 
max_send_speed, 
max_recv_speed, 
set_resume_from, 
headers, 
proxyheaders, 
httppost, 
quote, 
postquote, 
prequote, 
source_quote, 
source_prequote, 
source_postquote, 
telnet_options, 
resolve, 
connect_to, 
timevalue, 
httpversion, 
general_ssl, 
dns_cache_timeout, 
buffer_size, 
upload_buffer_size, 
private_data, 
http200aliases, 
ipver, 
max_filesize, 
ssh_keyfunc, 
ssh_keyfunc_userp, 
ssh_auth_types, 
new_file_perms, 
new_directory_perms, 
allowed_protocols, 
redir_protocols, 
mail_rcpt, 
rtspversion, 
chunk_bgn, 
chunk_end, 
fnmatch, 
fnmatch_data, 
gssapi_delegation, 
tcp_keepidle, 
tcp_keepintvl, 
maxconnects, 
expect_100_timeout, 
stream_depends_on, 
stream_dependents, 
resolver_start, 
resolver_start_client, 
ssl, 
proxy_ssl, 
mimepost, 
str, 
keep_post, 
localportrange, 
is_fread_set, 
is_fwrite_set, 
timecondition, 
httpreq, 
proxytype, 
ftp_filemethod, 
ftp_create_missing_dirs, 
use_netrc, 
use_ssl, 
ftpsslauth, 
ftp_ccc, 
scope_id, 
rtspreq, 
stream_weight, 
localport, 
free_referer, 
tftp_no_options, 
sep_headers, 
cookiesession, 
crlf, 
strip_path_slash, 
ssh_compression, 
get_filetime, 
tunnel_thru_httpproxy, 
prefer_ascii, 
ftp_append, 
ftp_list_only, 
ftp_use_port, 
hide_progress, 
http_fail_on_error, 
http_keep_sending_on_error, 
http_follow_location, 
http_transfer_encoding, 
allow_auth_to_other_hosts, 
include_header, 
http_set_referer, 
http_auto_referer, 
opt_no_body, 
upload, 
verbose, 
krb, 
reuse_forbid, 
reuse_fresh, 
ftp_use_epsv, 
ftp_use_eprt, 
ftp_use_pret, 
no_signal, 
global_dns_cache, 
tcp_nodelay, 
ignorecl, 
ftp_skip_ip, 
connect_only, 
http_te_skip, 
http_ce_skip, 
proxy_transfer_mode, 
sasl_ir, 
wildcard_enabled, 
tcp_keepalive, 
tcp_fastopen, 
ssl_enable_npn, 
ssl_enable_alpn, 
path_as_is, 
pipewait, 
suppress_connect_headers, 
dns_shuffle_addresses, 
stream_depends_e, 
haproxyprotocol, 
abstract_unix_socket, 
disallow_username_in_url, 
consider reordering the fields or adding explicit padding members [clang-analyzer-optin.performance.Padding]
struct UserDefined {
       ^
/project/git/Utilities/cmcurl/lib/urldata.h:1457:8: note: Excessive padding in 'struct UserDefined' (120 padding bytes, where 0 is optimal). Optimal fields order: err, debugdata, errorbuffer, proxyport, out, in_set, writeheader, rtp_out, use_port, httpauth, proxyauth, socks5auth, followlocation, maxredirs, postfields, seek_func, postfieldsize, fwrite_func, fwrite_header, fwrite_rtp, fread_func_set, fprogress, fxferinfo, fdebug, ioctl_func, fsockopt, sockopt_client, fopensocket, opensocket_client, fclosesocket, closesocket_client, seek_client, convfromnetwork, convtonetwork, convfromutf8, progress_client, ioctl_client, timeout, connecttimeout, accepttimeout, happy_eyeballs_timeout, server_response_timeout, tftp_blksize, filesize, low_speed_limit, low_speed_time, max_send_speed, max_recv_speed, set_resume_from, headers, proxyheaders, httppost, quote, postquote, prequote, source_quote, source_prequote, source_postquote, telnet_options, resolve, connect_to, timevalue, httpversion, general_ssl, dns_cache_timeout, buffer_size, upload_buffer_size, private_data, http200aliases, ipver, max_filesize, ssh_keyfunc, ssh_keyfunc_userp, ssh_auth_types, new_file_perms, new_directory_perms, allowed_protocols, redir_protocols, mail_rcpt, rtspversion, chunk_bgn, chunk_end, fnmatch, fnmatch_data, gssapi_delegation, tcp_keepidle, tcp_keepintvl, maxconnects, expect_100_timeout, stream_depends_on, stream_dependents, resolver_start, resolver_start_client, ssl, proxy_ssl, mimepost, str, keep_post, localportrange, is_fread_set, is_fwrite_set, timecondition, httpreq, proxytype, ftp_filemethod, ftp_create_missing_dirs, use_netrc, use_ssl, ftpsslauth, ftp_ccc, scope_id, rtspreq, stream_weight, localport, free_referer, tftp_no_options, sep_headers, cookiesession, crlf, strip_path_slash, ssh_compression, get_filetime, tunnel_thru_httpproxy, prefer_ascii, ftp_append, ftp_list_only, ftp_use_port, hide_progress, http_fail_on_error, http_keep_sending_on_error, http_follow_location, http_transfer_encoding, allow_auth_to_other_hosts, include_header, http_set_referer, http_auto_referer, opt_no_body, upload, verbose, krb, reuse_forbid, reuse_fresh, ftp_use_epsv, ftp_use_eprt, ftp_use_pret, no_signal, global_dns_cache, tcp_nodelay, ignorecl, ftp_skip_ip, connect_only, http_te_skip, http_ce_skip, proxy_transfer_mode, sasl_ir, wildcard_enabled, tcp_keepalive, tcp_fastopen, ssl_enable_npn, ssl_enable_alpn, path_as_is, pipewait, suppress_connect_headers, dns_shuffle_addresses, stream_depends_e, haproxyprotocol, abstract_unix_socket, disallow_username_in_url, consider reordering the fields or adding explicit padding members

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpSrWf_y.yaml -p=/project/git /project/git/Utilities/cmcurl/lib/url.c
/project/git/Utilities/cmcurl/lib/url.c:2250:5: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
    strcpy(path, "/");
    ^
/project/git/Utilities/cmcurl/lib/url.c:2250:5: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
/project/git/Utilities/cmcurl/lib/url.c:2630:3: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
  strcpy(envp, "_proxy");
  ^
/project/git/Utilities/cmcurl/lib/url.c:2630:3: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
/project/git/Utilities/cmcurl/lib/urldata.h:1209:8: warning: Excessive padding in 'struct UrlState' (61 padding bytes, where 5 is optimal). 
Optimal fields order: 
conn_cache, 
lastconnect, 
headerbuff, 
headersize, 
buffer, 
ulbuf, 
current_speed, 
first_host, 
session, 
sessionage, 
scratch, 
prev_signal, 
resolver, 
most_recent_ftp_entrypath, 
crlf_conversions, 
pathbuffer, 
path, 
range, 
resume_from, 
rtsp_next_client_CSeq, 
rtsp_next_server_CSeq, 
rtsp_CSeq_recv, 
infilesize, 
drain, 
fread_func, 
in, 
stream_depends_on, 
keeps_speed, 
expiretime, 
authhost, 
authproxy, 
timeoutlist, 
timenode, 
digest, 
proxydigest, 
tempwrite, 
expires, 
first_remote_port, 
tempcount, 
os_errno, 
httpversion, 
stream_weight, 
multi_owned_by_easy, 
this_is_a_follow, 
refused_stream, 
errorbuf, 
allow_port, 
authproblem, 
ftp_trying_alternative, 
wildcardmatch, 
expect100header, 
prev_block_had_trailing_cr, 
slash_removed, 
use_range, 
rangestringalloc, 
done, 
stream_depends_e, 
consider reordering the fields or adding explicit padding members [clang-analyzer-optin.performance.Padding]
struct UrlState {
       ^
/project/git/Utilities/cmcurl/lib/urldata.h:1209:8: note: Excessive padding in 'struct UrlState' (61 padding bytes, where 5 is optimal). Optimal fields order: conn_cache, lastconnect, headerbuff, headersize, buffer, ulbuf, current_speed, first_host, session, sessionage, scratch, prev_signal, resolver, most_recent_ftp_entrypath, crlf_conversions, pathbuffer, path, range, resume_from, rtsp_next_client_CSeq, rtsp_next_server_CSeq, rtsp_CSeq_recv, infilesize, drain, fread_func, in, stream_depends_on, keeps_speed, expiretime, authhost, authproxy, timeoutlist, timenode, digest, proxydigest, tempwrite, expires, first_remote_port, tempcount, os_errno, httpversion, stream_weight, multi_owned_by_easy, this_is_a_follow, refused_stream, errorbuf, allow_port, authproblem, ftp_trying_alternative, wildcardmatch, expect100header, prev_block_had_trailing_cr, slash_removed, use_range, rangestringalloc, done, stream_depends_e, consider reordering the fields or adding explicit padding members
/project/git/Utilities/cmcurl/lib/urldata.h:1457:8: warning: Excessive padding in 'struct UserDefined' (120 padding bytes, where 0 is optimal). 
Optimal fields order: 
err, 
debugdata, 
errorbuffer, 
proxyport, 
out, 
in_set, 
writeheader, 
rtp_out, 
use_port, 
httpauth, 
proxyauth, 
socks5auth, 
followlocation, 
maxredirs, 
postfields, 
seek_func, 
postfieldsize, 
fwrite_func, 
fwrite_header, 
fwrite_rtp, 
fread_func_set, 
fprogress, 
fxferinfo, 
fdebug, 
ioctl_func, 
fsockopt, 
sockopt_client, 
fopensocket, 
opensocket_client, 
fclosesocket, 
closesocket_client, 
seek_client, 
convfromnetwork, 
convtonetwork, 
convfromutf8, 
progress_client, 
ioctl_client, 
timeout, 
connecttimeout, 
accepttimeout, 
happy_eyeballs_timeout, 
server_response_timeout, 
tftp_blksize, 
filesize, 
low_speed_limit, 
low_speed_time, 
max_send_speed, 
max_recv_speed, 
set_resume_from, 
headers, 
proxyheaders, 
httppost, 
quote, 
4 warnings generated.

postquote, 
prequote, 
source_quote, 
source_prequote, 
source_postquote, 
telnet_options, 
resolve, 
connect_to, 
timevalue, 
httpversion, 
general_ssl, 
dns_cache_timeout, 
buffer_size, 
upload_buffer_size, 
private_data, 
http200aliases, 
ipver, 
max_filesize, 
ssh_keyfunc, 
ssh_keyfunc_userp, 
ssh_auth_types, 
new_file_perms, 
new_directory_perms, 
allowed_protocols, 
redir_protocols, 
mail_rcpt, 
rtspversion, 
chunk_bgn, 
chunk_end, 
fnmatch, 
fnmatch_data, 
gssapi_delegation, 
tcp_keepidle, 
tcp_keepintvl, 
maxconnects, 
expect_100_timeout, 
stream_depends_on, 
stream_dependents, 
resolver_start, 
resolver_start_client, 
ssl, 
proxy_ssl, 
mimepost, 
str, 
keep_post, 
localportrange, 
is_fread_set, 
is_fwrite_set, 
timecondition, 
httpreq, 
proxytype, 
ftp_filemethod, 
ftp_create_missing_dirs, 
use_netrc, 
use_ssl, 
ftpsslauth, 
ftp_ccc, 
scope_id, 
rtspreq, 
stream_weight, 
localport, 
free_referer, 
tftp_no_options, 
sep_headers, 
cookiesession, 
crlf, 
strip_path_slash, 
ssh_compression, 
get_filetime, 
tunnel_thru_httpproxy, 
prefer_ascii, 
ftp_append, 
ftp_list_only, 
ftp_use_port, 
hide_progress, 
http_fail_on_error, 
http_keep_sending_on_error, 
http_follow_location, 
http_transfer_encoding, 
allow_auth_to_other_hosts, 
include_header, 
http_set_referer, 
http_auto_referer, 
opt_no_body, 
upload, 
verbose, 
krb, 
reuse_forbid, 
reuse_fresh, 
ftp_use_epsv, 
ftp_use_eprt, 
ftp_use_pret, 
no_signal, 
global_dns_cache, 
tcp_nodelay, 
ignorecl, 
ftp_skip_ip, 
connect_only, 
http_te_skip, 
http_ce_skip, 
proxy_transfer_mode, 
sasl_ir, 
wildcard_enabled, 
tcp_keepalive, 
tcp_fastopen, 
ssl_enable_npn, 
ssl_enable_alpn, 
path_as_is, 
pipewait, 
suppress_connect_headers, 
dns_shuffle_addresses, 
stream_depends_e, 
haproxyprotocol, 
abstract_unix_socket, 
disallow_username_in_url, 
consider reordering the fields or adding explicit padding members [clang-analyzer-optin.performance.Padding]
struct UserDefined {
       ^
/project/git/Utilities/cmcurl/lib/urldata.h:1457:8: note: Excessive padding in 'struct UserDefined' (120 padding bytes, where 0 is optimal). Optimal fields order: err, debugdata, errorbuffer, proxyport, out, in_set, writeheader, rtp_out, use_port, httpauth, proxyauth, socks5auth, followlocation, maxredirs, postfields, seek_func, postfieldsize, fwrite_func, fwrite_header, fwrite_rtp, fread_func_set, fprogress, fxferinfo, fdebug, ioctl_func, fsockopt, sockopt_client, fopensocket, opensocket_client, fclosesocket, closesocket_client, seek_client, convfromnetwork, convtonetwork, convfromutf8, progress_client, ioctl_client, timeout, connecttimeout, accepttimeout, happy_eyeballs_timeout, server_response_timeout, tftp_blksize, filesize, low_speed_limit, low_speed_time, max_send_speed, max_recv_speed, set_resume_from, headers, proxyheaders, httppost, quote, postquote, prequote, source_quote, source_prequote, source_postquote, telnet_options, resolve, connect_to, timevalue, httpversion, general_ssl, dns_cache_timeout, buffer_size, upload_buffer_size, private_data, http200aliases, ipver, max_filesize, ssh_keyfunc, ssh_keyfunc_userp, ssh_auth_types, new_file_perms, new_directory_perms, allowed_protocols, redir_protocols, mail_rcpt, rtspversion, chunk_bgn, chunk_end, fnmatch, fnmatch_data, gssapi_delegation, tcp_keepidle, tcp_keepintvl, maxconnects, expect_100_timeout, stream_depends_on, stream_dependents, resolver_start, resolver_start_client, ssl, proxy_ssl, mimepost, str, keep_post, localportrange, is_fread_set, is_fwrite_set, timecondition, httpreq, proxytype, ftp_filemethod, ftp_create_missing_dirs, use_netrc, use_ssl, ftpsslauth, ftp_ccc, scope_id, rtspreq, stream_weight, localport, free_referer, tftp_no_options, sep_headers, cookiesession, crlf, strip_path_slash, ssh_compression, get_filetime, tunnel_thru_httpproxy, prefer_ascii, ftp_append, ftp_list_only, ftp_use_port, hide_progress, http_fail_on_error, http_keep_sending_on_error, http_follow_location, http_transfer_encoding, allow_auth_to_other_hosts, include_header, http_set_referer, http_auto_referer, opt_no_body, upload, verbose, krb, reuse_forbid, reuse_fresh, ftp_use_epsv, ftp_use_eprt, ftp_use_pret, no_signal, global_dns_cache, tcp_nodelay, ignorecl, ftp_skip_ip, connect_only, http_te_skip, http_ce_skip, proxy_transfer_mode, sasl_ir, wildcard_enabled, tcp_keepalive, tcp_fastopen, ssl_enable_npn, ssl_enable_alpn, path_as_is, pipewait, suppress_connect_headers, dns_shuffle_addresses, stream_depends_e, haproxyprotocol, abstract_unix_socket, disallow_username_in_url, consider reordering the fields or adding explicit padding members

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpxLxeyZ.yaml -p=/project/git /project/git/Utilities/cmcurl/lib/splay.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpxMabpQ.yaml -p=/project/git /project/git/Utilities/cmcurl/lib/psl.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmprzuQeo.yaml -p=/project/git /project/git/Utilities/cmcurl/lib/vauth/vauth.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpzTB8Wj.yaml -p=/project/git /project/git/Utilities/cmcurl/lib/vauth/digest_sspi.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpvyy4fW.yaml -p=/project/git /project/git/Utilities/cmcurl/lib/vauth/krb5_gssapi.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmprKhVCr.yaml -p=/project/git /project/git/Utilities/cmcurl/lib/vauth/cleartext.c
/project/git/Utilities/cmcurl/lib/urldata.h:1209:8: warning: Excessive padding in 'struct UrlState' (61 padding bytes, where 5 is optimal). 
Optimal fields order: 
conn_cache, 
lastconnect, 
headerbuff, 
headersize, 
buffer, 
ulbuf, 
current_speed, 
first_host, 
session, 
sessionage, 
scratch, 
prev_signal, 
resolver, 
most_recent_ftp_entrypath, 
crlf_conversions, 
pathbuffer, 
path, 
range, 
resume_from, 
rtsp_next_client_CSeq, 
rtsp_next_server_CSeq, 
rtsp_CSeq_recv, 
infilesize, 
drain, 
fread_func, 
in, 
stream_depends_on, 
keeps_speed, 
expiretime, 
authhost, 
authproxy, 
timeoutlist, 
timenode, 
digest, 
proxydigest, 
tempwrite, 
expires, 
first_remote_port, 
tempcount, 
os_errno, 
httpversion, 
stream_weight, 
multi_owned_by_easy, 
this_is_a_follow, 
refused_stream, 
errorbuf, 
allow_port, 
authproblem, 
ftp_trying_alternative, 
wildcardmatch, 
expect100header, 
prev_block_had_trailing_cr, 
slash_removed, 
use_range, 
rangestringalloc, 
done, 
stream_depends_e, 
consider reordering the fields or adding explicit padding members [clang-analyzer-optin.performance.Padding]
struct UrlState {
       ^
/project/git/Utilities/cmcurl/lib/urldata.h:1209:8: note: Excessive padding in 'struct UrlState' (61 padding bytes, where 5 is optimal). Optimal fields order: conn_cache, lastconnect, headerbuff, headersize, buffer, ulbuf, current_speed, first_host, session, sessionage, scratch, prev_signal, resolver, most_recent_ftp_entrypath, crlf_conversions, pathbuffer, path, range, resume_from, rtsp_next_client_CSeq, rtsp_next_server_CSeq, rtsp_CSeq_recv, infilesize, drain, fread_func, in, stream_depends_on, keeps_speed, expiretime, authhost, authproxy, timeoutlist, timenode, digest, proxydigest, tempwrite, expires, first_remote_port, tempcount, os_errno, httpversion, stream_weight, multi_owned_by_easy, this_is_a_follow, refused_stream, errorbuf, allow_port, authproblem, ftp_trying_alternative, wildcardmatch, expect100header, prev_block_had_trailing_cr, slash_removed, use_range, rangestringalloc, done, stream_depends_e, consider reordering the fields or adding explicit padding members
/project/git/Utilities/cmcurl/lib/urldata.h:1457:8: warning: Excessive padding in 'struct UserDefined' (120 padding bytes, where 0 is optimal). 
Optimal fields order: 
err, 
debugdata, 
errorbuffer, 
proxyport, 
out, 
in_set, 
writeheader, 
rtp_out, 
use_port, 
httpauth, 
proxyauth, 
socks5auth, 
followlocation, 
maxredirs, 
postfields, 
seek_func, 
postfieldsize, 
fwrite_func, 
fwrite_header, 
fwrite_rtp, 
fread_func_set, 
fprogress, 
fxferinfo, 
fdebug, 
ioctl_func, 
fsockopt, 
sockopt_client, 
fopensocket, 
opensocket_client, 
fclosesocket, 
closesocket_client, 
seek_client, 
convfromnetwork, 
convtonetwork, 
convfromutf8, 
progress_client, 
ioctl_client, 
timeout, 
connecttimeout, 
accepttimeout, 
happy_eyeballs_timeout, 
server_response_timeout, 
tftp_blksize, 
filesize, 
low_speed_limit, 
low_speed_time, 
max_send_speed, 
max_recv_speed, 
set_resume_from, 
headers, 
proxyheaders, 
httppost, 
quote, 
postquote, 
prequote, 
source_quote, 
source_prequote, 
source_postquote, 
telnet_options, 
resolve, 
connect_to, 
timevalue, 
httpversion, 
general_ssl, 
dns_cache_timeout, 
buffer_size, 
upload_buffer_size, 
private_data, 
http200aliases, 
ipver, 
max_filesize, 
ssh_keyfunc, 
ssh_keyfunc_userp, 
ssh_auth_types, 
new_file_perms, 
new_directory_perms, 
allowed_protocols, 
redir_protocols, 
mail_rcpt, 
rtspversion, 
chunk_bgn, 
chunk_end, 
fnmatch, 
fnmatch_data, 
gssapi_delegation, 
tcp_keepidle, 
tcp_keepintvl, 
maxconnects, 
expect_100_timeout, 
stream_depends_on, 
stream_dependents, 
resolver_start, 
resolver_start_client, 
ssl, 
proxy_ssl, 
mimepost, 
str, 
keep_post, 
localportrange, 
is_fread_set, 
is_fwrite_set, 
timecondition, 
httpreq, 
proxytype, 
ftp_filemethod, 
ftp_create_missing_dirs, 
use_netrc, 
use_ssl, 
ftpsslauth, 
ftp_ccc, 
scope_id, 
rtspreq, 
stream_weight, 
localport, 
free_referer, 
tftp_no_options, 
sep_headers, 
cookiesession, 
crlf, 
strip_path_slash, 
ssh_compression, 
get_filetime, 
tunnel_thru_httpproxy, 
prefer_ascii, 
ftp_append, 
ftp_list_only, 
ftp_use_port, 
hide_progress, 
http_fail_on_error, 
http_keep_sending_on_error, 
http_follow_location, 
http_transfer_encoding, 
allow_auth_to_other_hosts, 
include_header, 
http_set_referer, 
http_auto_referer, 
opt_no_body, 
upload, 
verbose, 
krb, 
reuse_forbid, 
reuse_fresh, 
ftp_use_epsv, 
ftp_use_eprt, 
ftp_use_pret, 
no_signal, 
global_dns_cache, 
tcp_nodelay, 
ignorecl, 
ftp_skip_ip, 
connect_only, 
http_te_skip, 
http_ce_skip, 
proxy_transfer_mode, 
sasl_ir, 
wildcard_enabled, 
tcp_keepalive, 
tcp_fastopen, 
ssl_enable_npn, 
ssl_enable_alpn, 
path_as_is, 
pipewait, 
suppress_connect_headers, 
dns_shuffle_addresses, 
stream_depends_e, 
haproxyprotocol, 
abstract_unix_socket, 
disallow_username_in_url, 
consider reordering the fields or adding explicit padding members [clang-analyzer-optin.performance.Padding]
struct UserDefined {
       ^
2 warnings generated.

2 warnings generated.

/project/git/Utilities/cmcurl/lib/urldata.h:1457:8: note: Excessive padding in 'struct UserDefined' (120 padding bytes, where 0 is optimal). Optimal fields order: err, debugdata, errorbuffer, proxyport, out, in_set, writeheader, rtp_out, use_port, httpauth, proxyauth, socks5auth, followlocation, maxredirs, postfields, seek_func, postfieldsize, fwrite_func, fwrite_header, fwrite_rtp, fread_func_set, fprogress, fxferinfo, fdebug, ioctl_func, fsockopt, sockopt_client, fopensocket, opensocket_client, fclosesocket, closesocket_client, seek_client, convfromnetwork, convtonetwork, convfromutf8, progress_client, ioctl_client, timeout, connecttimeout, accepttimeout, happy_eyeballs_timeout, server_response_timeout, tftp_blksize, filesize, low_speed_limit, low_speed_time, max_send_speed, max_recv_speed, set_resume_from, headers, proxyheaders, httppost, quote, postquote, prequote, source_quote, source_prequote, source_postquote, telnet_options, resolve, connect_to, timevalue, httpversion, general_ssl, dns_cache_timeout, buffer_size, upload_buffer_size, private_data, http200aliases, ipver, max_filesize, ssh_keyfunc, ssh_keyfunc_userp, ssh_auth_types, new_file_perms, new_directory_perms, allowed_protocols, redir_protocols, mail_rcpt, rtspversion, chunk_bgn, chunk_end, fnmatch, fnmatch_data, gssapi_delegation, tcp_keepidle, tcp_keepintvl, maxconnects, expect_100_timeout, stream_depends_on, stream_dependents, resolver_start, resolver_start_client, ssl, proxy_ssl, mimepost, str, keep_post, localportrange, is_fread_set, is_fwrite_set, timecondition, httpreq, proxytype, ftp_filemethod, ftp_create_missing_dirs, use_netrc, use_ssl, ftpsslauth, ftp_ccc, scope_id, rtspreq, stream_weight, localport, free_referer, tftp_no_options, sep_headers, cookiesession, crlf, strip_path_slash, ssh_compression, get_filetime, tunnel_thru_httpproxy, prefer_ascii, ftp_append, ftp_list_only, ftp_use_port, hide_progress, http_fail_on_error, http_keep_sending_on_error, http_follow_location, http_transfer_encoding, allow_auth_to_other_hosts, include_header, http_set_referer, http_auto_referer, opt_no_body, upload, verbose, krb, reuse_forbid, reuse_fresh, ftp_use_epsv, ftp_use_eprt, ftp_use_pret, no_signal, global_dns_cache, tcp_nodelay, ignorecl, ftp_skip_ip, connect_only, http_te_skip, http_ce_skip, proxy_transfer_mode, sasl_ir, wildcard_enabled, tcp_keepalive, tcp_fastopen, ssl_enable_npn, ssl_enable_alpn, path_as_is, pipewait, suppress_connect_headers, dns_shuffle_addresses, stream_depends_e, haproxyprotocol, abstract_unix_socket, disallow_username_in_url, consider reordering the fields or adding explicit padding members

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpnu3sjS.yaml -p=/project/git /project/git/Utilities/cmcurl/lib/vauth/cram.c
/project/git/Utilities/cmcurl/lib/urldata.h:1209:8: warning: Excessive padding in 'struct UrlState' (61 padding bytes, where 5 is optimal). 
Optimal fields order: 
conn_cache, 
lastconnect, 
headerbuff, 
headersize, 
buffer, 
ulbuf, 
current_speed, 
first_host, 
session, 
sessionage, 
scratch, 
prev_signal, 
resolver, 
most_recent_ftp_entrypath, 
crlf_conversions, 
pathbuffer, 
path, 
range, 
resume_from, 
rtsp_next_client_CSeq, 
rtsp_next_server_CSeq, 
rtsp_CSeq_recv, 
infilesize, 
drain, 
fread_func, 
in, 
stream_depends_on, 
keeps_speed, 
expiretime, 
authhost, 
authproxy, 
timeoutlist, 
timenode, 
digest, 
proxydigest, 
tempwrite, 
expires, 
first_remote_port, 
tempcount, 
os_errno, 
httpversion, 
stream_weight, 
multi_owned_by_easy, 
this_is_a_follow, 
refused_stream, 
errorbuf, 
allow_port, 
authproblem, 
ftp_trying_alternative, 
wildcardmatch, 
expect100header, 
prev_block_had_trailing_cr, 
slash_removed, 
use_range, 
rangestringalloc, 
done, 
stream_depends_e, 
consider reordering the fields or adding explicit padding members [clang-analyzer-optin.performance.Padding]
struct UrlState {
       ^
/project/git/Utilities/cmcurl/lib/urldata.h:1209:8: note: Excessive padding in 'struct UrlState' (61 padding bytes, where 5 is optimal). Optimal fields order: conn_cache, lastconnect, headerbuff, headersize, buffer, ulbuf, current_speed, first_host, session, sessionage, scratch, prev_signal, resolver, most_recent_ftp_entrypath, crlf_conversions, pathbuffer, path, range, resume_from, rtsp_next_client_CSeq, rtsp_next_server_CSeq, rtsp_CSeq_recv, infilesize, drain, fread_func, in, stream_depends_on, keeps_speed, expiretime, authhost, authproxy, timeoutlist, timenode, digest, proxydigest, tempwrite, expires, first_remote_port, tempcount, os_errno, httpversion, stream_weight, multi_owned_by_easy, this_is_a_follow, refused_stream, errorbuf, allow_port, authproblem, ftp_trying_alternative, wildcardmatch, expect100header, prev_block_had_trailing_cr, slash_removed, use_range, rangestringalloc, done, stream_depends_e, consider reordering the fields or adding explicit padding members
/project/git/Utilities/cmcurl/lib/urldata.h:1457:8: warning: Excessive padding in 'struct UserDefined' (120 padding bytes, where 0 is optimal). 
Optimal fields order: 
err, 
debugdata, 
errorbuffer, 
proxyport, 
out, 
in_set, 
writeheader, 
rtp_out, 
use_port, 
httpauth, 
proxyauth, 
socks5auth, 
followlocation, 
maxredirs, 
postfields, 
seek_func, 
postfieldsize, 
fwrite_func, 
fwrite_header, 
fwrite_rtp, 
fread_func_set, 
fprogress, 
fxferinfo, 
fdebug, 
ioctl_func, 
fsockopt, 
sockopt_client, 
fopensocket, 
opensocket_client, 
fclosesocket, 
closesocket_client, 
seek_client, 
convfromnetwork, 
convtonetwork, 
convfromutf8, 
progress_client, 
ioctl_client, 
timeout, 
connecttimeout, 
accepttimeout, 
happy_eyeballs_timeout, 
server_response_timeout, 
tftp_blksize, 
filesize, 
low_speed_limit, 
low_speed_time, 
max_send_speed, 
max_recv_speed, 
set_resume_from, 
headers, 
proxyheaders, 
httppost, 
quote, 
postquote, 
prequote, 
source_quote, 
source_prequote, 
source_postquote, 
telnet_options, 
resolve, 
connect_to, 
timevalue, 
httpversion, 
general_ssl, 
dns_cache_timeout, 
buffer_size, 
upload_buffer_size, 
private_data, 
http200aliases, 
ipver, 
max_filesize, 
ssh_keyfunc, 
ssh_keyfunc_userp, 
ssh_auth_types, 
new_file_perms, 
new_directory_perms, 
allowed_protocols, 
redir_protocols, 
mail_rcpt, 
rtspversion, 
chunk_bgn, 
chunk_end, 
fnmatch, 
fnmatch_data, 
gssapi_delegation, 
tcp_keepidle, 
tcp_keepintvl, 
maxconnects, 
expect_100_timeout, 
stream_depends_on, 
stream_dependents, 
resolver_start, 
resolver_start_client, 
ssl, 
proxy_ssl, 
mimepost, 
str, 
keep_post, 
localportrange, 
is_fread_set, 
is_fwrite_set, 
timecondition, 
httpreq, 
proxytype, 
ftp_filemethod, 
ftp_create_missing_dirs, 
use_netrc, 
use_ssl, 
ftpsslauth, 
ftp_ccc, 
scope_id, 
rtspreq, 
stream_weight, 
localport, 
free_referer, 
tftp_no_options, 
sep_headers, 
cookiesession, 
crlf, 
strip_path_slash, 
ssh_compression, 
get_filetime, 
tunnel_thru_httpproxy, 
prefer_ascii, 
ftp_append, 
ftp_list_only, 
ftp_use_port, 
hide_progress, 
http_fail_on_error, 
http_keep_sending_on_error, 
http_follow_location, 
http_transfer_encoding, 
allow_auth_to_other_hosts, 
include_header, 
http_set_referer, 
http_auto_referer, 
opt_no_body, 
upload, 
verbose, 
krb, 
reuse_forbid, 
reuse_fresh, 
ftp_use_epsv, 
ftp_use_eprt, 
ftp_use_pret, 
no_signal, 
global_dns_cache, 
tcp_nodelay, 
ignorecl, 
ftp_skip_ip, 
connect_only, 
http_te_skip, 
http_ce_skip, 
proxy_transfer_mode, 
sasl_ir, 
wildcard_enabled, 
tcp_keepalive, 
tcp_fastopen, 
ssl_enable_npn, 
ssl_enable_alpn, 
path_as_is, 
pipewait, 
suppress_connect_headers, 
dns_shuffle_addresses, 
stream_depends_e, 
haproxyprotocol, 
abstract_unix_socket, 
disallow_username_in_url, 
consider reordering the fields or adding explicit padding members [clang-analyzer-optin.performance.Padding]
struct UserDefined {
       ^
/project/git/Utilities/cmcurl/lib/urldata.h:1457:8: note: Excessive padding in 'struct UserDefined' (120 padding bytes, where 0 is optimal). Optimal fields order: err, debugdata, errorbuffer, proxyport, out, in_set, writeheader, rtp_out, use_port, httpauth, proxyauth, socks5auth, followlocation, maxredirs, postfields, seek_func, postfieldsize, fwrite_func, fwrite_header, fwrite_rtp, fread_func_set, fprogress, fxferinfo, fdebug, ioctl_func, fsockopt, sockopt_client, fopensocket, opensocket_client, fclosesocket, closesocket_client, seek_client, convfromnetwork, convtonetwork, convfromutf8, progress_client, ioctl_client, timeout, connecttimeout, accepttimeout, happy_eyeballs_timeout, server_response_timeout, tftp_blksize, filesize, low_speed_limit, low_speed_time, max_send_speed, max_recv_speed, set_resume_from, headers, proxyheaders, httppost, quote, postquote, prequote, source_quote, source_prequote, source_postquote, telnet_options, resolve, connect_to, timevalue, httpversion, general_ssl, dns_cache_timeout, buffer_size, upload_buffer_size, private_data, http200aliases, ipver, max_filesize, ssh_keyfunc, ssh_keyfunc_userp, ssh_auth_types, new_file_perms, new_directory_perms, allowed_protocols, redir_protocols, mail_rcpt, rtspversion, chunk_bgn, chunk_end, fnmatch, fnmatch_data, gssapi_delegation, tcp_keepidle, tcp_keepintvl, maxconnects, expect_100_timeout, stream_depends_on, stream_dependents, resolver_start, resolver_start_client, ssl, proxy_ssl, mimepost, str, keep_post, localportrange, is_fread_set, is_fwrite_set, timecondition, httpreq, proxytype, ftp_filemethod, ftp_create_missing_dirs, use_netrc, use_ssl, ftpsslauth, ftp_ccc, scope_id, rtspreq, stream_weight, localport, free_referer, tftp_no_options, sep_headers, cookiesession, crlf, strip_path_slash, ssh_compression, get_filetime, tunnel_thru_httpproxy, prefer_ascii, ftp_append, ftp_list_only, ftp_use_port, hide_progress, http_fail_on_error, http_keep_sending_on_error, http_follow_location, http_transfer_encoding, allow_auth_to_other_hosts, include_header, http_set_referer, http_auto_referer, opt_no_body, upload, verbose, krb, reuse_forbid, reuse_fresh, ftp_use_epsv, ftp_use_eprt, ftp_use_pret, no_signal, global_dns_cache, tcp_nodelay, ignorecl, ftp_skip_ip, connect_only, http_te_skip, http_ce_skip, proxy_transfer_mode, sasl_ir, wildcard_enabled, tcp_keepalive, tcp_fastopen, ssl_enable_npn, ssl_enable_alpn, path_as_is, pipewait, suppress_connect_headers, dns_shuffle_addresses, stream_depends_e, haproxyprotocol, abstract_unix_socket, disallow_username_in_url, consider reordering the fields or adding explicit padding members

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmp_bxX1k.yaml -p=/project/git /project/git/Utilities/cmcurl/lib/setopt.c
/project/git/Utilities/cmcurl/lib/urldata.h:1209:8: warning: Excessive padding in 'struct UrlState' (61 padding bytes, where 5 is optimal). 
Optimal fields order: 
conn_cache, 
lastconnect, 
headerbuff, 
headersize, 
buffer, 
ulbuf, 
current_speed, 
first_host, 
session, 
sessionage, 
scratch, 
prev_signal, 
resolver, 
most_recent_ftp_entrypath, 
crlf_conversions, 
pathbuffer, 
path, 
range, 
resume_from, 
rtsp_next_client_CSeq, 
rtsp_next_server_CSeq, 
rtsp_CSeq_recv, 
infilesize, 
drain, 
fread_func, 
in, 
stream_depends_on, 
keeps_speed, 
expiretime, 
authhost, 
authproxy, 
timeoutlist, 
timenode, 
digest, 
proxydigest, 
tempwrite, 
expires, 
first_remote_port, 
tempcount, 
os_errno, 
httpversion, 
stream_weight, 
multi_owned_by_easy, 
this_is_a_follow, 
refused_stream, 
errorbuf, 
allow_port, 
authproblem, 
ftp_trying_alternative, 
wildcardmatch, 
expect100header, 
prev_block_had_trailing_cr, 
slash_removed, 
use_range, 
rangestringalloc, 
done, 
stream_depends_e, 
consider reordering the fields or adding explicit padding members [clang-analyzer-optin.performance.Padding]
struct UrlState {
       ^
/project/git/Utilities/cmcurl/lib/urldata.h:1209:8: note: Excessive padding in 'struct UrlState' (61 padding bytes, where 5 is optimal). Optimal fields order: conn_cache, lastconnect, headerbuff, headersize, buffer, ulbuf, current_speed, first_host, session, sessionage, scratch, prev_signal, resolver, most_recent_ftp_entrypath, crlf_conversions, pathbuffer, path, range, resume_from, rtsp_next_client_CSeq, rtsp_next_server_CSeq, rtsp_CSeq_recv, infilesize, drain, fread_func, in, stream_depends_on, keeps_speed, expiretime, authhost, authproxy, timeoutlist, timenode, digest, proxydigest, tempwrite, expires, first_remote_port, tempcount, os_errno, httpversion, stream_weight, multi_owned_by_easy, this_is_a_follow, refused_stream, errorbuf, allow_port, authproblem, ftp_trying_alternative, wildcardmatch, expect100header, prev_block_had_trailing_cr, slash_removed, use_range, rangestringalloc, done, stream_depends_e, consider reordering the fields or adding explicit padding members
/project/git/Utilities/cmcurl/lib/urldata.h:1457:8: warning: Excessive padding in 'struct UserDefined' (120 padding bytes, where 0 is optimal). 
Optimal fields order: 
err, 
debugdata, 
errorbuffer, 
proxyport, 
out, 
in_set, 
writeheader, 
rtp_out, 
use_port, 
httpauth, 
proxyauth, 
socks5auth, 
followlocation, 
maxredirs, 
postfields, 
seek_func, 
postfieldsize, 
fwrite_func, 
fwrite_header, 
fwrite_rtp, 
fread_func_set, 
fprogress, 
fxferinfo, 
fdebug, 
ioctl_func, 
fsockopt, 
sockopt_client, 
fopensocket, 
opensocket_client, 
fclosesocket, 
closesocket_client, 
seek_client, 
convfromnetwork, 
convtonetwork, 
convfromutf8, 
progress_client, 
ioctl_client, 
timeout, 
connecttimeout, 
accepttimeout, 
happy_eyeballs_timeout, 
server_response_timeout, 
tftp_blksize, 
filesize, 
low_speed_limit, 
low_speed_time, 
max_send_speed, 
max_recv_speed, 
set_resume_from, 
headers, 
proxyheaders, 
httppost, 
quote, 
postquote, 
prequote, 
source_quote, 
source_prequote, 
source_postquote, 
telnet_options, 
resolve, 
connect_to, 
timevalue, 
httpversion, 
general_ssl, 
dns_cache_timeout, 
buffer_size, 
upload_buffer_size, 
private_data, 
http200aliases, 
ipver, 
max_filesize, 
ssh_keyfunc, 
ssh_keyfunc_userp, 
ssh_auth_types, 
new_file_perms, 
new_directory_perms, 
allowed_protocols, 
redir_protocols, 
mail_rcpt, 
rtspversion, 
chunk_bgn, 
chunk_end, 
fnmatch, 
fnmatch_data, 
gssapi_delegation, 
tcp_keepidle, 
tcp_keepintvl, 
maxconnects, 
expect_100_timeout, 
stream_depends_on, 
stream_dependents, 
resolver_start, 
resolver_start_client, 
ssl, 
proxy_ssl, 
mimepost, 
str, 
keep_post, 
localportrange, 
is_fread_set, 
is_fwrite_set, 
timecondition, 
httpreq, 
proxytype, 
ftp_filemethod, 
ftp_create_missing_dirs, 
use_netrc, 
use_ssl, 
ftpsslauth, 
ftp_ccc, 
scope_id, 
rtspreq, 
stream_weight, 
localport, 
free_referer, 
tftp_no_options, 
sep_headers, 
cookiesession, 
crlf, 
strip_path_slash, 
ssh_compression, 
get_filetime, 
tunnel_thru_httpproxy, 
prefer_ascii, 
ftp_append, 
ftp_list_only, 
ftp_use_port, 
hide_progress, 
http_fail_on_error, 
http_keep_sending_on_error, 
http_follow_location, 
http_transfer_encoding, 
allow_auth_to_other_hosts, 
include_header, 
http_set_referer, 
http_auto_referer, 
opt_no_body, 
upload, 
verbose, 
krb, 
reuse_forbid, 
reuse_fresh, 
ftp_use_epsv, 
ftp_use_eprt, 
ftp_use_pret, 
no_signal, 
global_dns_cache, 
tcp_nodelay, 
ignorecl, 
ftp_skip_ip, 
connect_only, 
http_te_skip, 
http_ce_skip, 
proxy_transfer_mode, 
sasl_ir, 
wildcard_enabled, 
tcp_keepalive, 
tcp_fastopen, 
ssl_enable_npn, 
ssl_enable_alpn, 
path_as_is, 
pipewait, 
suppress_connect_headers, 
dns_shuffle_addresses, 
stream_depends_e, 
haproxyprotocol, 
abstract_unix_socket, 
disallow_username_in_url, 
consider reordering the fields or adding explicit padding members [clang-analyzer-optin.performance.Padding]
struct UserDefined {
       ^
2 warnings generated.

/project/git/Utilities/cmcurl/lib/urldata.h:1457:8: note: Excessive padding in 'struct UserDefined' (120 padding bytes, where 0 is optimal). Optimal fields order: err, debugdata, errorbuffer, proxyport, out, in_set, writeheader, rtp_out, use_port, httpauth, proxyauth, socks5auth, followlocation, maxredirs, postfields, seek_func, postfieldsize, fwrite_func, fwrite_header, fwrite_rtp, fread_func_set, fprogress, fxferinfo, fdebug, ioctl_func, fsockopt, sockopt_client, fopensocket, opensocket_client, fclosesocket, closesocket_client, seek_client, convfromnetwork, convtonetwork, convfromutf8, progress_client, ioctl_client, timeout, connecttimeout, accepttimeout, happy_eyeballs_timeout, server_response_timeout, tftp_blksize, filesize, low_speed_limit, low_speed_time, max_send_speed, max_recv_speed, set_resume_from, headers, proxyheaders, httppost, quote, postquote, prequote, source_quote, source_prequote, source_postquote, telnet_options, resolve, connect_to, timevalue, httpversion, general_ssl, dns_cache_timeout, buffer_size, upload_buffer_size, private_data, http200aliases, ipver, max_filesize, ssh_keyfunc, ssh_keyfunc_userp, ssh_auth_types, new_file_perms, new_directory_perms, allowed_protocols, redir_protocols, mail_rcpt, rtspversion, chunk_bgn, chunk_end, fnmatch, fnmatch_data, gssapi_delegation, tcp_keepidle, tcp_keepintvl, maxconnects, expect_100_timeout, stream_depends_on, stream_dependents, resolver_start, resolver_start_client, ssl, proxy_ssl, mimepost, str, keep_post, localportrange, is_fread_set, is_fwrite_set, timecondition, httpreq, proxytype, ftp_filemethod, ftp_create_missing_dirs, use_netrc, use_ssl, ftpsslauth, ftp_ccc, scope_id, rtspreq, stream_weight, localport, free_referer, tftp_no_options, sep_headers, cookiesession, crlf, strip_path_slash, ssh_compression, get_filetime, tunnel_thru_httpproxy, prefer_ascii, ftp_append, ftp_list_only, ftp_use_port, hide_progress, http_fail_on_error, http_keep_sending_on_error, http_follow_location, http_transfer_encoding, allow_auth_to_other_hosts, include_header, http_set_referer, http_auto_referer, opt_no_body, upload, verbose, krb, reuse_forbid, reuse_fresh, ftp_use_epsv, ftp_use_eprt, ftp_use_pret, no_signal, global_dns_cache, tcp_nodelay, ignorecl, ftp_skip_ip, connect_only, http_te_skip, http_ce_skip, proxy_transfer_mode, sasl_ir, wildcard_enabled, tcp_keepalive, tcp_fastopen, ssl_enable_npn, ssl_enable_alpn, path_as_is, pipewait, suppress_connect_headers, dns_shuffle_addresses, stream_depends_e, haproxyprotocol, abstract_unix_socket, disallow_username_in_url, consider reordering the fields or adding explicit padding members

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpb7OoU4.yaml -p=/project/git /project/git/Utilities/cmcurl/lib/vauth/krb5_sspi.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpi2zUZs.yaml -p=/project/git /project/git/Utilities/cmcurl/lib/vauth/ntlm.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpGgQVif.yaml -p=/project/git /project/git/Utilities/cmcurl/lib/vauth/ntlm_sspi.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpPPBceM.yaml -p=/project/git /project/git/Utilities/cmcurl/lib/vauth/spnego_gssapi.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmps69JNO.yaml -p=/project/git /project/git/Utilities/cmcurl/lib/vauth/oauth2.c
/project/git/Utilities/cmcurl/lib/urldata.h:1209:8: warning: Excessive padding in 'struct UrlState' (61 padding bytes, where 5 is optimal). 
Optimal fields order: 
conn_cache, 
lastconnect, 
headerbuff, 
headersize, 
buffer, 
ulbuf, 
current_speed, 
first_host, 
session, 
sessionage, 
scratch, 
prev_signal, 
resolver, 
most_recent_ftp_entrypath, 
crlf_conversions, 
pathbuffer, 
path, 
range, 
resume_from, 
rtsp_next_client_CSeq, 
rtsp_next_server_CSeq, 
rtsp_CSeq_recv, 
infilesize, 
drain, 
fread_func, 
in, 
stream_depends_on, 
keeps_speed, 
expiretime, 
authhost, 
authproxy, 
timeoutlist, 
timenode, 
digest, 
proxydigest, 
tempwrite, 
expires, 
first_remote_port, 
tempcount, 
os_errno, 
httpversion, 
stream_weight, 
multi_owned_by_easy, 
this_is_a_follow, 
refused_stream, 
errorbuf, 
allow_port, 
authproblem, 
ftp_trying_alternative, 
wildcardmatch, 
expect100header, 
prev_block_had_trailing_cr, 
slash_removed, 
use_range, 
rangestringalloc, 
done, 
stream_depends_e, 
consider reordering the fields or adding explicit padding members [clang-analyzer-optin.performance.Padding]
struct UrlState {
       ^
/project/git/Utilities/cmcurl/lib/urldata.h:1209:8: note: Excessive padding in 'struct UrlState' (61 padding bytes, where 5 is optimal). Optimal fields order: conn_cache, lastconnect, headerbuff, headersize, buffer, ulbuf, current_speed, first_host, session, sessionage, scratch, prev_signal, resolver, most_recent_ftp_entrypath, crlf_conversions, pathbuffer, path, range, resume_from, rtsp_next_client_CSeq, rtsp_next_server_CSeq, rtsp_CSeq_recv, infilesize, drain, fread_func, in, stream_depends_on, keeps_speed, expiretime, authhost, authproxy, timeoutlist, timenode, digest, proxydigest, tempwrite, expires, first_remote_port, tempcount, os_errno, httpversion, stream_weight, multi_owned_by_easy, this_is_a_follow, refused_stream, errorbuf, allow_port, authproblem, ftp_trying_alternative, wildcardmatch, expect100header, prev_block_had_trailing_cr, slash_removed, use_range, rangestringalloc, done, stream_depends_e, consider reordering the fields or adding explicit padding members
/project/git/Utilities/cmcurl/lib/urldata.h:1457:8: warning: Excessive padding in 'struct UserDefined' (120 padding bytes, where 0 is optimal). 
Optimal fields order: 
err, 
debugdata, 
errorbuffer, 
proxyport, 
out, 
in_set, 
writeheader, 
rtp_out, 
use_port, 
httpauth, 
proxyauth, 
socks5auth, 
followlocation, 
maxredirs, 
postfields, 
seek_func, 
postfieldsize, 
fwrite_func, 
fwrite_header, 
fwrite_rtp, 
fread_func_set, 
fprogress, 
fxferinfo, 
fdebug, 
ioctl_func, 
fsockopt, 
sockopt_client, 
fopensocket, 
opensocket_client, 
fclosesocket, 
closesocket_client, 
seek_client, 
convfromnetwork, 
convtonetwork, 
convfromutf8, 
progress_client, 
ioctl_client, 
timeout, 
connecttimeout, 
accepttimeout, 
happy_eyeballs_timeout, 
server_response_timeout, 
tftp_blksize, 
filesize, 
low_speed_limit, 
low_speed_time, 
max_send_speed, 
max_recv_speed, 
set_resume_from, 
headers, 
proxyheaders, 
httppost, 
quote, 
postquote, 
prequote, 
source_quote, 
source_prequote, 
source_postquote, 
telnet_options, 
resolve, 
connect_to, 
timevalue, 
httpversion, 
general_ssl, 
dns_cache_timeout, 
buffer_size, 
upload_buffer_size, 
private_data, 
http200aliases, 
ipver, 
max_filesize, 
ssh_keyfunc, 
ssh_keyfunc_userp, 
ssh_auth_types, 
new_file_perms, 
new_directory_perms, 
allowed_protocols, 
redir_protocols, 
mail_rcpt, 
rtspversion, 
chunk_bgn, 
chunk_end, 
fnmatch, 
fnmatch_data, 
gssapi_delegation, 
tcp_keepidle, 
tcp_keepintvl, 
maxconnects, 
expect_100_timeout, 
stream_depends_on, 
stream_dependents, 
resolver_start, 
resolver_start_client, 
ssl, 
proxy_ssl, 
mimepost, 
str, 
keep_post, 
localportrange, 
is_fread_set, 
is_fwrite_set, 
timecondition, 
httpreq, 
proxytype, 
ftp_filemethod, 
ftp_create_missing_dirs, 
use_netrc, 
use_ssl, 
ftpsslauth, 
ftp_ccc, 
scope_id, 
rtspreq, 
stream_weight, 
localport, 
free_referer, 
tftp_no_options, 
sep_headers, 
cookiesession, 
crlf, 
strip_path_slash, 
ssh_compression, 
get_filetime, 
tunnel_thru_httpproxy, 
prefer_ascii, 
ftp_append, 
ftp_list_only, 
ftp_use_port, 
hide_progress, 
http_fail_on_error, 
http_keep_sending_on_error, 
http_follow_location, 
http_transfer_encoding, 
allow_auth_to_other_hosts, 
include_header, 
http_set_referer, 
http_auto_referer, 
opt_no_body, 
upload, 
verbose, 
krb, 
reuse_forbid, 
reuse_fresh, 
ftp_use_epsv, 
ftp_use_eprt, 
ftp_use_pret, 
no_signal, 
global_dns_cache, 
tcp_nodelay, 
ignorecl, 
ftp_skip_ip, 
connect_only, 
http_te_skip, 
http_ce_skip, 
proxy_transfer_mode, 
sasl_ir, 
wildcard_enabled, 
tcp_keepalive, 
tcp_fastopen, 
ssl_enable_npn, 
ssl_enable_alpn, 
path_as_is, 
pipewait, 
suppress_connect_headers, 
dns_shuffle_addresses, 
stream_depends_e, 
haproxyprotocol, 
abstract_unix_socket, 
disallow_username_in_url, 
consider reordering the fields or adding explicit padding members [clang-analyzer-optin.performance.Padding]
struct UserDefined {
       ^
2 warnings generated.

/project/git/Utilities/cmcurl/lib/urldata.h:1457:8: note: Excessive padding in 'struct UserDefined' (120 padding bytes, where 0 is optimal). Optimal fields order: err, debugdata, errorbuffer, proxyport, out, in_set, writeheader, rtp_out, use_port, httpauth, proxyauth, socks5auth, followlocation, maxredirs, postfields, seek_func, postfieldsize, fwrite_func, fwrite_header, fwrite_rtp, fread_func_set, fprogress, fxferinfo, fdebug, ioctl_func, fsockopt, sockopt_client, fopensocket, opensocket_client, fclosesocket, closesocket_client, seek_client, convfromnetwork, convtonetwork, convfromutf8, progress_client, ioctl_client, timeout, connecttimeout, accepttimeout, happy_eyeballs_timeout, server_response_timeout, tftp_blksize, filesize, low_speed_limit, low_speed_time, max_send_speed, max_recv_speed, set_resume_from, headers, proxyheaders, httppost, quote, postquote, prequote, source_quote, source_prequote, source_postquote, telnet_options, resolve, connect_to, timevalue, httpversion, general_ssl, dns_cache_timeout, buffer_size, upload_buffer_size, private_data, http200aliases, ipver, max_filesize, ssh_keyfunc, ssh_keyfunc_userp, ssh_auth_types, new_file_perms, new_directory_perms, allowed_protocols, redir_protocols, mail_rcpt, rtspversion, chunk_bgn, chunk_end, fnmatch, fnmatch_data, gssapi_delegation, tcp_keepidle, tcp_keepintvl, maxconnects, expect_100_timeout, stream_depends_on, stream_dependents, resolver_start, resolver_start_client, ssl, proxy_ssl, mimepost, str, keep_post, localportrange, is_fread_set, is_fwrite_set, timecondition, httpreq, proxytype, ftp_filemethod, ftp_create_missing_dirs, use_netrc, use_ssl, ftpsslauth, ftp_ccc, scope_id, rtspreq, stream_weight, localport, free_referer, tftp_no_options, sep_headers, cookiesession, crlf, strip_path_slash, ssh_compression, get_filetime, tunnel_thru_httpproxy, prefer_ascii, ftp_append, ftp_list_only, ftp_use_port, hide_progress, http_fail_on_error, http_keep_sending_on_error, http_follow_location, http_transfer_encoding, allow_auth_to_other_hosts, include_header, http_set_referer, http_auto_referer, opt_no_body, upload, verbose, krb, reuse_forbid, reuse_fresh, ftp_use_epsv, ftp_use_eprt, ftp_use_pret, no_signal, global_dns_cache, tcp_nodelay, ignorecl, ftp_skip_ip, connect_only, http_te_skip, http_ce_skip, proxy_transfer_mode, sasl_ir, wildcard_enabled, tcp_keepalive, tcp_fastopen, ssl_enable_npn, ssl_enable_alpn, path_as_is, pipewait, suppress_connect_headers, dns_shuffle_addresses, stream_depends_e, haproxyprotocol, abstract_unix_socket, disallow_username_in_url, consider reordering the fields or adding explicit padding members

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpjTYAye.yaml -p=/project/git /project/git/Utilities/cmcurl/lib/vauth/spnego_sspi.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpeVaSgU.yaml -p=/project/git /project/git/Utilities/cmcurl/lib/vtls/openssl.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmppqjT_T.yaml -p=/project/git /project/git/Utilities/cmcurl/lib/vtls/gtls.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpFJbzZL.yaml -p=/project/git /project/git/Utilities/cmcurl/lib/vtls/nss.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpDazjOP.yaml -p=/project/git /project/git/Utilities/cmcurl/lib/vtls/polarssl.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmp1VvQAz.yaml -p=/project/git /project/git/Utilities/cmcurl/lib/vtls/polarssl_threadlock.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpegiEBJ.yaml -p=/project/git /project/git/Utilities/cmcurl/lib/vtls/axtls.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmp4cYJjO.yaml -p=/project/git /project/git/Utilities/cmcurl/lib/vtls/cyassl.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpxmh6g0.yaml -p=/project/git /project/git/Utilities/cmcurl/lib/vtls/vtls.c
/project/git/Utilities/cmcurl/lib/urldata.h:1209:8: warning: Excessive padding in 'struct UrlState' (61 padding bytes, where 5 is optimal). 
Optimal fields order: 
conn_cache, 
lastconnect, 
headerbuff, 
headersize, 
buffer, 
ulbuf, 
current_speed, 
first_host, 
session, 
sessionage, 
scratch, 
prev_signal, 
resolver, 
most_recent_ftp_entrypath, 
crlf_conversions, 
pathbuffer, 
path, 
range, 
resume_from, 
rtsp_next_client_CSeq, 
rtsp_next_server_CSeq, 
rtsp_CSeq_recv, 
infilesize, 
drain, 
fread_func, 
in, 
stream_depends_on, 
keeps_speed, 
expiretime, 
authhost, 
authproxy, 
timeoutlist, 
timenode, 
digest, 
proxydigest, 
tempwrite, 
expires, 
first_remote_port, 
tempcount, 
os_errno, 
httpversion, 
stream_weight, 
multi_owned_by_easy, 
this_is_a_follow, 
refused_stream, 
errorbuf, 
allow_port, 
authproblem, 
ftp_trying_alternative, 
wildcardmatch, 
expect100header, 
prev_block_had_trailing_cr, 
slash_removed, 
use_range, 
rangestringalloc, 
done, 
stream_depends_e, 
consider reordering the fields or adding explicit padding members [clang-analyzer-optin.performance.Padding]
struct UrlState {
       ^
/project/git/Utilities/cmcurl/lib/urldata.h:1209:8: note: Excessive padding in 'struct UrlState' (61 padding bytes, where 5 is optimal). Optimal fields order: conn_cache, lastconnect, headerbuff, headersize, buffer, ulbuf, current_speed, first_host, session, sessionage, scratch, prev_signal, resolver, most_recent_ftp_entrypath, crlf_conversions, pathbuffer, path, range, resume_from, rtsp_next_client_CSeq, rtsp_next_server_CSeq, rtsp_CSeq_recv, infilesize, drain, fread_func, in, stream_depends_on, keeps_speed, expiretime, authhost, authproxy, timeoutlist, timenode, digest, proxydigest, tempwrite, expires, first_remote_port, tempcount, os_errno, httpversion, stream_weight, multi_owned_by_easy, this_is_a_follow, refused_stream, errorbuf, allow_port, authproblem, ftp_trying_alternative, wildcardmatch, expect100header, prev_block_had_trailing_cr, slash_removed, use_range, rangestringalloc, done, stream_depends_e, consider reordering the fields or adding explicit padding members
/project/git/Utilities/cmcurl/lib/urldata.h:1457:8: warning: Excessive padding in 'struct UserDefined' (120 padding bytes, where 0 is optimal). 
Optimal fields order: 
err, 
debugdata, 
errorbuffer, 
proxyport, 
out, 
in_set, 
writeheader, 
rtp_out, 
use_port, 
httpauth, 
proxyauth, 
socks5auth, 
followlocation, 
maxredirs, 
postfields, 
seek_func, 
postfieldsize, 
fwrite_func, 
fwrite_header, 
fwrite_rtp, 
fread_func_set, 
fprogress, 
fxferinfo, 
fdebug, 
ioctl_func, 
fsockopt, 
sockopt_client, 
fopensocket, 
opensocket_client, 
fclosesocket, 
closesocket_client, 
seek_client, 
convfromnetwork, 
convtonetwork, 
convfromutf8, 
progress_client, 
ioctl_client, 
timeout, 
connecttimeout, 
accepttimeout, 
happy_eyeballs_timeout, 
server_response_timeout, 
tftp_blksize, 
filesize, 
low_speed_limit, 
low_speed_time, 
max_send_speed, 
max_recv_speed, 
set_resume_from, 
headers, 
proxyheaders, 
httppost, 
quote, 
postquote, 
prequote, 
source_quote, 
source_prequote, 
source_postquote, 
telnet_options, 
resolve, 
connect_to, 
timevalue, 
httpversion, 
general_ssl, 
dns_cache_timeout, 
buffer_size, 
upload_buffer_size, 
private_data, 
http200aliases, 
ipver, 
max_filesize, 
ssh_keyfunc, 
ssh_keyfunc_userp, 
ssh_auth_types, 
new_file_perms, 
new_directory_perms, 
allowed_protocols, 
redir_protocols, 
mail_rcpt, 
rtspversion, 
chunk_bgn, 
chunk_end, 
fnmatch, 
fnmatch_data, 
gssapi_delegation, 
tcp_keepidle, 
tcp_keepintvl, 
maxconnects, 
expect_100_timeout, 
stream_depends_on, 
stream_dependents, 
resolver_start, 
resolver_start_client, 
ssl, 
proxy_ssl, 
mimepost, 
str, 
keep_post, 
localportrange, 
is_fread_set, 
is_fwrite_set, 
timecondition, 
httpreq, 
proxytype, 
ftp_filemethod, 
ftp_create_missing_dirs, 
use_netrc, 
use_ssl, 
ftpsslauth, 
ftp_ccc, 
scope_id, 
rtspreq, 
stream_weight, 
localport, 
free_referer, 
tftp_no_options, 
sep_headers, 
cookiesession, 
crlf, 
strip_path_slash, 
ssh_compression, 
get_filetime, 
tunnel_thru_httpproxy, 
prefer_ascii, 
ftp_append, 
ftp_list_only, 
ftp_use_port, 
hide_progress, 
http_fail_on_error, 
http_keep_sending_on_error, 
http_follow_location, 
http_transfer_encoding, 
allow_auth_to_other_hosts, 
include_header, 
http_set_referer, 
http_auto_referer, 
opt_no_body, 
upload, 
verbose, 
krb, 
reuse_forbid, 
reuse_fresh, 
ftp_use_epsv, 
ftp_use_eprt, 
ftp_use_pret, 
no_signal, 
global_dns_cache, 
tcp_nodelay, 
ignorecl, 
ftp_skip_ip, 
connect_only, 
http_te_skip, 
http_ce_skip, 
proxy_transfer_mode, 
sasl_ir, 
wildcard_enabled, 
tcp_keepalive, 
tcp_fastopen, 
ssl_enable_npn, 
ssl_enable_alpn, 
path_as_is, 
pipewait, 
suppress_connect_headers, 
dns_shuffle_addresses, 
stream_depends_e, 
haproxyprotocol, 
abstract_unix_socket, 
disallow_username_in_url, 
consider reordering the fields or adding explicit padding members [clang-analyzer-optin.performance.Padding]
struct UserDefined {
       ^
2 warnings generated.

/project/git/Utilities/cmcurl/lib/urldata.h:1457:8: note: Excessive padding in 'struct UserDefined' (120 padding bytes, where 0 is optimal). Optimal fields order: err, debugdata, errorbuffer, proxyport, out, in_set, writeheader, rtp_out, use_port, httpauth, proxyauth, socks5auth, followlocation, maxredirs, postfields, seek_func, postfieldsize, fwrite_func, fwrite_header, fwrite_rtp, fread_func_set, fprogress, fxferinfo, fdebug, ioctl_func, fsockopt, sockopt_client, fopensocket, opensocket_client, fclosesocket, closesocket_client, seek_client, convfromnetwork, convtonetwork, convfromutf8, progress_client, ioctl_client, timeout, connecttimeout, accepttimeout, happy_eyeballs_timeout, server_response_timeout, tftp_blksize, filesize, low_speed_limit, low_speed_time, max_send_speed, max_recv_speed, set_resume_from, headers, proxyheaders, httppost, quote, postquote, prequote, source_quote, source_prequote, source_postquote, telnet_options, resolve, connect_to, timevalue, httpversion, general_ssl, dns_cache_timeout, buffer_size, upload_buffer_size, private_data, http200aliases, ipver, max_filesize, ssh_keyfunc, ssh_keyfunc_userp, ssh_auth_types, new_file_perms, new_directory_perms, allowed_protocols, redir_protocols, mail_rcpt, rtspversion, chunk_bgn, chunk_end, fnmatch, fnmatch_data, gssapi_delegation, tcp_keepidle, tcp_keepintvl, maxconnects, expect_100_timeout, stream_depends_on, stream_dependents, resolver_start, resolver_start_client, ssl, proxy_ssl, mimepost, str, keep_post, localportrange, is_fread_set, is_fwrite_set, timecondition, httpreq, proxytype, ftp_filemethod, ftp_create_missing_dirs, use_netrc, use_ssl, ftpsslauth, ftp_ccc, scope_id, rtspreq, stream_weight, localport, free_referer, tftp_no_options, sep_headers, cookiesession, crlf, strip_path_slash, ssh_compression, get_filetime, tunnel_thru_httpproxy, prefer_ascii, ftp_append, ftp_list_only, ftp_use_port, hide_progress, http_fail_on_error, http_keep_sending_on_error, http_follow_location, http_transfer_encoding, allow_auth_to_other_hosts, include_header, http_set_referer, http_auto_referer, opt_no_body, upload, verbose, krb, reuse_forbid, reuse_fresh, ftp_use_epsv, ftp_use_eprt, ftp_use_pret, no_signal, global_dns_cache, tcp_nodelay, ignorecl, ftp_skip_ip, connect_only, http_te_skip, http_ce_skip, proxy_transfer_mode, sasl_ir, wildcard_enabled, tcp_keepalive, tcp_fastopen, ssl_enable_npn, ssl_enable_alpn, path_as_is, pipewait, suppress_connect_headers, dns_shuffle_addresses, stream_depends_e, haproxyprotocol, abstract_unix_socket, disallow_username_in_url, consider reordering the fields or adding explicit padding members

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpQLoV64.yaml -p=/project/git /project/git/Utilities/cmcurl/lib/vtls/schannel.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmp5ii4To.yaml -p=/project/git /project/git/Utilities/cmcurl/lib/parsedate.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmp_XVmLk.yaml -p=/project/git /project/git/Utilities/cmcurl/lib/vtls/schannel_verify.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpZV83ub.yaml -p=/project/git /project/git/Utilities/cmcurl/lib/vtls/darwinssl.c
/project/git/Utilities/cmcurl/lib/urldata.h:1209:8: warning: Excessive padding in 'struct UrlState' (61 padding bytes, where 5 is optimal). 
Optimal fields order: 
conn_cache, 
lastconnect, 
headerbuff, 
headersize, 
buffer, 
ulbuf, 
current_speed, 
first_host, 
session, 
sessionage, 
scratch, 
prev_signal, 
resolver, 
most_recent_ftp_entrypath, 
crlf_conversions, 
pathbuffer, 
path, 
range, 
resume_from, 
rtsp_next_client_CSeq, 
rtsp_next_server_CSeq, 
rtsp_CSeq_recv, 
infilesize, 
drain, 
fread_func, 
in, 
stream_depends_on, 
keeps_speed, 
expiretime, 
authhost, 
authproxy, 
timeoutlist, 
timenode, 
digest, 
proxydigest, 
tempwrite, 
expires, 
first_remote_port, 
tempcount, 
os_errno, 
httpversion, 
stream_weight, 
multi_owned_by_easy, 
this_is_a_follow, 
refused_stream, 
errorbuf, 
allow_port, 
authproblem, 
ftp_trying_alternative, 
wildcardmatch, 
expect100header, 
prev_block_had_trailing_cr, 
slash_removed, 
use_range, 
rangestringalloc, 
done, 
stream_depends_e, 
consider reordering the fields or adding explicit padding members [clang-analyzer-optin.performance.Padding]
struct UrlState {
       ^
/project/git/Utilities/cmcurl/lib/urldata.h:1209:8: note: Excessive padding in 'struct UrlState' (61 padding bytes, where 5 is optimal). Optimal fields order: conn_cache, lastconnect, headerbuff, headersize, buffer, ulbuf, current_speed, first_host, session, sessionage, scratch, prev_signal, resolver, most_recent_ftp_entrypath, crlf_conversions, pathbuffer, path, range, resume_from, rtsp_next_client_CSeq, rtsp_next_server_CSeq, rtsp_CSeq_recv, infilesize, drain, fread_func, in, stream_depends_on, keeps_speed, expiretime, authhost, authproxy, timeoutlist, timenode, digest, proxydigest, tempwrite, expires, first_remote_port, tempcount, os_errno, httpversion, stream_weight, multi_owned_by_easy, this_is_a_follow, refused_stream, errorbuf, allow_port, authproblem, ftp_trying_alternative, wildcardmatch, expect100header, prev_block_had_trailing_cr, slash_removed, use_range, rangestringalloc, done, stream_depends_e, consider reordering the fields or adding explicit padding members
/project/git/Utilities/cmcurl/lib/urldata.h:1457:8: warning: Excessive padding in 'struct UserDefined' (120 padding bytes, where 0 is optimal). 
Optimal fields order: 
err, 
debugdata, 
errorbuffer, 
proxyport, 
out, 
in_set, 
writeheader, 
rtp_out, 
use_port, 
httpauth, 
proxyauth, 
socks5auth, 
followlocation, 
maxredirs, 
postfields, 
seek_func, 
postfieldsize, 
fwrite_func, 
fwrite_header, 
fwrite_rtp, 
fread_func_set, 
fprogress, 
fxferinfo, 
fdebug, 
ioctl_func, 
fsockopt, 
sockopt_client, 
fopensocket, 
opensocket_client, 
fclosesocket, 
closesocket_client, 
seek_client, 
convfromnetwork, 
convtonetwork, 
convfromutf8, 
progress_client, 
ioctl_client, 
timeout, 
connecttimeout, 
accepttimeout, 
happy_eyeballs_timeout, 
server_response_timeout, 
tftp_blksize, 
filesize, 
low_speed_limit, 
low_speed_time, 
max_send_speed, 
max_recv_speed, 
set_resume_from, 
headers, 
proxyheaders, 
httppost, 
quote, 
postquote, 
prequote, 
source_quote, 
source_prequote, 
source_postquote, 
telnet_options, 
resolve, 
connect_to, 
timevalue, 
httpversion, 
general_ssl, 
dns_cache_timeout, 
buffer_size, 
upload_buffer_size, 
private_data, 
http200aliases, 
ipver, 
max_filesize, 
ssh_keyfunc, 
ssh_keyfunc_userp, 
ssh_auth_types, 
new_file_perms, 
new_directory_perms, 
allowed_protocols, 
redir_protocols, 
mail_rcpt, 
rtspversion, 
chunk_bgn, 
chunk_end, 
fnmatch, 
fnmatch_data, 
gssapi_delegation, 
tcp_keepidle, 
tcp_keepintvl, 
maxconnects, 
expect_100_timeout, 
stream_depends_on, 
stream_dependents, 
resolver_start, 
resolver_start_client, 
ssl, 
proxy_ssl, 
mimepost, 
str, 
keep_post, 
localportrange, 
is_fread_set, 
is_fwrite_set, 
timecondition, 
httpreq, 
proxytype, 
ftp_filemethod, 
ftp_create_missing_dirs, 
use_netrc, 
use_ssl, 
ftpsslauth, 
ftp_ccc, 
scope_id, 
rtspreq, 
stream_weight, 
localport, 
free_referer, 
tftp_no_options, 
sep_headers, 
cookiesession, 
crlf, 
strip_path_slash, 
ssh_compression, 
get_filetime, 
tunnel_thru_httpproxy, 
prefer_ascii, 
ftp_append, 
ftp_list_only, 
ftp_use_port, 
hide_progress, 
http_fail_on_error, 
http_keep_sending_on_error, 
http_follow_location, 
http_transfer_encoding, 
allow_auth_to_other_hosts, 
include_header, 
http_set_referer, 
http_auto_referer, 
opt_no_body, 
upload, 
verbose, 
krb, 
reuse_forbid, 
reuse_fresh, 
ftp_use_epsv, 
ftp_use_eprt, 
ftp_use_pret, 
no_signal, 
global_dns_cache, 
tcp_nodelay, 
ignorecl, 
ftp_skip_ip, 
connect_only, 
http_te_skip, 
http_ce_skip, 
proxy_transfer_mode, 
sasl_ir, 
wildcard_enabled, 
tcp_keepalive, 
tcp_fastopen, 
ssl_enable_npn, 
ssl_enable_alpn, 
path_as_is, 
pipewait, 
suppress_connect_headers, 
dns_shuffle_addresses, 
stream_depends_e, 
haproxyprotocol, 
abstract_unix_socket, 
disallow_username_in_url, 
consider reordering the fields or adding explicit padding members [clang-analyzer-optin.performance.Padding]
struct UserDefined {
       ^
2 warnings generated.

/project/git/Utilities/cmcurl/lib/urldata.h:1457:8: note: Excessive padding in 'struct UserDefined' (120 padding bytes, where 0 is optimal). Optimal fields order: err, debugdata, errorbuffer, proxyport, out, in_set, writeheader, rtp_out, use_port, httpauth, proxyauth, socks5auth, followlocation, maxredirs, postfields, seek_func, postfieldsize, fwrite_func, fwrite_header, fwrite_rtp, fread_func_set, fprogress, fxferinfo, fdebug, ioctl_func, fsockopt, sockopt_client, fopensocket, opensocket_client, fclosesocket, closesocket_client, seek_client, convfromnetwork, convtonetwork, convfromutf8, progress_client, ioctl_client, timeout, connecttimeout, accepttimeout, happy_eyeballs_timeout, server_response_timeout, tftp_blksize, filesize, low_speed_limit, low_speed_time, max_send_speed, max_recv_speed, set_resume_from, headers, proxyheaders, httppost, quote, postquote, prequote, source_quote, source_prequote, source_postquote, telnet_options, resolve, connect_to, timevalue, httpversion, general_ssl, dns_cache_timeout, buffer_size, upload_buffer_size, private_data, http200aliases, ipver, max_filesize, ssh_keyfunc, ssh_keyfunc_userp, ssh_auth_types, new_file_perms, new_directory_perms, allowed_protocols, redir_protocols, mail_rcpt, rtspversion, chunk_bgn, chunk_end, fnmatch, fnmatch_data, gssapi_delegation, tcp_keepidle, tcp_keepintvl, maxconnects, expect_100_timeout, stream_depends_on, stream_dependents, resolver_start, resolver_start_client, ssl, proxy_ssl, mimepost, str, keep_post, localportrange, is_fread_set, is_fwrite_set, timecondition, httpreq, proxytype, ftp_filemethod, ftp_create_missing_dirs, use_netrc, use_ssl, ftpsslauth, ftp_ccc, scope_id, rtspreq, stream_weight, localport, free_referer, tftp_no_options, sep_headers, cookiesession, crlf, strip_path_slash, ssh_compression, get_filetime, tunnel_thru_httpproxy, prefer_ascii, ftp_append, ftp_list_only, ftp_use_port, hide_progress, http_fail_on_error, http_keep_sending_on_error, http_follow_location, http_transfer_encoding, allow_auth_to_other_hosts, include_header, http_set_referer, http_auto_referer, opt_no_body, upload, verbose, krb, reuse_forbid, reuse_fresh, ftp_use_epsv, ftp_use_eprt, ftp_use_pret, no_signal, global_dns_cache, tcp_nodelay, ignorecl, ftp_skip_ip, connect_only, http_te_skip, http_ce_skip, proxy_transfer_mode, sasl_ir, wildcard_enabled, tcp_keepalive, tcp_fastopen, ssl_enable_npn, ssl_enable_alpn, path_as_is, pipewait, suppress_connect_headers, dns_shuffle_addresses, stream_depends_e, haproxyprotocol, abstract_unix_socket, disallow_username_in_url, consider reordering the fields or adding explicit padding members

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmp1qq3Ft.yaml -p=/project/git /project/git/Utilities/cmexpat/lib/loadlibrary.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmp3z2Tt8.yaml -p=/project/git /project/git/Utilities/cmcurl/lib/vtls/gskit.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpLoAuVJ.yaml -p=/project/git /project/git/Utilities/cmcurl/lib/vtls/mbedtls.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpRVXfdI.yaml -p=/project/git /project/git/Utilities/cmexpat/lib/xmltok_impl.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpUBqxYh.yaml -p=/project/git /project/git/Utilities/cmexpat/lib/xmlrole.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpwCsgbJ.yaml -p=/project/git /project/git/Utilities/cmexpat/lib/xmltok_ns.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpvGNIlq.yaml -p=/project/git /project/git/Utilities/cmbzip2/crctable.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmp9zzGVX.yaml -p=/project/git /project/git/Utilities/cmbzip2/randtable.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpcUUAlh.yaml -p=/project/git /project/git/Utilities/cmcurl/lib/socks.c
/project/git/Utilities/cmcurl/lib/socks.c:237:9: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
        strcpy((char *)socksreq + packetsize, hostname);
        ^
/project/git/Utilities/cmcurl/lib/socks.c:237:9: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
/project/git/Utilities/cmcurl/lib/urldata.h:1209:8: warning: Excessive padding in 'struct UrlState' (61 padding bytes, where 5 is optimal). 
Optimal fields order: 
conn_cache, 
lastconnect, 
headerbuff, 
headersize, 
buffer, 
ulbuf, 
current_speed, 
first_host, 
session, 
sessionage, 
scratch, 
prev_signal, 
resolver, 
most_recent_ftp_entrypath, 
crlf_conversions, 
pathbuffer, 
path, 
range, 
resume_from, 
rtsp_next_client_CSeq, 
rtsp_next_server_CSeq, 
rtsp_CSeq_recv, 
infilesize, 
drain, 
fread_func, 
in, 
stream_depends_on, 
keeps_speed, 
expiretime, 
authhost, 
authproxy, 
timeoutlist, 
timenode, 
digest, 
proxydigest, 
tempwrite, 
expires, 
first_remote_port, 
tempcount, 
os_errno, 
httpversion, 
stream_weight, 
multi_owned_by_easy, 
this_is_a_follow, 
refused_stream, 
errorbuf, 
allow_port, 
authproblem, 
ftp_trying_alternative, 
wildcardmatch, 
expect100header, 
prev_block_had_trailing_cr, 
slash_removed, 
use_range, 
rangestringalloc, 
done, 
stream_depends_e, 
consider reordering the fields or adding explicit padding members [clang-analyzer-optin.performance.Padding]
struct UrlState {
       ^
/project/git/Utilities/cmcurl/lib/urldata.h:1209:8: note: Excessive padding in 'struct UrlState' (61 padding bytes, where 5 is optimal). Optimal fields order: conn_cache, lastconnect, headerbuff, headersize, buffer, ulbuf, current_speed, first_host, session, sessionage, scratch, prev_signal, resolver, most_recent_ftp_entrypath, crlf_conversions, pathbuffer, path, range, resume_from, rtsp_next_client_CSeq, rtsp_next_server_CSeq, rtsp_CSeq_recv, infilesize, drain, fread_func, in, stream_depends_on, keeps_speed, expiretime, authhost, authproxy, timeoutlist, timenode, digest, proxydigest, tempwrite, expires, first_remote_port, tempcount, os_errno, httpversion, stream_weight, multi_owned_by_easy, this_is_a_follow, refused_stream, errorbuf, allow_port, authproblem, ftp_trying_alternative, wildcardmatch, expect100header, prev_block_had_trailing_cr, slash_removed, use_range, rangestringalloc, done, stream_depends_e, consider reordering the fields or adding explicit padding members
/project/git/Utilities/cmcurl/lib/urldata.h:1457:8: warning: Excessive padding in 'struct UserDefined' (120 padding bytes, where 0 is optimal). 
Optimal fields order: 
err, 
debugdata, 
errorbuffer, 
proxyport, 
out, 
in_set, 
writeheader, 
rtp_out, 
use_port, 
httpauth, 
proxyauth, 
socks5auth, 
followlocation, 
maxredirs, 
postfields, 
seek_func, 
postfieldsize, 
fwrite_func, 
fwrite_header, 
fwrite_rtp, 
fread_func_set, 
fprogress, 
fxferinfo, 
fdebug, 
ioctl_func, 
fsockopt, 
sockopt_client, 
fopensocket, 
opensocket_client, 
fclosesocket, 
closesocket_client, 
seek_client, 
convfromnetwork, 
convtonetwork, 
convfromutf8, 
progress_client, 
ioctl_client, 
timeout, 
connecttimeout, 
accepttimeout, 
happy_eyeballs_timeout, 
server_response_timeout, 
tftp_blksize, 
filesize, 
low_speed_limit, 
low_speed_time, 
max_send_speed, 
max_recv_speed, 
set_resume_from, 
headers, 
proxyheaders, 
httppost, 
quote, 
postquote, 
prequote, 
source_quote, 
source_prequote, 
source_postquote, 
telnet_options, 
resolve, 
connect_to, 
timevalue, 
httpversion, 
general_ssl, 
dns_cache_timeout, 
buffer_size, 
upload_buffer_size, 
private_data, 
http200aliases, 
ipver, 
max_filesize, 
ssh_keyfunc, 
ssh_keyfunc_userp, 
ssh_auth_types, 
new_file_perms, 
new_directory_perms, 
allowed_protocols, 
redir_protocols, 
mail_rcpt, 
rtspversion, 
chunk_bgn, 
chunk_end, 
fnmatch, 
fnmatch_data, 
gssapi_delegation, 
tcp_keepidle, 
tcp_keepintvl, 
maxconnects, 
expect_100_timeout, 
stream_depends_on, 
stream_dependents, 
resolver_start, 
resolver_start_client, 
ssl, 
proxy_ssl, 
mimepost, 
str, 
keep_post, 
localportrange, 
is_fread_set, 
is_fwrite_set, 
timecondition, 
httpreq, 
proxytype, 
ftp_filemethod, 
ftp_create_missing_dirs, 
use_netrc, 
use_ssl, 
ftpsslauth, 
ftp_ccc, 
scope_id, 
rtspreq, 
stream_weight, 
localport, 
free_referer, 
tftp_no_options, 
sep_headers, 
cookiesession, 
crlf, 
strip_path_slash, 
ssh_compression, 
get_filetime, 
tunnel_thru_httpproxy, 
prefer_ascii, 
ftp_append, 
ftp_list_only, 
ftp_use_port, 
hide_progress, 
http_fail_on_error, 
http_keep_sending_on_error, 
http_follow_location, 
http_transfer_encoding, 
3 warnings generated.

allow_auth_to_other_hosts, 
include_header, 
http_set_referer, 
http_auto_referer, 
opt_no_body, 
upload, 
verbose, 
krb, 
reuse_forbid, 
reuse_fresh, 
ftp_use_epsv, 
ftp_use_eprt, 
ftp_use_pret, 
no_signal, 
global_dns_cache, 
tcp_nodelay, 
ignorecl, 
ftp_skip_ip, 
connect_only, 
http_te_skip, 
http_ce_skip, 
proxy_transfer_mode, 
sasl_ir, 
wildcard_enabled, 
tcp_keepalive, 
tcp_fastopen, 
ssl_enable_npn, 
ssl_enable_alpn, 
path_as_is, 
pipewait, 
suppress_connect_headers, 
dns_shuffle_addresses, 
stream_depends_e, 
haproxyprotocol, 
abstract_unix_socket, 
disallow_username_in_url, 
consider reordering the fields or adding explicit padding members [clang-analyzer-optin.performance.Padding]
struct UserDefined {
       ^
/project/git/Utilities/cmcurl/lib/urldata.h:1457:8: note: Excessive padding in 'struct UserDefined' (120 padding bytes, where 0 is optimal). Optimal fields order: err, debugdata, errorbuffer, proxyport, out, in_set, writeheader, rtp_out, use_port, httpauth, proxyauth, socks5auth, followlocation, maxredirs, postfields, seek_func, postfieldsize, fwrite_func, fwrite_header, fwrite_rtp, fread_func_set, fprogress, fxferinfo, fdebug, ioctl_func, fsockopt, sockopt_client, fopensocket, opensocket_client, fclosesocket, closesocket_client, seek_client, convfromnetwork, convtonetwork, convfromutf8, progress_client, ioctl_client, timeout, connecttimeout, accepttimeout, happy_eyeballs_timeout, server_response_timeout, tftp_blksize, filesize, low_speed_limit, low_speed_time, max_send_speed, max_recv_speed, set_resume_from, headers, proxyheaders, httppost, quote, postquote, prequote, source_quote, source_prequote, source_postquote, telnet_options, resolve, connect_to, timevalue, httpversion, general_ssl, dns_cache_timeout, buffer_size, upload_buffer_size, private_data, http200aliases, ipver, max_filesize, ssh_keyfunc, ssh_keyfunc_userp, ssh_auth_types, new_file_perms, new_directory_perms, allowed_protocols, redir_protocols, mail_rcpt, rtspversion, chunk_bgn, chunk_end, fnmatch, fnmatch_data, gssapi_delegation, tcp_keepidle, tcp_keepintvl, maxconnects, expect_100_timeout, stream_depends_on, stream_dependents, resolver_start, resolver_start_client, ssl, proxy_ssl, mimepost, str, keep_post, localportrange, is_fread_set, is_fwrite_set, timecondition, httpreq, proxytype, ftp_filemethod, ftp_create_missing_dirs, use_netrc, use_ssl, ftpsslauth, ftp_ccc, scope_id, rtspreq, stream_weight, localport, free_referer, tftp_no_options, sep_headers, cookiesession, crlf, strip_path_slash, ssh_compression, get_filetime, tunnel_thru_httpproxy, prefer_ascii, ftp_append, ftp_list_only, ftp_use_port, hide_progress, http_fail_on_error, http_keep_sending_on_error, http_follow_location, http_transfer_encoding, allow_auth_to_other_hosts, include_header, http_set_referer, http_auto_referer, opt_no_body, upload, verbose, krb, reuse_forbid, reuse_fresh, ftp_use_epsv, ftp_use_eprt, ftp_use_pret, no_signal, global_dns_cache, tcp_nodelay, ignorecl, ftp_skip_ip, connect_only, http_te_skip, http_ce_skip, proxy_transfer_mode, sasl_ir, wildcard_enabled, tcp_keepalive, tcp_fastopen, ssl_enable_npn, ssl_enable_alpn, path_as_is, pipewait, suppress_connect_headers, dns_shuffle_addresses, stream_depends_e, haproxyprotocol, abstract_unix_socket, disallow_username_in_url, consider reordering the fields or adding explicit padding members

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpg29hzh.yaml -p=/project/git /project/git/Utilities/cmcurl/lib/conncache.c
/project/git/Utilities/cmcurl/lib/urldata.h:1209:8: warning: Excessive padding in 'struct UrlState' (61 padding bytes, where 5 is optimal). 
Optimal fields order: 
conn_cache, 
lastconnect, 
headerbuff, 
headersize, 
buffer, 
ulbuf, 
current_speed, 
first_host, 
session, 
sessionage, 
scratch, 
prev_signal, 
resolver, 
most_recent_ftp_entrypath, 
crlf_conversions, 
pathbuffer, 
path, 
range, 
resume_from, 
rtsp_next_client_CSeq, 
rtsp_next_server_CSeq, 
rtsp_CSeq_recv, 
infilesize, 
drain, 
fread_func, 
in, 
stream_depends_on, 
keeps_speed, 
expiretime, 
authhost, 
authproxy, 
timeoutlist, 
timenode, 
digest, 
proxydigest, 
tempwrite, 
expires, 
first_remote_port, 
tempcount, 
os_errno, 
httpversion, 
stream_weight, 
multi_owned_by_easy, 
this_is_a_follow, 
refused_stream, 
errorbuf, 
allow_port, 
authproblem, 
ftp_trying_alternative, 
wildcardmatch, 
expect100header, 
prev_block_had_trailing_cr, 
slash_removed, 
use_range, 
rangestringalloc, 
done, 
stream_depends_e, 
consider reordering the fields or adding explicit padding members [clang-analyzer-optin.performance.Padding]
struct UrlState {
       ^
/project/git/Utilities/cmcurl/lib/urldata.h:1209:8: note: Excessive padding in 'struct UrlState' (61 padding bytes, where 5 is optimal). Optimal fields order: conn_cache, lastconnect, headerbuff, headersize, buffer, ulbuf, current_speed, first_host, session, sessionage, scratch, prev_signal, resolver, most_recent_ftp_entrypath, crlf_conversions, pathbuffer, path, range, resume_from, rtsp_next_client_CSeq, rtsp_next_server_CSeq, rtsp_CSeq_recv, infilesize, drain, fread_func, in, stream_depends_on, keeps_speed, expiretime, authhost, authproxy, timeoutlist, timenode, digest, proxydigest, tempwrite, expires, first_remote_port, tempcount, os_errno, httpversion, stream_weight, multi_owned_by_easy, this_is_a_follow, refused_stream, errorbuf, allow_port, authproblem, ftp_trying_alternative, wildcardmatch, expect100header, prev_block_had_trailing_cr, slash_removed, use_range, rangestringalloc, done, stream_depends_e, consider reordering the fields or adding explicit padding members
/project/git/Utilities/cmcurl/lib/urldata.h:1457:8: warning: Excessive padding in 'struct UserDefined' (120 padding bytes, where 0 is optimal). 
Optimal fields order: 
err, 
debugdata, 
errorbuffer, 
proxyport, 
out, 
in_set, 
writeheader, 
rtp_out, 
use_port, 
httpauth, 
proxyauth, 
socks5auth, 
followlocation, 
maxredirs, 
postfields, 
seek_func, 
postfieldsize, 
fwrite_func, 
fwrite_header, 
fwrite_rtp, 
fread_func_set, 
fprogress, 
fxferinfo, 
fdebug, 
ioctl_func, 
fsockopt, 
sockopt_client, 
fopensocket, 
opensocket_client, 
fclosesocket, 
closesocket_client, 
seek_client, 
convfromnetwork, 
convtonetwork, 
convfromutf8, 
progress_client, 
ioctl_client, 
timeout, 
connecttimeout, 
accepttimeout, 
happy_eyeballs_timeout, 
server_response_timeout, 
tftp_blksize, 
filesize, 
low_speed_limit, 
low_speed_time, 
max_send_speed, 
max_recv_speed, 
set_resume_from, 
headers, 
proxyheaders, 
httppost, 
quote, 
postquote, 
prequote, 
source_quote, 
source_prequote, 
source_postquote, 
telnet_options, 
resolve, 
connect_to, 
timevalue, 
httpversion, 
general_ssl, 
dns_cache_timeout, 
buffer_size, 
upload_buffer_size, 
private_data, 
http200aliases, 
ipver, 
max_filesize, 
ssh_keyfunc, 
ssh_keyfunc_userp, 
ssh_auth_types, 
new_file_perms, 
new_directory_perms, 
allowed_protocols, 
redir_protocols, 
mail_rcpt, 
rtspversion, 
chunk_bgn, 
chunk_end, 
fnmatch, 
fnmatch_data, 
gssapi_delegation, 
tcp_keepidle, 
tcp_keepintvl, 
maxconnects, 
expect_100_timeout, 
stream_depends_on, 
stream_dependents, 
resolver_start, 
resolver_start_client, 
ssl, 
proxy_ssl, 
mimepost, 
str, 
keep_post, 
localportrange, 
is_fread_set, 
is_fwrite_set, 
timecondition, 
httpreq, 
proxytype, 
ftp_filemethod, 
ftp_create_missing_dirs, 
use_netrc, 
use_ssl, 
ftpsslauth, 
ftp_ccc, 
scope_id, 
rtspreq, 
stream_weight, 
localport, 
free_referer, 
tftp_no_options, 
sep_headers, 
cookiesession, 
crlf, 
strip_path_slash, 
ssh_compression, 
get_filetime, 
tunnel_thru_httpproxy, 
prefer_ascii, 
ftp_append, 
ftp_list_only, 
ftp_use_port, 
hide_progress, 
http_fail_on_error, 
http_keep_sending_on_error, 
http_follow_location, 
http_transfer_encoding, 
allow_auth_to_other_hosts, 
include_header, 
http_set_referer, 
http_auto_referer, 
opt_no_body, 
upload, 
verbose, 
krb, 
reuse_forbid, 
reuse_fresh, 
ftp_use_epsv, 
ftp_use_eprt, 
ftp_use_pret, 
no_signal, 
global_dns_cache, 
tcp_nodelay, 
ignorecl, 
ftp_skip_ip, 
connect_only, 
http_te_skip, 
http_ce_skip, 
proxy_transfer_mode, 
sasl_ir, 
wildcard_enabled, 
tcp_keepalive, 
tcp_fastopen, 
2 warnings generated.

ssl_enable_npn, 
ssl_enable_alpn, 
path_as_is, 
pipewait, 
suppress_connect_headers, 
dns_shuffle_addresses, 
stream_depends_e, 
haproxyprotocol, 
abstract_unix_socket, 
disallow_username_in_url, 
consider reordering the fields or adding explicit padding members [clang-analyzer-optin.performance.Padding]
struct UserDefined {
       ^
/project/git/Utilities/cmcurl/lib/urldata.h:1457:8: note: Excessive padding in 'struct UserDefined' (120 padding bytes, where 0 is optimal). Optimal fields order: err, debugdata, errorbuffer, proxyport, out, in_set, writeheader, rtp_out, use_port, httpauth, proxyauth, socks5auth, followlocation, maxredirs, postfields, seek_func, postfieldsize, fwrite_func, fwrite_header, fwrite_rtp, fread_func_set, fprogress, fxferinfo, fdebug, ioctl_func, fsockopt, sockopt_client, fopensocket, opensocket_client, fclosesocket, closesocket_client, seek_client, convfromnetwork, convtonetwork, convfromutf8, progress_client, ioctl_client, timeout, connecttimeout, accepttimeout, happy_eyeballs_timeout, server_response_timeout, tftp_blksize, filesize, low_speed_limit, low_speed_time, max_send_speed, max_recv_speed, set_resume_from, headers, proxyheaders, httppost, quote, postquote, prequote, source_quote, source_prequote, source_postquote, telnet_options, resolve, connect_to, timevalue, httpversion, general_ssl, dns_cache_timeout, buffer_size, upload_buffer_size, private_data, http200aliases, ipver, max_filesize, ssh_keyfunc, ssh_keyfunc_userp, ssh_auth_types, new_file_perms, new_directory_perms, allowed_protocols, redir_protocols, mail_rcpt, rtspversion, chunk_bgn, chunk_end, fnmatch, fnmatch_data, gssapi_delegation, tcp_keepidle, tcp_keepintvl, maxconnects, expect_100_timeout, stream_depends_on, stream_dependents, resolver_start, resolver_start_client, ssl, proxy_ssl, mimepost, str, keep_post, localportrange, is_fread_set, is_fwrite_set, timecondition, httpreq, proxytype, ftp_filemethod, ftp_create_missing_dirs, use_netrc, use_ssl, ftpsslauth, ftp_ccc, scope_id, rtspreq, stream_weight, localport, free_referer, tftp_no_options, sep_headers, cookiesession, crlf, strip_path_slash, ssh_compression, get_filetime, tunnel_thru_httpproxy, prefer_ascii, ftp_append, ftp_list_only, ftp_use_port, hide_progress, http_fail_on_error, http_keep_sending_on_error, http_follow_location, http_transfer_encoding, allow_auth_to_other_hosts, include_header, http_set_referer, http_auto_referer, opt_no_body, upload, verbose, krb, reuse_forbid, reuse_fresh, ftp_use_epsv, ftp_use_eprt, ftp_use_pret, no_signal, global_dns_cache, tcp_nodelay, ignorecl, ftp_skip_ip, connect_only, http_te_skip, http_ce_skip, proxy_transfer_mode, sasl_ir, wildcard_enabled, tcp_keepalive, tcp_fastopen, ssl_enable_npn, ssl_enable_alpn, path_as_is, pipewait, suppress_connect_headers, dns_shuffle_addresses, stream_depends_e, haproxyprotocol, abstract_unix_socket, disallow_username_in_url, consider reordering the fields or adding explicit padding members

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpgo0uTH.yaml -p=/project/git /project/git/Utilities/cmliblzma/liblzma/check/check.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpnE28wN.yaml -p=/project/git /project/git/Utilities/cmbzip2/compress.c
/project/git/Utilities/cmbzip2/compress.c:170:17: warning: The left operand of '==' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]
      if (yy[0] == ll_i) { 
                ^
/project/git/Utilities/cmbzip2/compress.c:604:8: note: Assuming the condition is true
   if (s->nblock > 0) {
       ^
/project/git/Utilities/cmbzip2/compress.c:604:4: note: Taking true branch
   if (s->nblock > 0) {
   ^
/project/git/Utilities/cmbzip2/compress.c:609:11: note: Assuming the condition is false
      if (s->blockNo > 1) s->numZ = 0;
          ^
/project/git/Utilities/cmbzip2/compress.c:609:7: note: Taking false branch
      if (s->blockNo > 1) s->numZ = 0;
      ^
/project/git/Utilities/cmbzip2/compress.c:611:11: note: Assuming the condition is false
      if (s->verbosity >= 2)
          ^
/project/git/Utilities/cmbzip2/compress.c:611:7: note: Taking false branch
      if (s->verbosity >= 2)
      ^
/project/git/Utilities/cmbzip2/compress.c:622:8: note: Assuming the condition is false
   if (s->blockNo == 1) {
       ^
/project/git/Utilities/cmbzip2/compress.c:622:4: note: Taking false branch
   if (s->blockNo == 1) {
   ^
/project/git/Utilities/cmbzip2/compress.c:630:8: note: Assuming the condition is true
   if (s->nblock > 0) {
       ^
/project/git/Utilities/cmbzip2/compress.c:630:4: note: Taking true branch
   if (s->nblock > 0) {
   ^
/project/git/Utilities/cmbzip2/compress.c:651:7: note: Calling 'generateMTFValues'
      generateMTFValues ( s );
      ^
/project/git/Utilities/cmbzip2/compress.c:157:16: note: Assuming 'i' is > 'EOB'
   for (i = 0; i <= EOB; i++) s->mtfFreq[i] = 0;
               ^
/project/git/Utilities/cmbzip2/compress.c:157:4: note: Loop condition is false. Execution continues on line 159
   for (i = 0; i <= EOB; i++) s->mtfFreq[i] = 0;
   ^
/project/git/Utilities/cmbzip2/compress.c:161:16: note: Assuming the condition is false
   for (i = 0; i < s->nInUse; i++) yy[i] = (UChar) i;
               ^
/project/git/Utilities/cmbzip2/compress.c:161:4: note: Loop condition is false. Execution continues on line 163
   for (i = 0; i < s->nInUse; i++) yy[i] = (UChar) i;
   ^
/project/git/Utilities/cmbzip2/compress.c:163:16: note: Assuming the condition is true
   for (i = 0; i < s->nblock; i++) {
               ^
/project/git/Utilities/cmbzip2/compress.c:163:4: note: Loop condition is true.  Entering loop body
   for (i = 0; i < s->nblock; i++) {
   ^
/project/git/Utilities/cmbzip2/compress.c:166:21: note: Taking false branch
      j = ptr[i]-1; if (j < 0) j += s->nblock;
                    ^
/project/git/Utilities/cmbzip2/compress.c:170:17: note: The left operand of '==' is a garbage value
      if (yy[0] == ll_i) { 
                ^
/project/git/Utilities/cmbzip2/compress.c:193:19: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]
            rtmp  = yy[1];
                  ^
/project/git/Utilities/cmbzip2/compress.c:604:8: note: Assuming the condition is true
   if (s->nblock > 0) {
       ^
/project/git/Utilities/cmbzip2/compress.c:604:4: note: Taking true branch
   if (s->nblock > 0) {
   ^
/project/git/Utilities/cmbzip2/compress.c:609:11: note: Assuming the condition is false
      if (s->blockNo > 1) s->numZ = 0;
          ^
/project/git/Utilities/cmbzip2/compress.c:609:7: note: Taking false branch
      if (s->blockNo > 1) s->numZ = 0;
      ^
/project/git/Utilities/cmbzip2/compress.c:611:11: note: Assuming the condition is false
      if (s->verbosity >= 2)
          ^
/project/git/Utilities/cmbzip2/compress.c:611:7: note: Taking false branch
      if (s->verbosity >= 2)
      ^
/project/git/Utilities/cmbzip2/compress.c:622:8: note: Assuming the condition is false
   if (s->blockNo == 1) {
       ^
/project/git/Utilities/cmbzip2/compress.c:622:4: note: Taking false branch
   if (s->blockNo == 1) {
   ^
/project/git/Utilities/cmbzip2/compress.c:630:8: note: Assuming the condition is true
   if (s->nblock > 0) {
       ^
/project/git/Utilities/cmbzip2/compress.c:630:4: note: Taking true branch
   if (s->nblock > 0) {
   ^
/project/git/Utilities/cmbzip2/compress.c:651:7: note: Calling 'generateMTFValues'
      generateMTFValues ( s );
      ^
/project/git/Utilities/cmbzip2/compress.c:157:16: note: Assuming 'i' is <= 'EOB'
   for (i = 0; i <= EOB; i++) s->mtfFreq[i] = 0;
               ^
/project/git/Utilities/cmbzip2/compress.c:157:4: note: Loop condition is true.  Entering loop body
   for (i = 0; i <= EOB; i++) s->mtfFreq[i] = 0;
   ^
/project/git/Utilities/cmbzip2/compress.c:157:16: note: Assuming 'i' is <= 'EOB'
   for (i = 0; i <= EOB; i++) s->mtfFreq[i] = 0;
               ^
/project/git/Utilities/cmbzip2/compress.c:157:4: note: Loop condition is true.  Entering loop body
   for (i = 0; i <= EOB; i++) s->mtfFreq[i] = 0;
   ^
/project/git/Utilities/cmbzip2/compress.c:157:16: note: Assuming 'i' is <= 'EOB'
3 warnings generated.

   for (i = 0; i <= EOB; i++) s->mtfFreq[i] = 0;
               ^
/project/git/Utilities/cmbzip2/compress.c:157:4: note: Loop condition is true.  Entering loop body
   for (i = 0; i <= EOB; i++) s->mtfFreq[i] = 0;
   ^
/project/git/Utilities/cmbzip2/compress.c:157:16: note: Assuming 'i' is > 'EOB'
   for (i = 0; i <= EOB; i++) s->mtfFreq[i] = 0;
               ^
/project/git/Utilities/cmbzip2/compress.c:157:4: note: Loop condition is false. Execution continues on line 159
   for (i = 0; i <= EOB; i++) s->mtfFreq[i] = 0;
   ^
/project/git/Utilities/cmbzip2/compress.c:161:4: note: Loop condition is true.  Entering loop body
   for (i = 0; i < s->nInUse; i++) yy[i] = (UChar) i;
   ^
/project/git/Utilities/cmbzip2/compress.c:161:4: note: Loop condition is false. Execution continues on line 163
/project/git/Utilities/cmbzip2/compress.c:163:16: note: Assuming the condition is true
   for (i = 0; i < s->nblock; i++) {
               ^
/project/git/Utilities/cmbzip2/compress.c:163:4: note: Loop condition is true.  Entering loop body
   for (i = 0; i < s->nblock; i++) {
   ^
/project/git/Utilities/cmbzip2/compress.c:166:21: note: Taking false branch
      j = ptr[i]-1; if (j < 0) j += s->nblock;
                    ^
/project/git/Utilities/cmbzip2/compress.c:170:11: note: Assuming the condition is false
      if (yy[0] == ll_i) { 
          ^
/project/git/Utilities/cmbzip2/compress.c:170:7: note: Taking false branch
      if (yy[0] == ll_i) { 
      ^
/project/git/Utilities/cmbzip2/compress.c:174:10: note: Taking false branch
         if (zPend > 0) {
         ^
/project/git/Utilities/cmbzip2/compress.c:193:19: note: Assigned value is garbage or undefined
            rtmp  = yy[1];
                  ^
/project/git/Utilities/cmbzip2/compress.c:225:7: warning: Value stored to 'zPend' is never read [clang-analyzer-deadcode.DeadStores]
      zPend = 0;
      ^
/project/git/Utilities/cmbzip2/compress.c:225:7: note: Value stored to 'zPend' is never read

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpIOsi2M.yaml -p=/project/git /project/git/Utilities/cmliblzma/liblzma/check/crc32_fast.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpLF23wV.yaml -p=/project/git /project/git/Utilities/cmliblzma/liblzma/check/crc32_table.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmp3gH77T.yaml -p=/project/git /project/git/Utilities/cmliblzma/liblzma/check/crc64_table.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpykAAuQ.yaml -p=/project/git /project/git/Utilities/cmliblzma/liblzma/check/crc64_fast.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpNma9Jr.yaml -p=/project/git /project/git/Utilities/cmcurl/lib/pingpong.c
/project/git/Utilities/cmcurl/lib/urldata.h:1209:8: warning: Excessive padding in 'struct UrlState' (61 padding bytes, where 5 is optimal). 
Optimal fields order: 
conn_cache, 
lastconnect, 
headerbuff, 
headersize, 
buffer, 
ulbuf, 
current_speed, 
first_host, 
session, 
sessionage, 
scratch, 
prev_signal, 
resolver, 
most_recent_ftp_entrypath, 
crlf_conversions, 
pathbuffer, 
path, 
range, 
resume_from, 
rtsp_next_client_CSeq, 
rtsp_next_server_CSeq, 
rtsp_CSeq_recv, 
infilesize, 
drain, 
fread_func, 
in, 
stream_depends_on, 
keeps_speed, 
expiretime, 
authhost, 
authproxy, 
timeoutlist, 
timenode, 
digest, 
proxydigest, 
tempwrite, 
expires, 
first_remote_port, 
tempcount, 
os_errno, 
httpversion, 
stream_weight, 
multi_owned_by_easy, 
this_is_a_follow, 
refused_stream, 
errorbuf, 
allow_port, 
authproblem, 
ftp_trying_alternative, 
wildcardmatch, 
expect100header, 
prev_block_had_trailing_cr, 
slash_removed, 
use_range, 
rangestringalloc, 
done, 
stream_depends_e, 
consider reordering the fields or adding explicit padding members [clang-analyzer-optin.performance.Padding]
struct UrlState {
       ^
/project/git/Utilities/cmcurl/lib/urldata.h:1209:8: note: Excessive padding in 'struct UrlState' (61 padding bytes, where 5 is optimal). Optimal fields order: conn_cache, lastconnect, headerbuff, headersize, buffer, ulbuf, current_speed, first_host, session, sessionage, scratch, prev_signal, resolver, most_recent_ftp_entrypath, crlf_conversions, pathbuffer, path, range, resume_from, rtsp_next_client_CSeq, rtsp_next_server_CSeq, rtsp_CSeq_recv, infilesize, drain, fread_func, in, stream_depends_on, keeps_speed, expiretime, authhost, authproxy, timeoutlist, timenode, digest, proxydigest, tempwrite, expires, first_remote_port, tempcount, os_errno, httpversion, stream_weight, multi_owned_by_easy, this_is_a_follow, refused_stream, errorbuf, allow_port, authproblem, ftp_trying_alternative, wildcardmatch, expect100header, prev_block_had_trailing_cr, slash_removed, use_range, rangestringalloc, done, stream_depends_e, consider reordering the fields or adding explicit padding members
/project/git/Utilities/cmcurl/lib/urldata.h:1457:8: warning: Excessive padding in 'struct UserDefined' (120 padding bytes, where 0 is optimal). 
Optimal fields order: 
err, 
debugdata, 
errorbuffer, 
proxyport, 
out, 
in_set, 
writeheader, 
rtp_out, 
use_port, 
httpauth, 
proxyauth, 
socks5auth, 
followlocation, 
maxredirs, 
postfields, 
seek_func, 
postfieldsize, 
fwrite_func, 
fwrite_header, 
fwrite_rtp, 
fread_func_set, 
fprogress, 
fxferinfo, 
fdebug, 
ioctl_func, 
fsockopt, 
sockopt_client, 
fopensocket, 
opensocket_client, 
fclosesocket, 
closesocket_client, 
seek_client, 
convfromnetwork, 
convtonetwork, 
convfromutf8, 
progress_client, 
ioctl_client, 
timeout, 
connecttimeout, 
accepttimeout, 
happy_eyeballs_timeout, 
server_response_timeout, 
tftp_blksize, 
filesize, 
low_speed_limit, 
low_speed_time, 
max_send_speed, 
max_recv_speed, 
set_resume_from, 
headers, 
proxyheaders, 
httppost, 
quote, 
postquote, 
prequote, 
source_quote, 
source_prequote, 
source_postquote, 
telnet_options, 
resolve, 
connect_to, 
timevalue, 
httpversion, 
general_ssl, 
dns_cache_timeout, 
buffer_size, 
upload_buffer_size, 
private_data, 
http200aliases, 
ipver, 
max_filesize, 
ssh_keyfunc, 
ssh_keyfunc_userp, 
ssh_auth_types, 
new_file_perms, 
new_directory_perms, 
allowed_protocols, 
redir_protocols, 
mail_rcpt, 
rtspversion, 
chunk_bgn, 
chunk_end, 
fnmatch, 
fnmatch_data, 
gssapi_delegation, 
tcp_keepidle, 
tcp_keepintvl, 
maxconnects, 
expect_100_timeout, 
stream_depends_on, 
stream_dependents, 
resolver_start, 
resolver_start_client, 
ssl, 
proxy_ssl, 
mimepost, 
str, 
keep_post, 
localportrange, 
is_fread_set, 
is_fwrite_set, 
timecondition, 
httpreq, 
proxytype, 
ftp_filemethod, 
ftp_create_missing_dirs, 
use_netrc, 
use_ssl, 
ftpsslauth, 
ftp_ccc, 
scope_id, 
rtspreq, 
stream_weight, 
localport, 
free_referer, 
tftp_no_options, 
sep_headers, 
cookiesession, 
crlf, 
strip_path_slash, 
ssh_compression, 
get_filetime, 
tunnel_thru_httpproxy, 
prefer_ascii, 
ftp_append, 
ftp_list_only, 
ftp_use_port, 
hide_progress, 
http_fail_on_error, 
http_keep_sending_on_error, 
http_follow_location, 
http_transfer_encoding, 
allow_auth_to_other_hosts, 
include_header, 
http_set_referer, 
http_auto_referer, 
opt_no_body, 
upload, 
verbose, 
krb, 
reuse_forbid, 
reuse_fresh, 
ftp_use_epsv, 
ftp_use_eprt, 
ftp_use_pret, 
no_signal, 
global_dns_cache, 
tcp_nodelay, 
ignorecl, 
ftp_skip_ip, 
connect_only, 
http_te_skip, 
http_ce_skip, 
proxy_transfer_mode, 
sasl_ir, 
wildcard_enabled, 
tcp_keepalive, 
tcp_fastopen, 
ssl_enable_npn, 
ssl_enable_alpn, 
path_as_is, 
pipewait, 
suppress_connect_headers, 
dns_shuffle_addresses, 
stream_depends_e, 
haproxyprotocol, 
abstract_unix_socket, 
disallow_username_in_url, 
consider reordering the fields or adding explicit padding members [clang-analyzer-optin.performance.Padding]
struct UserDefined {
       ^
2 warnings generated.

/project/git/Utilities/cmcurl/lib/urldata.h:1457:8: note: Excessive padding in 'struct UserDefined' (120 padding bytes, where 0 is optimal). Optimal fields order: err, debugdata, errorbuffer, proxyport, out, in_set, writeheader, rtp_out, use_port, httpauth, proxyauth, socks5auth, followlocation, maxredirs, postfields, seek_func, postfieldsize, fwrite_func, fwrite_header, fwrite_rtp, fread_func_set, fprogress, fxferinfo, fdebug, ioctl_func, fsockopt, sockopt_client, fopensocket, opensocket_client, fclosesocket, closesocket_client, seek_client, convfromnetwork, convtonetwork, convfromutf8, progress_client, ioctl_client, timeout, connecttimeout, accepttimeout, happy_eyeballs_timeout, server_response_timeout, tftp_blksize, filesize, low_speed_limit, low_speed_time, max_send_speed, max_recv_speed, set_resume_from, headers, proxyheaders, httppost, quote, postquote, prequote, source_quote, source_prequote, source_postquote, telnet_options, resolve, connect_to, timevalue, httpversion, general_ssl, dns_cache_timeout, buffer_size, upload_buffer_size, private_data, http200aliases, ipver, max_filesize, ssh_keyfunc, ssh_keyfunc_userp, ssh_auth_types, new_file_perms, new_directory_perms, allowed_protocols, redir_protocols, mail_rcpt, rtspversion, chunk_bgn, chunk_end, fnmatch, fnmatch_data, gssapi_delegation, tcp_keepidle, tcp_keepintvl, maxconnects, expect_100_timeout, stream_depends_on, stream_dependents, resolver_start, resolver_start_client, ssl, proxy_ssl, mimepost, str, keep_post, localportrange, is_fread_set, is_fwrite_set, timecondition, httpreq, proxytype, ftp_filemethod, ftp_create_missing_dirs, use_netrc, use_ssl, ftpsslauth, ftp_ccc, scope_id, rtspreq, stream_weight, localport, free_referer, tftp_no_options, sep_headers, cookiesession, crlf, strip_path_slash, ssh_compression, get_filetime, tunnel_thru_httpproxy, prefer_ascii, ftp_append, ftp_list_only, ftp_use_port, hide_progress, http_fail_on_error, http_keep_sending_on_error, http_follow_location, http_transfer_encoding, allow_auth_to_other_hosts, include_header, http_set_referer, http_auto_referer, opt_no_body, upload, verbose, krb, reuse_forbid, reuse_fresh, ftp_use_epsv, ftp_use_eprt, ftp_use_pret, no_signal, global_dns_cache, tcp_nodelay, ignorecl, ftp_skip_ip, connect_only, http_te_skip, http_ce_skip, proxy_transfer_mode, sasl_ir, wildcard_enabled, tcp_keepalive, tcp_fastopen, ssl_enable_npn, ssl_enable_alpn, path_as_is, pipewait, suppress_connect_headers, dns_shuffle_addresses, stream_depends_e, haproxyprotocol, abstract_unix_socket, disallow_username_in_url, consider reordering the fields or adding explicit padding members

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpP9W5Go.yaml -p=/project/git /project/git/Utilities/cmliblzma/liblzma/common/alone_decoder.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpgKfvf4.yaml -p=/project/git /project/git/Utilities/cmliblzma/liblzma/common/alone_encoder.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmp4WvC2l.yaml -p=/project/git /project/git/Utilities/cmliblzma/liblzma/common/auto_decoder.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmp16Qoci.yaml -p=/project/git /project/git/Utilities/cmliblzma/liblzma/common/block_buffer_decoder.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpqXwa9m.yaml -p=/project/git /project/git/Utilities/cmbzip2/huffman.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpmRK2Cw.yaml -p=/project/git /project/git/Utilities/cmliblzma/liblzma/common/block_buffer_encoder.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpc4F1Ug.yaml -p=/project/git /project/git/Utilities/cmliblzma/liblzma/common/block_header_decoder.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmp7itbyL.yaml -p=/project/git /project/git/Utilities/cmliblzma/liblzma/common/block_encoder.c

2 warnings generated.

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpTvp3CU.yaml -p=/project/git /project/git/Utilities/cmliblzma/liblzma/common/block_header_encoder.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmp85QnFL.yaml -p=/project/git /project/git/Utilities/cmliblzma/liblzma/common/block_util.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmp4n8nKT.yaml -p=/project/git /project/git/Utilities/cmliblzma/liblzma/common/block_decoder.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpKoWOc5.yaml -p=/project/git /project/git/Utilities/cmliblzma/liblzma/common/easy_buffer_encoder.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpfucBuD.yaml -p=/project/git /project/git/Utilities/cmcurl/lib/http_proxy.c
/project/git/Utilities/cmcurl/lib/urldata.h:1209:8: warning: Excessive padding in 'struct UrlState' (61 padding bytes, where 5 is optimal). 
Optimal fields order: 
conn_cache, 
lastconnect, 
headerbuff, 
headersize, 
buffer, 
ulbuf, 
current_speed, 
first_host, 
session, 
sessionage, 
scratch, 
prev_signal, 
resolver, 
most_recent_ftp_entrypath, 
crlf_conversions, 
pathbuffer, 
path, 
range, 
resume_from, 
rtsp_next_client_CSeq, 
rtsp_next_server_CSeq, 
rtsp_CSeq_recv, 
infilesize, 
drain, 
fread_func, 
in, 
stream_depends_on, 
keeps_speed, 
expiretime, 
authhost, 
authproxy, 
timeoutlist, 
timenode, 
digest, 
proxydigest, 
tempwrite, 
expires, 
first_remote_port, 
tempcount, 
os_errno, 
httpversion, 
stream_weight, 
multi_owned_by_easy, 
this_is_a_follow, 
refused_stream, 
errorbuf, 
allow_port, 
authproblem, 
ftp_trying_alternative, 
wildcardmatch, 
expect100header, 
prev_block_had_trailing_cr, 
slash_removed, 
use_range, 
rangestringalloc, 
done, 
stream_depends_e, 
consider reordering the fields or adding explicit padding members [clang-analyzer-optin.performance.Padding]
struct UrlState {
       ^
/project/git/Utilities/cmcurl/lib/urldata.h:1209:8: note: Excessive padding in 'struct UrlState' (61 padding bytes, where 5 is optimal). Optimal fields order: conn_cache, lastconnect, headerbuff, headersize, buffer, ulbuf, current_speed, first_host, session, sessionage, scratch, prev_signal, resolver, most_recent_ftp_entrypath, crlf_conversions, pathbuffer, path, range, resume_from, rtsp_next_client_CSeq, rtsp_next_server_CSeq, rtsp_CSeq_recv, infilesize, drain, fread_func, in, stream_depends_on, keeps_speed, expiretime, authhost, authproxy, timeoutlist, timenode, digest, proxydigest, tempwrite, expires, first_remote_port, tempcount, os_errno, httpversion, stream_weight, multi_owned_by_easy, this_is_a_follow, refused_stream, errorbuf, allow_port, authproblem, ftp_trying_alternative, wildcardmatch, expect100header, prev_block_had_trailing_cr, slash_removed, use_range, rangestringalloc, done, stream_depends_e, consider reordering the fields or adding explicit padding members
/project/git/Utilities/cmcurl/lib/urldata.h:1457:8: warning: Excessive padding in 'struct UserDefined' (120 padding bytes, where 0 is optimal). 
Optimal fields order: 
err, 
debugdata, 
errorbuffer, 
proxyport, 
out, 
in_set, 
writeheader, 
rtp_out, 
use_port, 
httpauth, 
proxyauth, 
socks5auth, 
followlocation, 
maxredirs, 
postfields, 
seek_func, 
postfieldsize, 
fwrite_func, 
fwrite_header, 
fwrite_rtp, 
fread_func_set, 
fprogress, 
fxferinfo, 
fdebug, 
ioctl_func, 
fsockopt, 
sockopt_client, 
fopensocket, 
opensocket_client, 
fclosesocket, 
closesocket_client, 
seek_client, 
convfromnetwork, 
convtonetwork, 
convfromutf8, 
progress_client, 
ioctl_client, 
timeout, 
connecttimeout, 
accepttimeout, 
happy_eyeballs_timeout, 
server_response_timeout, 
tftp_blksize, 
filesize, 
low_speed_limit, 
low_speed_time, 
max_send_speed, 
max_recv_speed, 
set_resume_from, 
headers, 
proxyheaders, 
httppost, 
quote, 
postquote, 
prequote, 
source_quote, 
source_prequote, 
source_postquote, 
telnet_options, 
resolve, 
connect_to, 
timevalue, 
httpversion, 
general_ssl, 
dns_cache_timeout, 
buffer_size, 
upload_buffer_size, 
private_data, 
http200aliases, 
ipver, 
max_filesize, 
ssh_keyfunc, 
ssh_keyfunc_userp, 
ssh_auth_types, 
new_file_perms, 
new_directory_perms, 
allowed_protocols, 
redir_protocols, 
mail_rcpt, 
rtspversion, 
chunk_bgn, 
chunk_end, 
fnmatch, 
fnmatch_data, 
gssapi_delegation, 
tcp_keepidle, 
tcp_keepintvl, 
maxconnects, 
expect_100_timeout, 
stream_depends_on, 
stream_dependents, 
resolver_start, 
resolver_start_client, 
ssl, 
proxy_ssl, 
mimepost, 
str, 
keep_post, 
localportrange, 
is_fread_set, 
is_fwrite_set, 
timecondition, 
httpreq, 
proxytype, 
ftp_filemethod, 
ftp_create_missing_dirs, 
use_netrc, 
use_ssl, 
ftpsslauth, 
ftp_ccc, 
scope_id, 
rtspreq, 
stream_weight, 
localport, 
free_referer, 
tftp_no_options, 
sep_headers, 
cookiesession, 
crlf, 
strip_path_slash, 
ssh_compression, 
get_filetime, 
tunnel_thru_httpproxy, 
prefer_ascii, 
ftp_append, 
ftp_list_only, 
ftp_use_port, 
hide_progress, 
http_fail_on_error, 
http_keep_sending_on_error, 
http_follow_location, 
http_transfer_encoding, 
allow_auth_to_other_hosts, 
include_header, 
http_set_referer, 
http_auto_referer, 
opt_no_body, 
upload, 
verbose, 
krb, 
reuse_forbid, 
reuse_fresh, 
ftp_use_epsv, 
ftp_use_eprt, 
ftp_use_pret, 
no_signal, 
global_dns_cache, 
tcp_nodelay, 
ignorecl, 
ftp_skip_ip, 
connect_only, 
http_te_skip, 
http_ce_skip, 
proxy_transfer_mode, 
sasl_ir, 
wildcard_enabled, 
tcp_keepalive, 
tcp_fastopen, 
ssl_enable_npn, 
ssl_enable_alpn, 
path_as_is, 
pipewait, 
suppress_connect_headers, 
dns_shuffle_addresses, 
stream_depends_e, 
haproxyprotocol, 
abstract_unix_socket, 
disallow_username_in_url, 
consider reordering the fields or adding explicit padding members [clang-analyzer-optin.performance.Padding]
struct UserDefined {
       ^
/project/git/Utilities/cmcurl/lib/urldata.h:1457:8: note: Excessive padding in 'struct UserDefined' (120 padding bytes, where 0 is optimal). Optimal fields order: err, debugdata, errorbuffer, proxyport, out, in_set, writeheader, rtp_out, use_port, httpauth, proxyauth, socks5auth, followlocation, maxredirs, postfields, seek_func, postfieldsize, fwrite_func, fwrite_header, fwrite_rtp, fread_func_set, fprogress, fxferinfo, fdebug, ioctl_func, fsockopt, sockopt_client, fopensocket, opensocket_client, fclosesocket, closesocket_client, seek_client, convfromnetwork, convtonetwork, convfromutf8, progress_client, ioctl_client, timeout, connecttimeout, accepttimeout, happy_eyeballs_timeout, server_response_timeout, tftp_blksize, filesize, low_speed_limit, low_speed_time, max_send_speed, max_recv_speed, set_resume_from, headers, proxyheaders, httppost, quote, postquote, prequote, source_quote, source_prequote, source_postquote, telnet_options, resolve, connect_to, timevalue, httpversion, general_ssl, dns_cache_timeout, buffer_size, upload_buffer_size, private_data, http200aliases, ipver, max_filesize, ssh_keyfunc, ssh_keyfunc_userp, ssh_auth_types, new_file_perms, new_directory_perms, allowed_protocols, redir_protocols, mail_rcpt, rtspversion, chunk_bgn, chunk_end, fnmatch, fnmatch_data, gssapi_delegation, tcp_keepidle, tcp_keepintvl, maxconnects, expect_100_timeout, stream_depends_on, stream_dependents, resolver_start, resolver_start_client, ssl, proxy_ssl, mimepost, str, keep_post, localportrange, is_fread_set, is_fwrite_set, timecondition, httpreq, proxytype, ftp_filemethod, ftp_create_missing_dirs, use_netrc, use_ssl, ftpsslauth, ftp_ccc, scope_id, rtspreq, stream_weight, localport, free_referer, tftp_no_options, sep_headers, cookiesession, crlf, strip_path_slash, ssh_compression, get_filetime, tunnel_thru_httpproxy, prefer_ascii, ftp_append, ftp_list_only, ftp_use_port, hide_progress, http_fail_on_error, http_keep_sending_on_error, http_follow_location, http_transfer_encoding, allow_auth_to_other_hosts, include_header, http_set_referer, http_auto_referer, opt_no_body, upload, verbose, krb, reuse_forbid, reuse_fresh, ftp_use_epsv, ftp_use_eprt, ftp_use_pret, no_signal, global_dns_cache, tcp_nodelay, ignorecl, ftp_skip_ip, connect_only, http_te_skip, http_ce_skip, proxy_transfer_mode, sasl_ir, wildcard_enabled, tcp_keepalive, tcp_fastopen, ssl_enable_npn, ssl_enable_alpn, path_as_is, pipewait, suppress_connect_headers, dns_shuffle_addresses, stream_depends_e, haproxyprotocol, abstract_unix_socket, disallow_username_in_url, consider reordering the fields or adding explicit padding members

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmp34Q_aY.yaml -p=/project/git /project/git/Utilities/cmliblzma/liblzma/common/easy_decoder_memusage.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpOfG650.yaml -p=/project/git /project/git/Utilities/cmliblzma/liblzma/common/easy_encoder.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpaDwuIU.yaml -p=/project/git /project/git/Utilities/cmliblzma/liblzma/common/easy_encoder_memusage.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpcIilfp.yaml -p=/project/git /project/git/Utilities/cmliblzma/liblzma/common/easy_preset.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpANsQ1m.yaml -p=/project/git /project/git/Utilities/cmliblzma/liblzma/common/filter_buffer_decoder.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpY9kzZ7.yaml -p=/project/git /project/git/Utilities/cmliblzma/liblzma/common/common.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpnDxDpW.yaml -p=/project/git /project/git/Utilities/cmliblzma/liblzma/common/filter_buffer_encoder.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmprl4VGZ.yaml -p=/project/git /project/git/Utilities/cmcurl/lib/dotdot.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpT_dEoL.yaml -p=/project/git /project/git/Utilities/cmliblzma/liblzma/common/filter_decoder.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpcsdz9c.yaml -p=/project/git /project/git/Utilities/cmliblzma/liblzma/common/filter_flags_decoder.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmp2VweJt.yaml -p=/project/git /project/git/Utilities/cmliblzma/liblzma/common/filter_encoder.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpafW7hl.yaml -p=/project/git /project/git/Utilities/cmliblzma/liblzma/common/filter_flags_encoder.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpPP3iQR.yaml -p=/project/git /project/git/Utilities/cmliblzma/liblzma/common/index_encoder.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpZSXvgj.yaml -p=/project/git /project/git/Utilities/cmliblzma/liblzma/common/index_decoder.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpHWZVXI.yaml -p=/project/git /project/git/Utilities/cmliblzma/liblzma/common/filter_common.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpPRVM0g.yaml -p=/project/git /project/git/Utilities/cmliblzma/liblzma/common/stream_buffer_decoder.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpl3JWdu.yaml -p=/project/git /project/git/Utilities/cmliblzma/liblzma/common/stream_buffer_encoder.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpS8UAPu.yaml -p=/project/git /project/git/Utilities/cmliblzma/liblzma/common/stream_flags_common.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpHY9QBZ.yaml -p=/project/git /project/git/Utilities/cmliblzma/liblzma/common/index_hash.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmp4rr61T.yaml -p=/project/git /project/git/Utilities/cmliblzma/liblzma/common/stream_encoder.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpscXgkA.yaml -p=/project/git /project/git/Utilities/cmliblzma/liblzma/common/stream_flags_decoder.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpr115I7.yaml -p=/project/git /project/git/Utilities/cmliblzma/liblzma/common/stream_flags_encoder.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpwDNZBg.yaml -p=/project/git /project/git/Utilities/cmliblzma/liblzma/common/vli_decoder.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpgrT9oP.yaml -p=/project/git /project/git/Utilities/cmliblzma/liblzma/common/vli_encoder.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmp__igWb.yaml -p=/project/git /project/git/Utilities/cmliblzma/liblzma/common/vli_size.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpFM7IGq.yaml -p=/project/git /project/git/Utilities/cmliblzma/liblzma/delta/delta_common.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpln5ZTh.yaml -p=/project/git /project/git/Utilities/cmliblzma/liblzma/delta/delta_decoder.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpKNANEi.yaml -p=/project/git /project/git/Utilities/cmliblzma/liblzma/delta/delta_encoder.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmp2v04Mm.yaml -p=/project/git /project/git/Utilities/cmcompress/cmcompress.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpnBNuHX.yaml -p=/project/git /project/git/Utilities/cmliblzma/liblzma/lzma/fastpos_table.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpadzFRb.yaml -p=/project/git /project/git/Utilities/cmliblzma/liblzma/common/stream_decoder.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmp5pg8sM.yaml -p=/project/git /project/git/Utilities/cmbzip2/decompress.c
/project/git/Utilities/cmbzip2/decompress.c:309:17: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]
            tmp = pos[v];
                ^
/project/git/Utilities/cmbzip2/decompress.c:139:8: note: Assuming the condition is false
   if (s->state == BZ_X_MAGIC_1) {
       ^
/project/git/Utilities/cmbzip2/decompress.c:139:4: note: Taking false branch
   if (s->state == BZ_X_MAGIC_1) {
   ^
/project/git/Utilities/cmbzip2/decompress.c:195:4: note: Control jumps to 'case 31:'  at line 289
   switch (s->state) {
   ^
/project/git/Utilities/cmbzip2/decompress.c:290:11: note: Assuming 'nSelectors' is >= 1
      if (nSelectors < 1) RETURN(BZ_DATA_ERROR);
          ^
/project/git/Utilities/cmbzip2/decompress.c:290:7: note: Taking false branch
      if (nSelectors < 1) RETURN(BZ_DATA_ERROR);
      ^
/project/git/Utilities/cmbzip2/decompress.c:291:7: note: Loop condition is true.  Entering loop body
      for (i = 0; i < nSelectors; i++) {
      ^
/project/git/Utilities/cmbzip2/decompress.c:293:10: note: Loop condition is true.  Entering loop body
         while (True) {
         ^
/project/git/Utilities/cmbzip2/decompress.c:295:17: note: Assuming 'uc' is equal to 0
            if (uc == 0) break;
                ^
/project/git/Utilities/cmbzip2/decompress.c:295:13: note: Taking true branch
            if (uc == 0) break;
            ^
/project/git/Utilities/cmbzip2/decompress.c:295:26: note:  Execution continues on line 299
            if (uc == 0) break;
                         ^
/project/git/Utilities/cmbzip2/decompress.c:291:19: note: Assuming 'i' is >= 'nSelectors'
      for (i = 0; i < nSelectors; i++) {
                  ^
1 warning generated.

/project/git/Utilities/cmbzip2/decompress.c:291:7: note: Loop condition is false. Execution continues on line 304
      for (i = 0; i < nSelectors; i++) {
      ^
/project/git/Utilities/cmbzip2/decompress.c:305:22: note: Assuming 'v' is >= 'nGroups'
         for (v = 0; v < nGroups; v++) pos[v] = v;
                     ^
/project/git/Utilities/cmbzip2/decompress.c:305:10: note: Loop condition is false. Execution continues on line 307
         for (v = 0; v < nGroups; v++) pos[v] = v;
         ^
/project/git/Utilities/cmbzip2/decompress.c:307:10: note: Loop condition is true.  Entering loop body
         for (i = 0; i < nSelectors; i++) {
         ^
/project/git/Utilities/cmbzip2/decompress.c:309:17: note: Assigned value is garbage or undefined
            tmp = pos[v];
                ^

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpsjEiQq.yaml -p=/project/git /project/git/Utilities/cmliblzma/liblzma/lzma/lzma2_decoder.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmparyAEd.yaml -p=/project/git /project/git/Utilities/cmcurl/lib/curl_sasl.c
/project/git/Utilities/cmcurl/lib/urldata.h:1209:8: warning: Excessive padding in 'struct UrlState' (61 padding bytes, where 5 is optimal). 
Optimal fields order: 
conn_cache, 
lastconnect, 
headerbuff, 
headersize, 
buffer, 
ulbuf, 
current_speed, 
first_host, 
session, 
sessionage, 
scratch, 
prev_signal, 
resolver, 
most_recent_ftp_entrypath, 
crlf_conversions, 
pathbuffer, 
path, 
range, 
resume_from, 
rtsp_next_client_CSeq, 
rtsp_next_server_CSeq, 
rtsp_CSeq_recv, 
infilesize, 
drain, 
fread_func, 
in, 
stream_depends_on, 
keeps_speed, 
expiretime, 
authhost, 
authproxy, 
timeoutlist, 
timenode, 
digest, 
proxydigest, 
tempwrite, 
expires, 
first_remote_port, 
tempcount, 
os_errno, 
httpversion, 
stream_weight, 
multi_owned_by_easy, 
this_is_a_follow, 
refused_stream, 
errorbuf, 
allow_port, 
authproblem, 
ftp_trying_alternative, 
wildcardmatch, 
expect100header, 
prev_block_had_trailing_cr, 
slash_removed, 
use_range, 
rangestringalloc, 
done, 
stream_depends_e, 
consider reordering the fields or adding explicit padding members [clang-analyzer-optin.performance.Padding]
struct UrlState {
       ^
/project/git/Utilities/cmcurl/lib/urldata.h:1209:8: note: Excessive padding in 'struct UrlState' (61 padding bytes, where 5 is optimal). Optimal fields order: conn_cache, lastconnect, headerbuff, headersize, buffer, ulbuf, current_speed, first_host, session, sessionage, scratch, prev_signal, resolver, most_recent_ftp_entrypath, crlf_conversions, pathbuffer, path, range, resume_from, rtsp_next_client_CSeq, rtsp_next_server_CSeq, rtsp_CSeq_recv, infilesize, drain, fread_func, in, stream_depends_on, keeps_speed, expiretime, authhost, authproxy, timeoutlist, timenode, digest, proxydigest, tempwrite, expires, first_remote_port, tempcount, os_errno, httpversion, stream_weight, multi_owned_by_easy, this_is_a_follow, refused_stream, errorbuf, allow_port, authproblem, ftp_trying_alternative, wildcardmatch, expect100header, prev_block_had_trailing_cr, slash_removed, use_range, rangestringalloc, done, stream_depends_e, consider reordering the fields or adding explicit padding members
/project/git/Utilities/cmcurl/lib/urldata.h:1457:8: warning: Excessive padding in 'struct UserDefined' (120 padding bytes, where 0 is optimal). 
Optimal fields order: 
err, 
debugdata, 
errorbuffer, 
proxyport, 
out, 
in_set, 
writeheader, 
rtp_out, 
use_port, 
httpauth, 
proxyauth, 
socks5auth, 
followlocation, 
maxredirs, 
postfields, 
seek_func, 
postfieldsize, 
fwrite_func, 
fwrite_header, 
fwrite_rtp, 
fread_func_set, 
fprogress, 
fxferinfo, 
fdebug, 
ioctl_func, 
fsockopt, 
sockopt_client, 
fopensocket, 
opensocket_client, 
fclosesocket, 
closesocket_client, 
seek_client, 
convfromnetwork, 
convtonetwork, 
convfromutf8, 
progress_client, 
ioctl_client, 
timeout, 
connecttimeout, 
accepttimeout, 
happy_eyeballs_timeout, 
server_response_timeout, 
tftp_blksize, 
filesize, 
low_speed_limit, 
low_speed_time, 
max_send_speed, 
max_recv_speed, 
set_resume_from, 
headers, 
proxyheaders, 
httppost, 
quote, 
postquote, 
prequote, 
source_quote, 
source_prequote, 
source_postquote, 
telnet_options, 
resolve, 
connect_to, 
timevalue, 
httpversion, 
general_ssl, 
dns_cache_timeout, 
buffer_size, 
upload_buffer_size, 
private_data, 
http200aliases, 
ipver, 
max_filesize, 
ssh_keyfunc, 
ssh_keyfunc_userp, 
ssh_auth_types, 
new_file_perms, 
new_directory_perms, 
allowed_protocols, 
redir_protocols, 
mail_rcpt, 
rtspversion, 
chunk_bgn, 
chunk_end, 
fnmatch, 
fnmatch_data, 
gssapi_delegation, 
tcp_keepidle, 
tcp_keepintvl, 
maxconnects, 
expect_100_timeout, 
stream_depends_on, 
stream_dependents, 
resolver_start, 
resolver_start_client, 
ssl, 
proxy_ssl, 
mimepost, 
str, 
keep_post, 
localportrange, 
is_fread_set, 
is_fwrite_set, 
timecondition, 
httpreq, 
proxytype, 
ftp_filemethod, 
ftp_create_missing_dirs, 
use_netrc, 
use_ssl, 
ftpsslauth, 
ftp_ccc, 
scope_id, 
rtspreq, 
stream_weight, 
localport, 
free_referer, 
tftp_no_options, 
sep_headers, 
cookiesession, 
crlf, 
strip_path_slash, 
ssh_compression, 
get_filetime, 
tunnel_thru_httpproxy, 
prefer_ascii, 
ftp_append, 
ftp_list_only, 
ftp_use_port, 
hide_progress, 
http_fail_on_error, 
http_keep_sending_on_error, 
http_follow_location, 
http_transfer_encoding, 
allow_auth_to_other_hosts, 
include_header, 
http_set_referer, 
http_auto_referer, 
opt_no_body, 
upload, 
verbose, 
krb, 
reuse_forbid, 
reuse_fresh, 
ftp_use_epsv, 
ftp_use_eprt, 
ftp_use_pret, 
no_signal, 
global_dns_cache, 
tcp_nodelay, 
ignorecl, 
ftp_skip_ip, 
connect_only, 
http_te_skip, 
http_ce_skip, 
proxy_transfer_mode, 
sasl_ir, 
wildcard_enabled, 
tcp_keepalive, 
tcp_fastopen, 
ssl_enable_npn, 
ssl_enable_alpn, 
path_as_is, 
pipewait, 
suppress_connect_headers, 
dns_shuffle_addresses, 
stream_depends_e, 
haproxyprotocol, 
abstract_unix_socket, 
disallow_username_in_url, 
consider reordering the fields or adding explicit padding members [clang-analyzer-optin.performance.Padding]
struct UserDefined {
       ^
2 warnings generated.

/project/git/Utilities/cmcurl/lib/urldata.h:1457:8: note: Excessive padding in 'struct UserDefined' (120 padding bytes, where 0 is optimal). Optimal fields order: err, debugdata, errorbuffer, proxyport, out, in_set, writeheader, rtp_out, use_port, httpauth, proxyauth, socks5auth, followlocation, maxredirs, postfields, seek_func, postfieldsize, fwrite_func, fwrite_header, fwrite_rtp, fread_func_set, fprogress, fxferinfo, fdebug, ioctl_func, fsockopt, sockopt_client, fopensocket, opensocket_client, fclosesocket, closesocket_client, seek_client, convfromnetwork, convtonetwork, convfromutf8, progress_client, ioctl_client, timeout, connecttimeout, accepttimeout, happy_eyeballs_timeout, server_response_timeout, tftp_blksize, filesize, low_speed_limit, low_speed_time, max_send_speed, max_recv_speed, set_resume_from, headers, proxyheaders, httppost, quote, postquote, prequote, source_quote, source_prequote, source_postquote, telnet_options, resolve, connect_to, timevalue, httpversion, general_ssl, dns_cache_timeout, buffer_size, upload_buffer_size, private_data, http200aliases, ipver, max_filesize, ssh_keyfunc, ssh_keyfunc_userp, ssh_auth_types, new_file_perms, new_directory_perms, allowed_protocols, redir_protocols, mail_rcpt, rtspversion, chunk_bgn, chunk_end, fnmatch, fnmatch_data, gssapi_delegation, tcp_keepidle, tcp_keepintvl, maxconnects, expect_100_timeout, stream_depends_on, stream_dependents, resolver_start, resolver_start_client, ssl, proxy_ssl, mimepost, str, keep_post, localportrange, is_fread_set, is_fwrite_set, timecondition, httpreq, proxytype, ftp_filemethod, ftp_create_missing_dirs, use_netrc, use_ssl, ftpsslauth, ftp_ccc, scope_id, rtspreq, stream_weight, localport, free_referer, tftp_no_options, sep_headers, cookiesession, crlf, strip_path_slash, ssh_compression, get_filetime, tunnel_thru_httpproxy, prefer_ascii, ftp_append, ftp_list_only, ftp_use_port, hide_progress, http_fail_on_error, http_keep_sending_on_error, http_follow_location, http_transfer_encoding, allow_auth_to_other_hosts, include_header, http_set_referer, http_auto_referer, opt_no_body, upload, verbose, krb, reuse_forbid, reuse_fresh, ftp_use_epsv, ftp_use_eprt, ftp_use_pret, no_signal, global_dns_cache, tcp_nodelay, ignorecl, ftp_skip_ip, connect_only, http_te_skip, http_ce_skip, proxy_transfer_mode, sasl_ir, wildcard_enabled, tcp_keepalive, tcp_fastopen, ssl_enable_npn, ssl_enable_alpn, path_as_is, pipewait, suppress_connect_headers, dns_shuffle_addresses, stream_depends_e, haproxyprotocol, abstract_unix_socket, disallow_username_in_url, consider reordering the fields or adding explicit padding members

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpI6Emhx.yaml -p=/project/git /project/git/Utilities/cmliblzma/liblzma/lzma/lzma2_encoder.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmp58NZ_G.yaml -p=/project/git /project/git/Utilities/cmliblzma/liblzma/lzma/lzma_encoder_optimum_fast.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpIE_hWD.yaml -p=/project/git /project/git/Utilities/cmliblzma/liblzma/lzma/lzma_encoder_presets.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpNYIeX2.yaml -p=/project/git /project/git/Utilities/cmliblzma/liblzma/rangecoder/price_table.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmp6vERWD.yaml -p=/project/git /project/git/Utilities/cmliblzma/liblzma/simple/arm.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpARugYG.yaml -p=/project/git /project/git/Utilities/cmliblzma/liblzma/lz/lz_decoder.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpvJJ4Cj.yaml -p=/project/git /project/git/Utilities/cmliblzma/liblzma/simple/armthumb.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpSzvnRU.yaml -p=/project/git /project/git/Utilities/cmliblzma/liblzma/simple/ia64.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpcejGu5.yaml -p=/project/git /project/git/Utilities/cmliblzma/liblzma/simple/powerpc.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpCAKlSE.yaml -p=/project/git /project/git/Utilities/cmliblzma/liblzma/simple/simple_coder.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpFiJfuj.yaml -p=/project/git /project/git/Utilities/cmbzip2/blocksort.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmp_4QhZb.yaml -p=/project/git /project/git/Utilities/cmliblzma/liblzma/simple/simple_decoder.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpcBfgAt.yaml -p=/project/git /project/git/Utilities/cmliblzma/liblzma/simple/simple_encoder.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpVnSnns.yaml -p=/project/git /project/git/Utilities/cmliblzma/liblzma/lzma/lzma_encoder_optimum_normal.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpSESadv.yaml -p=/project/git /project/git/Utilities/cmliblzma/liblzma/check/sha256.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpUt1L2l.yaml -p=/project/git /project/git/Utilities/cmcurl/lib/multi.c
/project/git/Utilities/cmcurl/lib/multi.c:1075:25: warning: Dereference of null pointer [clang-analyzer-core.NullDereference]
          ufds[nfds].fd = sockbunch[i];
                        ^
/project/git/Utilities/cmcurl/lib/multi.c:1000:3: note: 'ufds' initialized to a null pointer value
  struct pollfd *ufds = NULL;
  ^
/project/git/Utilities/cmcurl/lib/multi.c:1006:3: note: Taking false branch
  if(!GOOD_MULTI_HANDLE(multi))
  ^
/project/git/Utilities/cmcurl/lib/multi.c:1009:6: note: Assuming the condition is false
  if(multi->in_callback)
     ^
/project/git/Utilities/cmcurl/lib/multi.c:1009:3: note: Taking false branch
  if(multi->in_callback)
  ^
/project/git/Utilities/cmcurl/lib/multi.c:1016:30: note: Left side of '&&' is false
  if((timeout_internal >= 0) && (timeout_internal < (long)timeout_ms))
                             ^
/project/git/Utilities/cmcurl/lib/multi.c:1021:3: note: Loop condition is true.  Entering loop body
  while(data) {
  ^
/project/git/Utilities/cmcurl/lib/multi.c:1024:5: note: Loop condition is true.  Entering loop body
    for(i = 0; i< MAX_SOCKSPEREASYHANDLE; i++) {
    ^
/project/git/Utilities/cmcurl/lib/multi.c:1027:10: note: Assuming the condition is false
      if(bitmap & GETSOCK_READSOCK(i)) {
         ^
/project/git/Utilities/cmcurl/lib/multi.c:1027:7: note: Taking false branch
      if(bitmap & GETSOCK_READSOCK(i)) {
      ^
/project/git/Utilities/cmcurl/lib/multi.c:1031:10: note: Assuming the condition is true
      if(bitmap & GETSOCK_WRITESOCK(i)) {
         ^
/project/git/Utilities/cmcurl/lib/multi.c:1031:7: note: Taking true branch
      if(bitmap & GETSOCK_WRITESOCK(i)) {
      ^
/project/git/Utilities/cmcurl/lib/multi.c:1035:10: note: Assuming the condition is true
      if(s == CURL_SOCKET_BAD) {
         ^
/project/git/Utilities/cmcurl/lib/multi.c:1035:7: note: Taking true branch
      if(s == CURL_SOCKET_BAD) {
      ^
/project/git/Utilities/cmcurl/lib/multi.c:1036:9: note:  Execution continues on line 1040
        break;
        ^
/project/git/Utilities/cmcurl/lib/multi.c:1021:3: note: Loop condition is false. Execution continues on line 1043
  while(data) {
  ^
/project/git/Utilities/cmcurl/lib/multi.c:1046:6: note: Assuming 'nfds' is 0
  if(nfds) {
     ^
/project/git/Utilities/cmcurl/lib/multi.c:1046:3: note: Taking false branch
  if(nfds) {
  ^
/project/git/Utilities/cmcurl/lib/multi.c:1065:3: note: Taking true branch
  if(curlfds) {
  ^
/project/git/Utilities/cmcurl/lib/multi.c:1068:5: note: Loop condition is true.  Entering loop body
    while(data) {
    ^
/project/git/Utilities/cmcurl/lib/multi.c:1071:7: note: Loop condition is true.  Entering loop body
      for(i = 0; i< MAX_SOCKSPEREASYHANDLE; i++) {
      ^
/project/git/Utilities/cmcurl/lib/multi.c:1074:12: note: Assuming the condition is true
        if(bitmap & GETSOCK_READSOCK(i)) {
           ^
/project/git/Utilities/cmcurl/lib/multi.c:1074:9: note: Taking true branch
        if(bitmap & GETSOCK_READSOCK(i)) {
        ^
/project/git/Utilities/cmcurl/lib/multi.c:1075:25: note: Dereference of null pointer
          ufds[nfds].fd = sockbunch[i];
                        ^
/project/git/Utilities/cmcurl/lib/multi.c:1081:25: warning: Dereference of null pointer [clang-analyzer-core.NullDereference]
          ufds[nfds].fd = sockbunch[i];
                        ^
/project/git/Utilities/cmcurl/lib/multi.c:1000:3: note: 'ufds' initialized to a null pointer value
  struct pollfd *ufds = NULL;
  ^
/project/git/Utilities/cmcurl/lib/multi.c:1006:3: note: Taking false branch
  if(!GOOD_MULTI_HANDLE(multi))
  ^
/project/git/Utilities/cmcurl/lib/multi.c:1009:6: note: Assuming the condition is false
  if(multi->in_callback)
     ^
/project/git/Utilities/cmcurl/lib/multi.c:1009:3: note: Taking false branch
  if(multi->in_callback)
  ^
/project/git/Utilities/cmcurl/lib/multi.c:1016:30: note: Left side of '&&' is false
  if((timeout_internal >= 0) && (timeout_internal < (long)timeout_ms))
                             ^
/project/git/Utilities/cmcurl/lib/multi.c:1021:3: note: Loop condition is true.  Entering loop body
  while(data) {
  ^
/project/git/Utilities/cmcurl/lib/multi.c:1024:5: note: Loop condition is true.  Entering loop body
    for(i = 0; i< MAX_SOCKSPEREASYHANDLE; i++) {
    ^
/project/git/Utilities/cmcurl/lib/multi.c:1027:10: note: Assuming the condition is false
      if(bitmap & GETSOCK_READSOCK(i)) {
         ^
/project/git/Utilities/cmcurl/lib/multi.c:1027:7: note: Taking false branch
      if(bitmap & GETSOCK_READSOCK(i)) {
      ^
/project/git/Utilities/cmcurl/lib/multi.c:1031:10: note: Assuming the condition is true
      if(bitmap & GETSOCK_WRITESOCK(i)) {
         ^
/project/git/Utilities/cmcurl/lib/multi.c:1031:7: note: Taking true branch
      if(bitmap & GETSOCK_WRITESOCK(i)) {
      ^
/project/git/Utilities/cmcurl/lib/multi.c:1035:10: note: Assuming the condition is true
      if(s == CURL_SOCKET_BAD) {
         ^
/project/git/Utilities/cmcurl/lib/multi.c:1035:7: note: Taking true branch
      if(s == CURL_SOCKET_BAD) {
      ^
/project/git/Utilities/cmcurl/lib/multi.c:1036:9: note:  Execution continues on line 1040
        break;
        ^
/project/git/Utilities/cmcurl/lib/multi.c:1021:3: note: Loop condition is false. Execution continues on line 1043
  while(data) {
  ^
/project/git/Utilities/cmcurl/lib/multi.c:1046:6: note: Assuming 'nfds' is 0
  if(nfds) {
     ^
/project/git/Utilities/cmcurl/lib/multi.c:1046:3: note: Taking false branch
  if(nfds) {
  ^
/project/git/Utilities/cmcurl/lib/multi.c:1065:3: note: Taking true branch
  if(curlfds) {
  ^
/project/git/Utilities/cmcurl/lib/multi.c:1068:5: note: Loop condition is true.  Entering loop body
    while(data) {
    ^
/project/git/Utilities/cmcurl/lib/multi.c:1071:7: note: Loop condition is true.  Entering loop body
      for(i = 0; i< MAX_SOCKSPEREASYHANDLE; i++) {
      ^
/project/git/Utilities/cmcurl/lib/multi.c:1074:12: note: Assuming the condition is false
        if(bitmap & GETSOCK_READSOCK(i)) {
           ^
/project/git/Utilities/cmcurl/lib/multi.c:1074:9: note: Taking false branch
        if(bitmap & GETSOCK_READSOCK(i)) {
        ^
/project/git/Utilities/cmcurl/lib/multi.c:1080:12: note: Assuming the condition is true
        if(bitmap & GETSOCK_WRITESOCK(i)) {
           ^
/project/git/Utilities/cmcurl/lib/multi.c:1080:9: note: Taking true branch
        if(bitmap & GETSOCK_WRITESOCK(i)) {
        ^
/project/git/Utilities/cmcurl/lib/multi.c:1081:25: note: Dereference of null pointer
          ufds[nfds].fd = sockbunch[i];
                        ^
/project/git/Utilities/cmcurl/lib/multi.c:1097:19: warning: Dereference of null pointer [clang-analyzer-core.NullDereference]
    ufds[nfds].fd = extra_fds[i].fd;
                  ^
/project/git/Utilities/cmcurl/lib/multi.c:1000:3: note: 'ufds' initialized to a null pointer value
  struct pollfd *ufds = NULL;
  ^
/project/git/Utilities/cmcurl/lib/multi.c:1006:3: note: Taking false branch
  if(!GOOD_MULTI_HANDLE(multi))
  ^
/project/git/Utilities/cmcurl/lib/multi.c:1009:6: note: Assuming the condition is false
  if(multi->in_callback)
     ^
/project/git/Utilities/cmcurl/lib/multi.c:1009:3: note: Taking false branch
  if(multi->in_callback)
  ^
/project/git/Utilities/cmcurl/lib/multi.c:1016:30: note: Left side of '&&' is false
  if((timeout_internal >= 0) && (timeout_internal < (long)timeout_ms))
                             ^
/project/git/Utilities/cmcurl/lib/multi.c:1021:3: note: Loop condition is true.  Entering loop body
  while(data) {
  ^
/project/git/Utilities/cmcurl/lib/multi.c:1024:5: note: Loop condition is true.  Entering loop body
    for(i = 0; i< MAX_SOCKSPEREASYHANDLE; i++) {
    ^
/project/git/Utilities/cmcurl/lib/multi.c:1027:10: note: Assuming the condition is false
      if(bitmap & GETSOCK_READSOCK(i)) {
         ^
/project/git/Utilities/cmcurl/lib/multi.c:1027:7: note: Taking false branch
      if(bitmap & GETSOCK_READSOCK(i)) {
      ^
/project/git/Utilities/cmcurl/lib/multi.c:1031:10: note: Assuming the condition is true
      if(bitmap & GETSOCK_WRITESOCK(i)) {
         ^
/project/git/Utilities/cmcurl/lib/multi.c:1031:7: note: Taking true branch
      if(bitmap & GETSOCK_WRITESOCK(i)) {
      ^
/project/git/Utilities/cmcurl/lib/multi.c:1035:10: note: Assuming the condition is true
      if(s == CURL_SOCKET_BAD) {
         ^
/project/git/Utilities/cmcurl/lib/multi.c:1035:7: note: Taking true branch
      if(s == CURL_SOCKET_BAD) {
      ^
/project/git/Utilities/cmcurl/lib/multi.c:1036:9: note:  Execution continues on line 1040
        break;
        ^
/project/git/Utilities/cmcurl/lib/multi.c:1021:3: note: Loop condition is false. Execution continues on line 1043
  while(data) {
  ^
/project/git/Utilities/cmcurl/lib/multi.c:1046:6: note: Assuming 'nfds' is 0
  if(nfds) {
     ^
/project/git/Utilities/cmcurl/lib/multi.c:1046:3: note: Taking false branch
  if(nfds) {
  ^
/project/git/Utilities/cmcurl/lib/multi.c:1065:3: note: Taking true branch
  if(curlfds) {
  ^
/project/git/Utilities/cmcurl/lib/multi.c:1068:5: note: Loop condition is true.  Entering loop body
    while(data) {
    ^
/project/git/Utilities/cmcurl/lib/multi.c:1071:7: note: Loop condition is true.  Entering loop body
      for(i = 0; i< MAX_SOCKSPEREASYHANDLE; i++) {
      ^
/project/git/Utilities/cmcurl/lib/multi.c:1074:12: note: Assuming the condition is false
        if(bitmap & GETSOCK_READSOCK(i)) {
           ^
/project/git/Utilities/cmcurl/lib/multi.c:1074:9: note: Taking false branch
        if(bitmap & GETSOCK_READSOCK(i)) {
        ^
/project/git/Utilities/cmcurl/lib/multi.c:1080:12: note: Assuming the condition is false
        if(bitmap & GETSOCK_WRITESOCK(i)) {
           ^
/project/git/Utilities/cmcurl/lib/multi.c:1080:9: note: Taking false branch
        if(bitmap & GETSOCK_WRITESOCK(i)) {
        ^
/project/git/Utilities/cmcurl/lib/multi.c:1086:9: note: Taking true branch
        if(s == CURL_SOCKET_BAD) {
        ^
/project/git/Utilities/cmcurl/lib/multi.c:1087:11: note:  Execution continues on line 1091
          break;
          ^
/project/git/Utilities/cmcurl/lib/multi.c:1068:5: note: Loop condition is false. Execution continues on line 1096
    while(data) {
    ^
/project/git/Utilities/cmcurl/lib/multi.c:1096:14: note: Assuming 'i' is < 'extra_nfds'
  for(i = 0; i < extra_nfds; i++) {
             ^
/project/git/Utilities/cmcurl/lib/multi.c:1096:3: note: Loop condition is true.  Entering loop body
  for(i = 0; i < extra_nfds; i++) {
  ^
/project/git/Utilities/cmcurl/lib/multi.c:1097:19: note: Dereference of null pointer
    ufds[nfds].fd = extra_fds[i].fd;
                  ^
/project/git/Utilities/cmcurl/lib/urldata.h:1209:8: warning: Excessive padding in 'struct UrlState' (61 padding bytes, where 5 is optimal). 
Optimal fields order: 
conn_cache, 
lastconnect, 
headerbuff, 
headersize, 
buffer, 
ulbuf, 
current_speed, 
first_host, 
session, 
sessionage, 
scratch, 
prev_signal, 
resolver, 
most_recent_ftp_entrypath, 
crlf_conversions, 
pathbuffer, 
path, 
range, 
resume_from, 
rtsp_next_client_CSeq, 
rtsp_next_server_CSeq, 
rtsp_CSeq_recv, 
infilesize, 
drain, 
fread_func, 
in, 
stream_depends_on, 
keeps_speed, 
expiretime, 
authhost, 
authproxy, 
timeoutlist, 
timenode, 
digest, 
proxydigest, 
tempwrite, 
expires, 
first_remote_port, 
tempcount, 
os_errno, 
httpversion, 
stream_weight, 
multi_owned_by_easy, 
this_is_a_follow, 
refused_stream, 
errorbuf, 
allow_port, 
authproblem, 
ftp_trying_alternative, 
wildcardmatch, 
expect100header, 
prev_block_had_trailing_cr, 
slash_removed, 
use_range, 
rangestringalloc, 
done, 
stream_depends_e, 
consider reordering the fields or adding explicit padding members [clang-analyzer-optin.performance.Padding]
struct UrlState {
       ^
/project/git/Utilities/cmcurl/lib/urldata.h:1209:8: note: Excessive padding in 'struct UrlState' (61 padding bytes, where 5 is optimal). Optimal fields order: conn_cache, lastconnect, headerbuff, headersize, buffer, ulbuf, current_speed, first_host, session, sessionage, scratch, prev_signal, resolver, most_recent_ftp_entrypath, crlf_conversions, pathbuffer, path, range, resume_from, rtsp_next_client_CSeq, rtsp_next_server_CSeq, rtsp_CSeq_recv, infilesize, drain, fread_func, in, stream_depends_on, keeps_speed, expiretime, authhost, authproxy, timeoutlist, timenode, digest, proxydigest, tempwrite, expires, first_remote_port, tempcount, os_errno, httpversion, stream_weight, multi_owned_by_easy, this_is_a_follow, refused_stream, errorbuf, allow_port, authproblem, ftp_trying_alternative, wildcardmatch, expect100header, prev_block_had_trailing_cr, slash_removed, use_range, rangestringalloc, done, stream_depends_e, consider reordering the fields or adding explicit padding members
/project/git/Utilities/cmcurl/lib/urldata.h:1457:8: warning: Excessive padding in 'struct UserDefined' (120 padding bytes, where 0 is optimal). 
Optimal fields order: 
err, 
debugdata, 
errorbuffer, 
proxyport, 
out, 
in_set, 
writeheader, 
rtp_out, 
use_port, 
httpauth, 
proxyauth, 
socks5auth, 
followlocation, 
maxredirs, 
postfields, 
seek_func, 
postfieldsize, 
fwrite_func, 
fwrite_header, 
fwrite_rtp, 
fread_func_set, 
fprogress, 
fxferinfo, 
fdebug, 
ioctl_func, 
fsockopt, 
sockopt_client, 
fopensocket, 
opensocket_client, 
fclosesocket, 
closesocket_client, 
seek_client, 
convfromnetwork, 
convtonetwork, 
convfromutf8, 
progress_client, 
ioctl_client, 
timeout, 
connecttimeout, 
accepttimeout, 
happy_eyeballs_timeout, 
server_response_timeout, 
tftp_blksize, 
filesize, 
low_speed_limit, 
low_speed_time, 
max_send_speed, 
max_recv_speed, 
set_resume_from, 
headers, 
proxyheaders, 
httppost, 
quote, 
postquote, 
prequote, 
source_quote, 
source_prequote, 
source_postquote, 
telnet_options, 
resolve, 
connect_to, 
timevalue, 
httpversion, 
general_ssl, 
dns_cache_timeout, 
buffer_size, 
upload_buffer_size, 
private_data, 
http200aliases, 
ipver, 
max_filesize, 
ssh_keyfunc, 
ssh_keyfunc_userp, 
ssh_auth_types, 
new_file_perms, 
new_directory_perms, 
allowed_protocols, 
redir_protocols, 
mail_rcpt, 
rtspversion, 
chunk_bgn, 
chunk_end, 
fnmatch, 
fnmatch_data, 
gssapi_delegation, 
tcp_keepidle, 
tcp_keepintvl, 
maxconnects, 
expect_100_timeout, 
stream_depends_on, 
stream_dependents, 
resolver_start, 
resolver_start_client, 
ssl, 
proxy_ssl, 
mimepost, 
str, 
keep_post, 
localportrange, 
is_fread_set, 
is_fwrite_set, 
timecondition, 
httpreq, 
proxytype, 
ftp_filemethod, 
ftp_create_missing_dirs, 
use_netrc, 
use_ssl, 
ftpsslauth, 
ftp_ccc, 
scope_id, 
rtspreq, 
stream_weight, 
localport, 
free_referer, 
tftp_no_options, 
sep_headers, 
cookiesession, 
crlf, 
strip_path_slash, 
ssh_compression, 
get_filetime, 
tunnel_thru_httpproxy, 
prefer_ascii, 
ftp_append, 
ftp_list_only, 
ftp_use_port, 
hide_progress, 
http_fail_on_error, 
http_keep_sending_on_error, 
http_follow_location, 
http_transfer_encoding, 
allow_auth_to_other_hosts, 
include_header, 
http_set_referer, 
http_auto_referer, 
opt_no_body, 
upload, 
verbose, 
krb, 
reuse_forbid, 
reuse_fresh, 
ftp_use_epsv, 
ftp_use_eprt, 
ftp_use_pret, 
no_signal, 
global_dns_cache, 
tcp_nodelay, 
ignorecl, 
ftp_skip_ip, 
connect_only, 
http_te_skip, 
http_ce_skip, 
proxy_transfer_mode, 
sasl_ir, 
wildcard_enabled, 
tcp_keepalive, 
tcp_fastopen, 
ssl_enable_npn, 
ssl_enable_alpn, 
path_as_is, 
pipewait, 
suppress_connect_headers, 
dns_shuffle_addresses, 
stream_depends_e, 
haproxyprotocol, 
abstract_unix_socket, 
disallow_username_in_url, 
consider reordering the fields or adding explicit padding members [clang-analyzer-optin.performance.Padding]
struct UserDefined {
       ^
5 warnings generated.

1 warning generated.

/project/git/Utilities/cmcurl/lib/urldata.h:1457:8: note: Excessive padding in 'struct UserDefined' (120 padding bytes, where 0 is optimal). Optimal fields order: err, debugdata, errorbuffer, proxyport, out, in_set, writeheader, rtp_out, use_port, httpauth, proxyauth, socks5auth, followlocation, maxredirs, postfields, seek_func, postfieldsize, fwrite_func, fwrite_header, fwrite_rtp, fread_func_set, fprogress, fxferinfo, fdebug, ioctl_func, fsockopt, sockopt_client, fopensocket, opensocket_client, fclosesocket, closesocket_client, seek_client, convfromnetwork, convtonetwork, convfromutf8, progress_client, ioctl_client, timeout, connecttimeout, accepttimeout, happy_eyeballs_timeout, server_response_timeout, tftp_blksize, filesize, low_speed_limit, low_speed_time, max_send_speed, max_recv_speed, set_resume_from, headers, proxyheaders, httppost, quote, postquote, prequote, source_quote, source_prequote, source_postquote, telnet_options, resolve, connect_to, timevalue, httpversion, general_ssl, dns_cache_timeout, buffer_size, upload_buffer_size, private_data, http200aliases, ipver, max_filesize, ssh_keyfunc, ssh_keyfunc_userp, ssh_auth_types, new_file_perms, new_directory_perms, allowed_protocols, redir_protocols, mail_rcpt, rtspversion, chunk_bgn, chunk_end, fnmatch, fnmatch_data, gssapi_delegation, tcp_keepidle, tcp_keepintvl, maxconnects, expect_100_timeout, stream_depends_on, stream_dependents, resolver_start, resolver_start_client, ssl, proxy_ssl, mimepost, str, keep_post, localportrange, is_fread_set, is_fwrite_set, timecondition, httpreq, proxytype, ftp_filemethod, ftp_create_missing_dirs, use_netrc, use_ssl, ftpsslauth, ftp_ccc, scope_id, rtspreq, stream_weight, localport, free_referer, tftp_no_options, sep_headers, cookiesession, crlf, strip_path_slash, ssh_compression, get_filetime, tunnel_thru_httpproxy, prefer_ascii, ftp_append, ftp_list_only, ftp_use_port, hide_progress, http_fail_on_error, http_keep_sending_on_error, http_follow_location, http_transfer_encoding, allow_auth_to_other_hosts, include_header, http_set_referer, http_auto_referer, opt_no_body, upload, verbose, krb, reuse_forbid, reuse_fresh, ftp_use_epsv, ftp_use_eprt, ftp_use_pret, no_signal, global_dns_cache, tcp_nodelay, ignorecl, ftp_skip_ip, connect_only, http_te_skip, http_ce_skip, proxy_transfer_mode, sasl_ir, wildcard_enabled, tcp_keepalive, tcp_fastopen, ssl_enable_npn, ssl_enable_alpn, path_as_is, pipewait, suppress_connect_headers, dns_shuffle_addresses, stream_depends_e, haproxyprotocol, abstract_unix_socket, disallow_username_in_url, consider reordering the fields or adding explicit padding members

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpRxDs73.yaml -p=/project/git /project/git/Utilities/cmlibarchive/libarchive/archive_cryptor.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpPI9B6u.yaml -p=/project/git /project/git/Utilities/cmlibarchive/libarchive/archive_digest.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpKMPN0H.yaml -p=/project/git /project/git/Utilities/cmliblzma/liblzma/lz/lz_encoder.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpu5ckDX.yaml -p=/project/git /project/git/Utilities/cmlibarchive/libarchive/archive_entry_copy_stat.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpOBEhAp.yaml -p=/project/git /project/git/Utilities/cmliblzma/liblzma/lzma/lzma_decoder.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpHNDllo.yaml -p=/project/git /project/git/Utilities/cmlibarchive/libarchive/archive_entry_sparse.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmp9NVfpf.yaml -p=/project/git /project/git/Utilities/cmlibarchive/libarchive/archive_entry_stat.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmp2wHmb0.yaml -p=/project/git /project/git/Utilities/cmlibarchive/libarchive/archive_entry_strmode.c
/project/git/Utilities/cmlibarchive/libarchive/archive_entry_strmode.c:49:2: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
        strcpy(bp, "?rwxrwxrwx ");
        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_entry_strmode.c:49:2: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpiFw1M1.yaml -p=/project/git /project/git/Utilities/cmliblzma/liblzma/lzma/lzma_encoder.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpWjFuC4.yaml -p=/project/git /project/git/Utilities/cmlibarchive/libarchive/archive_entry_xattr.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpUom6Rp.yaml -p=/project/git /project/git/Utilities/cmlibarchive/libarchive/archive_hmac.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpCrUsdj.yaml -p=/project/git /project/git/Utilities/cmliblzma/liblzma/simple/sparc.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpIJ8HjA.yaml -p=/project/git /project/git/Utilities/cmlibarchive/libarchive/archive_entry_link_resolver.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpJCxi4s.yaml -p=/project/git /project/git/Utilities/cmlibarchive/libarchive/archive_pack_dev.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpJiObzG.yaml -p=/project/git /project/git/Utilities/cmcurl/lib/vauth/digest.c
/project/git/Utilities/cmcurl/lib/urldata.h:1209:8: warning: Excessive padding in 'struct UrlState' (61 padding bytes, where 5 is optimal). 
Optimal fields order: 
conn_cache, 
lastconnect, 
headerbuff, 
headersize, 
buffer, 
ulbuf, 
current_speed, 
first_host, 
session, 
sessionage, 
scratch, 
prev_signal, 
resolver, 
most_recent_ftp_entrypath, 
crlf_conversions, 
pathbuffer, 
path, 
range, 
resume_from, 
rtsp_next_client_CSeq, 
rtsp_next_server_CSeq, 
rtsp_CSeq_recv, 
infilesize, 
drain, 
fread_func, 
in, 
stream_depends_on, 
keeps_speed, 
expiretime, 
authhost, 
authproxy, 
timeoutlist, 
timenode, 
digest, 
proxydigest, 
tempwrite, 
expires, 
first_remote_port, 
tempcount, 
os_errno, 
httpversion, 
stream_weight, 
multi_owned_by_easy, 
this_is_a_follow, 
refused_stream, 
errorbuf, 
allow_port, 
authproblem, 
ftp_trying_alternative, 
wildcardmatch, 
expect100header, 
prev_block_had_trailing_cr, 
slash_removed, 
use_range, 
rangestringalloc, 
done, 
stream_depends_e, 
consider reordering the fields or adding explicit padding members [clang-analyzer-optin.performance.Padding]
struct UrlState {
       ^
/project/git/Utilities/cmcurl/lib/urldata.h:1209:8: note: Excessive padding in 'struct UrlState' (61 padding bytes, where 5 is optimal). Optimal fields order: conn_cache, lastconnect, headerbuff, headersize, buffer, ulbuf, current_speed, first_host, session, sessionage, scratch, prev_signal, resolver, most_recent_ftp_entrypath, crlf_conversions, pathbuffer, path, range, resume_from, rtsp_next_client_CSeq, rtsp_next_server_CSeq, rtsp_CSeq_recv, infilesize, drain, fread_func, in, stream_depends_on, keeps_speed, expiretime, authhost, authproxy, timeoutlist, timenode, digest, proxydigest, tempwrite, expires, first_remote_port, tempcount, os_errno, httpversion, stream_weight, multi_owned_by_easy, this_is_a_follow, refused_stream, errorbuf, allow_port, authproblem, ftp_trying_alternative, wildcardmatch, expect100header, prev_block_had_trailing_cr, slash_removed, use_range, rangestringalloc, done, stream_depends_e, consider reordering the fields or adding explicit padding members
/project/git/Utilities/cmcurl/lib/urldata.h:1457:8: warning: Excessive padding in 'struct UserDefined' (120 padding bytes, where 0 is optimal). 
Optimal fields order: 
err, 
debugdata, 
errorbuffer, 
proxyport, 
out, 
in_set, 
writeheader, 
rtp_out, 
use_port, 
httpauth, 
proxyauth, 
socks5auth, 
followlocation, 
maxredirs, 
postfields, 
seek_func, 
postfieldsize, 
fwrite_func, 
fwrite_header, 
fwrite_rtp, 
fread_func_set, 
fprogress, 
fxferinfo, 
fdebug, 
ioctl_func, 
fsockopt, 
sockopt_client, 
fopensocket, 
opensocket_client, 
fclosesocket, 
closesocket_client, 
seek_client, 
convfromnetwork, 
convtonetwork, 
convfromutf8, 
progress_client, 
ioctl_client, 
timeout, 
connecttimeout, 
accepttimeout, 
happy_eyeballs_timeout, 
server_response_timeout, 
tftp_blksize, 
filesize, 
low_speed_limit, 
low_speed_time, 
max_send_speed, 
max_recv_speed, 
set_resume_from, 
headers, 
proxyheaders, 
httppost, 
quote, 
postquote, 
prequote, 
source_quote, 
source_prequote, 
source_postquote, 
telnet_options, 
resolve, 
connect_to, 
timevalue, 
httpversion, 
general_ssl, 
dns_cache_timeout, 
buffer_size, 
upload_buffer_size, 
private_data, 
http200aliases, 
ipver, 
max_filesize, 
ssh_keyfunc, 
ssh_keyfunc_userp, 
ssh_auth_types, 
new_file_perms, 
new_directory_perms, 
allowed_protocols, 
redir_protocols, 
mail_rcpt, 
rtspversion, 
chunk_bgn, 
chunk_end, 
fnmatch, 
fnmatch_data, 
gssapi_delegation, 
tcp_keepidle, 
tcp_keepintvl, 
maxconnects, 
expect_100_timeout, 
stream_depends_on, 
stream_dependents, 
resolver_start, 
resolver_start_client, 
ssl, 
proxy_ssl, 
mimepost, 
str, 
keep_post, 
localportrange, 
is_fread_set, 
is_fwrite_set, 
timecondition, 
httpreq, 
proxytype, 
ftp_filemethod, 
ftp_create_missing_dirs, 
use_netrc, 
use_ssl, 
ftpsslauth, 
ftp_ccc, 
scope_id, 
rtspreq, 
stream_weight, 
localport, 
free_referer, 
tftp_no_options, 
sep_headers, 
cookiesession, 
crlf, 
strip_path_slash, 
ssh_compression, 
get_filetime, 
tunnel_thru_httpproxy, 
prefer_ascii, 
ftp_append, 
ftp_list_only, 
ftp_use_port, 
hide_progress, 
http_fail_on_error, 
http_keep_sending_on_error, 
http_follow_location, 
http_transfer_encoding, 
allow_auth_to_other_hosts, 
include_header, 
http_set_referer, 
http_auto_referer, 
opt_no_body, 
upload, 
verbose, 
krb, 
reuse_forbid, 
reuse_fresh, 
ftp_use_epsv, 
ftp_use_eprt, 
ftp_use_pret, 
no_signal, 
global_dns_cache, 
tcp_nodelay, 
ignorecl, 
ftp_skip_ip, 
connect_only, 
http_te_skip, 
http_ce_skip, 
proxy_transfer_mode, 
sasl_ir, 
wildcard_enabled, 
tcp_keepalive, 
tcp_fastopen, 
ssl_enable_npn, 
ssl_enable_alpn, 
path_as_is, 
pipewait, 
suppress_connect_headers, 
dns_shuffle_addresses, 
stream_depends_e, 
haproxyprotocol, 
abstract_unix_socket, 
disallow_username_in_url, 
consider reordering the fields or adding explicit padding members [clang-analyzer-optin.performance.Padding]
struct UserDefined {
       ^
3 warnings generated.

2 warnings generated.

1 warning generated.

/project/git/Utilities/cmcurl/lib/urldata.h:1457:8: note: Excessive padding in 'struct UserDefined' (120 padding bytes, where 0 is optimal). Optimal fields order: err, debugdata, errorbuffer, proxyport, out, in_set, writeheader, rtp_out, use_port, httpauth, proxyauth, socks5auth, followlocation, maxredirs, postfields, seek_func, postfieldsize, fwrite_func, fwrite_header, fwrite_rtp, fread_func_set, fprogress, fxferinfo, fdebug, ioctl_func, fsockopt, sockopt_client, fopensocket, opensocket_client, fclosesocket, closesocket_client, seek_client, convfromnetwork, convtonetwork, convfromutf8, progress_client, ioctl_client, timeout, connecttimeout, accepttimeout, happy_eyeballs_timeout, server_response_timeout, tftp_blksize, filesize, low_speed_limit, low_speed_time, max_send_speed, max_recv_speed, set_resume_from, headers, proxyheaders, httppost, quote, postquote, prequote, source_quote, source_prequote, source_postquote, telnet_options, resolve, connect_to, timevalue, httpversion, general_ssl, dns_cache_timeout, buffer_size, upload_buffer_size, private_data, http200aliases, ipver, max_filesize, ssh_keyfunc, ssh_keyfunc_userp, ssh_auth_types, new_file_perms, new_directory_perms, allowed_protocols, redir_protocols, mail_rcpt, rtspversion, chunk_bgn, chunk_end, fnmatch, fnmatch_data, gssapi_delegation, tcp_keepidle, tcp_keepintvl, maxconnects, expect_100_timeout, stream_depends_on, stream_dependents, resolver_start, resolver_start_client, ssl, proxy_ssl, mimepost, str, keep_post, localportrange, is_fread_set, is_fwrite_set, timecondition, httpreq, proxytype, ftp_filemethod, ftp_create_missing_dirs, use_netrc, use_ssl, ftpsslauth, ftp_ccc, scope_id, rtspreq, stream_weight, localport, free_referer, tftp_no_options, sep_headers, cookiesession, crlf, strip_path_slash, ssh_compression, get_filetime, tunnel_thru_httpproxy, prefer_ascii, ftp_append, ftp_list_only, ftp_use_port, hide_progress, http_fail_on_error, http_keep_sending_on_error, http_follow_location, http_transfer_encoding, allow_auth_to_other_hosts, include_header, http_set_referer, http_auto_referer, opt_no_body, upload, verbose, krb, reuse_forbid, reuse_fresh, ftp_use_epsv, ftp_use_eprt, ftp_use_pret, no_signal, global_dns_cache, tcp_nodelay, ignorecl, ftp_skip_ip, connect_only, http_te_skip, http_ce_skip, proxy_transfer_mode, sasl_ir, wildcard_enabled, tcp_keepalive, tcp_fastopen, ssl_enable_npn, ssl_enable_alpn, path_as_is, pipewait, suppress_connect_headers, dns_shuffle_addresses, stream_depends_e, haproxyprotocol, abstract_unix_socket, disallow_username_in_url, consider reordering the fields or adding explicit padding members
/project/git/Utilities/cmcurl/lib/vauth/digest.c:300:5: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
    strcpy(realm, "");
    ^
/project/git/Utilities/cmcurl/lib/vauth/digest.c:300:5: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmphw869D.yaml -p=/project/git /project/git/Utilities/cmliblzma/liblzma/simple/x86.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmp13NmBW.yaml -p=/project/git /project/git/Utilities/cmlibarchive/libarchive/archive_random.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpgFKT3j.yaml -p=/project/git /project/git/Utilities/cmlibarchive/libarchive/archive_check_magic.c
/project/git/Utilities/cmlibarchive/libarchive/archive_check_magic.c:113:3: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
                strcat(buff, state_name(lowbit));
                ^
/project/git/Utilities/cmlibarchive/libarchive/archive_check_magic.c:113:3: note: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119
/project/git/Utilities/cmlibarchive/libarchive/archive_check_magic.c:115:4: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
                        strcat(buff, "/");
                        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_check_magic.c:115:4: note: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpcLWbom.yaml -p=/project/git /project/git/Utilities/cmlibarchive/libarchive/archive_cmdline.c
/project/git/Utilities/cmlibarchive/libarchive/archive_cmdline.c:174:2: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
        strcpy(data->path, path);
        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_cmdline.c:174:2: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpHLcc3D.yaml -p=/project/git /project/git/Utilities/cmlibarchive/libarchive/archive_read_add_passphrase.c

1 warning generated.

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpKXcAC9.yaml -p=/project/git /project/git/Utilities/cmlibarchive/libarchive/archive_read_append_filter.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpnXj4dS.yaml -p=/project/git /project/git/Utilities/cmlibarchive/libarchive/archive_getdate.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmp6gJGwP.yaml -p=/project/git /project/git/Utilities/cmexpat/lib/xmltok.c
/project/git/Utilities/cmexpat/lib/xmltok.c:1415:17: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]
      *(*toP)++ = *utf8++;
                ^
/project/git/Utilities/cmexpat/lib/xmltok.c:1393:3: note: Loop condition is true.  Entering loop body
  for (;;) {
  ^
/project/git/Utilities/cmexpat/lib/xmltok.c:1396:9: note: Assuming the condition is false
    if (*fromP == fromLim)
        ^
/project/git/Utilities/cmexpat/lib/xmltok.c:1396:5: note: Taking false branch
    if (*fromP == fromLim)
    ^
/project/git/Utilities/cmexpat/lib/xmltok.c:1400:9: note: Assuming 'n' is equal to 0
    if (n == 0) {
        ^
/project/git/Utilities/cmexpat/lib/xmltok.c:1400:5: note: Taking true branch
    if (n == 0) {
    ^
/project/git/Utilities/cmexpat/lib/xmltok.c:1402:11: note: Calling 'XmlUtf8Encode'
      n = XmlUtf8Encode(c, buf);
          ^
/project/git/Utilities/cmexpat/lib/xmltok.c:1297:7: note: Assuming 'c' is < 0
  if (c < 0)
      ^
/project/git/Utilities/cmexpat/lib/xmltok.c:1297:3: note: Taking true branch
  if (c < 0)
  ^
/project/git/Utilities/cmexpat/lib/xmltok.c:1402:11: note: Returning from 'XmlUtf8Encode'
      n = XmlUtf8Encode(c, buf);
          ^
/project/git/Utilities/cmexpat/lib/xmltok.c:1403:11: note: Assuming the condition is false
      if (n > toLim - *toP)
          ^
/project/git/Utilities/cmexpat/lib/xmltok.c:1403:7: note: Taking false branch
      if (n > toLim - *toP)
      ^
/project/git/Utilities/cmexpat/lib/xmltok.c:1415:17: note: Assigned value is garbage or undefined
      *(*toP)++ = *utf8++;
                ^

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpOeRZ0C.yaml -p=/project/git /project/git/Utilities/cmlibarchive/libarchive/archive_options.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpLaLo22.yaml -p=/project/git /project/git/Utilities/cmlibarchive/libarchive/archive_read_disk_set_standard_lookup.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpPNV3lN.yaml -p=/project/git /project/git/Utilities/cmlibarchive/libarchive/archive_read_extract.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpdEP7HF.yaml -p=/project/git /project/git/Utilities/cmliblzma/liblzma/common/index.c
/project/git/Utilities/cmliblzma/liblzma/common/index.c:265:11: warning: Access to field 'parent' results in a dereference of a null pointer (loaded from variable 'node') [clang-analyzer-core.NullDereference]
                        node = node->parent;
                               ^
/project/git/Utilities/cmliblzma/liblzma/common/index.c:929:21: note: Calling 'index_init_plain'
        lzma_index *dest = index_init_plain(allocator);
                           ^
/project/git/Utilities/cmliblzma/liblzma/common/index.c:383:6: note: Assuming 'i' is not equal to NULL
        if (i != NULL) {
            ^
/project/git/Utilities/cmliblzma/liblzma/common/index.c:383:2: note: Taking true branch
        if (i != NULL) {
        ^
/project/git/Utilities/cmliblzma/liblzma/common/index.c:384:3: note: Calling 'index_tree_init'
                index_tree_init(&i->streams);
                ^
/project/git/Utilities/cmliblzma/liblzma/common/index.c:186:2: note: Null pointer value stored to field 'rightmost'
        tree->rightmost = NULL;
        ^
/project/git/Utilities/cmliblzma/liblzma/common/index.c:384:3: note: Returning from 'index_tree_init'
                index_tree_init(&i->streams);
                ^
/project/git/Utilities/cmliblzma/liblzma/common/index.c:929:21: note: Returning from 'index_init_plain'
        lzma_index *dest = index_init_plain(allocator);
                           ^
/project/git/Utilities/cmliblzma/liblzma/common/index.c:930:2: note: Taking false branch
        if (dest == NULL)
        ^
/project/git/Utilities/cmliblzma/liblzma/common/index.c:945:3: note: Taking false branch
                if (deststream == NULL) {
                ^
/project/git/Utilities/cmliblzma/liblzma/common/index.c:950:3: note: Calling 'index_tree_append'
                index_tree_append(&dest->streams, &deststream->node);
                ^
/project/git/Utilities/cmliblzma/liblzma/common/index.c:232:2: note: Null pointer value stored to field 'parent'
        node->parent = tree->rightmost;
        ^
/project/git/Utilities/cmliblzma/liblzma/common/index.c:239:2: note: Taking true branch
        if (tree->root == NULL) {
        ^
/project/git/Utilities/cmliblzma/liblzma/common/index.c:243:3: note: Returning without writing to 'node->parent'
                return;
                ^
/project/git/Utilities/cmliblzma/liblzma/common/index.c:950:3: note: Returning from 'index_tree_append'
                index_tree_append(&dest->streams, &deststream->node);
                ^
/project/git/Utilities/cmliblzma/liblzma/common/index.c:953:11: note: Assuming 'srcstream' is not equal to NULL
        } while (srcstream != NULL);
                 ^
/project/git/Utilities/cmliblzma/liblzma/common/index.c:942:2: note: Loop condition is true. Execution continues on line 943
        do {
        ^
/project/git/Utilities/cmliblzma/liblzma/common/index.c:945:3: note: Taking false branch
                if (deststream == NULL) {
                ^
/project/git/Utilities/cmliblzma/liblzma/common/index.c:950:3: note: Calling 'index_tree_append'
                index_tree_append(&dest->streams, &deststream->node);
                ^
/project/git/Utilities/cmliblzma/liblzma/common/index.c:239:2: note: Taking false branch
        if (tree->root == NULL) {
        ^
/project/git/Utilities/cmliblzma/liblzma/common/index.c:261:6: note: Assuming 'up' is not equal to 0
        if (up != 0) {
            ^
/project/git/Utilities/cmliblzma/liblzma/common/index.c:261:2: note: Taking true branch
        if (up != 0) {
        ^
/project/git/Utilities/cmliblzma/liblzma/common/index.c:266:12: note: Assuming the condition is true
                } while (--up > 0);
                         ^
/project/git/Utilities/cmliblzma/liblzma/common/index.c:264:3: note: Loop condition is true. Execution continues on line 265
                do {
                ^
/project/git/Utilities/cmliblzma/liblzma/common/index.c:265:4: note: Null pointer value stored to 'node'
                        node = node->parent;
                        ^
/project/git/Utilities/cmliblzma/liblzma/common/index.c:266:12: note: Assuming the condition is true
                } while (--up > 0);
                         ^
/project/git/Utilities/cmliblzma/liblzma/common/index.c:264:3: note: Loop condition is true. Execution continues on line 265
                do {
                ^
/project/git/Utilities/cmliblzma/liblzma/common/index.c:265:11: note: Access to field 'parent' results in a dereference of a null pointer (loaded from variable 'node')
                        node = node->parent;
                               ^
/project/git/Utilities/cmliblzma/liblzma/common/index.c:269:28: warning: Access to field 'right' results in a dereference of a null pointer (loaded from variable 'node') [clang-analyzer-core.NullDereference]
                index_tree_node *pivot = node->right;
                                         ^
/project/git/Utilities/cmliblzma/liblzma/common/index.c:929:21: note: Calling 'index_init_plain'
        lzma_index *dest = index_init_plain(allocator);
                           ^
/project/git/Utilities/cmliblzma/liblzma/common/index.c:383:6: note: Assuming 'i' is not equal to NULL
        if (i != NULL) {
            ^
2 warnings generated.

/project/git/Utilities/cmliblzma/liblzma/common/index.c:383:2: note: Taking true branch
        if (i != NULL) {
        ^
/project/git/Utilities/cmliblzma/liblzma/common/index.c:384:3: note: Calling 'index_tree_init'
                index_tree_init(&i->streams);
                ^
/project/git/Utilities/cmliblzma/liblzma/common/index.c:186:2: note: Null pointer value stored to field 'rightmost'
        tree->rightmost = NULL;
        ^
/project/git/Utilities/cmliblzma/liblzma/common/index.c:384:3: note: Returning from 'index_tree_init'
                index_tree_init(&i->streams);
                ^
/project/git/Utilities/cmliblzma/liblzma/common/index.c:929:21: note: Returning from 'index_init_plain'
        lzma_index *dest = index_init_plain(allocator);
                           ^
/project/git/Utilities/cmliblzma/liblzma/common/index.c:930:2: note: Taking false branch
        if (dest == NULL)
        ^
/project/git/Utilities/cmliblzma/liblzma/common/index.c:945:3: note: Taking false branch
                if (deststream == NULL) {
                ^
/project/git/Utilities/cmliblzma/liblzma/common/index.c:950:3: note: Calling 'index_tree_append'
                index_tree_append(&dest->streams, &deststream->node);
                ^
/project/git/Utilities/cmliblzma/liblzma/common/index.c:232:2: note: Null pointer value stored to field 'parent'
        node->parent = tree->rightmost;
        ^
/project/git/Utilities/cmliblzma/liblzma/common/index.c:239:2: note: Taking true branch
        if (tree->root == NULL) {
        ^
/project/git/Utilities/cmliblzma/liblzma/common/index.c:243:3: note: Returning without writing to 'node->parent'
                return;
                ^
/project/git/Utilities/cmliblzma/liblzma/common/index.c:950:3: note: Returning from 'index_tree_append'
                index_tree_append(&dest->streams, &deststream->node);
                ^
/project/git/Utilities/cmliblzma/liblzma/common/index.c:953:11: note: Assuming 'srcstream' is not equal to NULL
        } while (srcstream != NULL);
                 ^
/project/git/Utilities/cmliblzma/liblzma/common/index.c:942:2: note: Loop condition is true. Execution continues on line 943
        do {
        ^
/project/git/Utilities/cmliblzma/liblzma/common/index.c:945:3: note: Taking false branch
                if (deststream == NULL) {
                ^
/project/git/Utilities/cmliblzma/liblzma/common/index.c:950:3: note: Calling 'index_tree_append'
                index_tree_append(&dest->streams, &deststream->node);
                ^
/project/git/Utilities/cmliblzma/liblzma/common/index.c:239:2: note: Taking false branch
        if (tree->root == NULL) {
        ^
/project/git/Utilities/cmliblzma/liblzma/common/index.c:261:6: note: Assuming 'up' is not equal to 0
        if (up != 0) {
            ^
/project/git/Utilities/cmliblzma/liblzma/common/index.c:261:2: note: Taking true branch
        if (up != 0) {
        ^
/project/git/Utilities/cmliblzma/liblzma/common/index.c:266:12: note: Assuming the condition is true
                } while (--up > 0);
                         ^
/project/git/Utilities/cmliblzma/liblzma/common/index.c:264:3: note: Loop condition is true. Execution continues on line 265
                do {
                ^
/project/git/Utilities/cmliblzma/liblzma/common/index.c:265:4: note: Null pointer value stored to 'node'
                        node = node->parent;
                        ^
/project/git/Utilities/cmliblzma/liblzma/common/index.c:266:12: note: Assuming the condition is false
                } while (--up > 0);
                         ^
/project/git/Utilities/cmliblzma/liblzma/common/index.c:264:3: note: Loop condition is false.  Exiting loop
                do {
                ^
/project/git/Utilities/cmliblzma/liblzma/common/index.c:269:28: note: Access to field 'right' results in a dereference of a null pointer (loaded from variable 'node')
                index_tree_node *pivot = node->right;
                                         ^

2 warnings generated.

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmplkQpIJ.yaml -p=/project/git /project/git/Utilities/cmlibarchive/libarchive/archive_read_open_fd.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmp6m8khI.yaml -p=/project/git /project/git/Utilities/cmlibarchive/libarchive/archive_read_extract2.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpRBjst0.yaml -p=/project/git /project/git/Utilities/cmlibarchive/libarchive/archive_read_open_file.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpiegZBm.yaml -p=/project/git /project/git/Utilities/cmlibarchive/libarchive/archive_rb.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpJ7Gz9I.yaml -p=/project/git /project/git/Utilities/cmlibarchive/libarchive/archive_read_data_into_fd.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmp1EE1LH.yaml -p=/project/git /project/git/Utilities/cmlibarchive/libarchive/archive_read_open_memory.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmphpj4pm.yaml -p=/project/git /project/git/Utilities/cmlibarchive/libarchive/archive_read_open_filename.c
/project/git/Utilities/cmlibarchive/libarchive/archive_read_open_filename.c:130:3: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
                strcpy(mine->filename.m, filename);
                ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_open_filename.c:130:3: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
/project/git/Utilities/cmlibarchive/libarchive/archive_read_open_filename.c:201:3: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
                strcpy(mine->filename.m, fn.s);
                ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_open_filename.c:201:3: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmp058NZl.yaml -p=/project/git /project/git/Utilities/cmlibarchive/libarchive/archive_ppmd7.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpRl3XHE.yaml -p=/project/git /project/git/Utilities/cmlibarchive/libarchive/archive_read_support_filter_all.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpYOm8XW.yaml -p=/project/git /project/git/Utilities/cmlibarchive/libarchive/archive_read_set_format.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmp7BrPLH.yaml -p=/project/git /project/git/Utilities/cmlibarchive/libarchive/archive_read_support_filter_grzip.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpRA8t03.yaml -p=/project/git /project/git/Utilities/cmlibarchive/libarchive/archive_read_support_filter_bzip2.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpwg_Hxq.yaml -p=/project/git /project/git/Utilities/cmlibarchive/libarchive/archive_read_support_filter_lrzip.c

3 warnings generated.

1 warning generated.

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmplsKkcD.yaml -p=/project/git /project/git/Utilities/cmlibarchive/libarchive/archive_read_support_filter_lz4.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpZ6P9TF.yaml -p=/project/git /project/git/Utilities/cmlibarchive/libarchive/archive_read_support_filter_lzop.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpmmRrmo.yaml -p=/project/git /project/git/Utilities/cmlibarchive/libarchive/archive_read_support_filter_none.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpahz6X_.yaml -p=/project/git /project/git/Utilities/cmlibarchive/libarchive/archive_read_set_options.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpVJqaGv.yaml -p=/project/git /project/git/Utilities/cmlibarchive/libarchive/archive_read_disk_entry_from_file.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmppiiBF5.yaml -p=/project/git /project/git/Utilities/cmbzip2/bzlib.c
/project/git/Utilities/cmbzip2/bzlib.c:448:10: warning: Value stored to 'progress' is never read [clang-analyzer-deadcode.DeadStores]
         progress = handle_compress ( strm );
         ^
/project/git/Utilities/cmbzip2/bzlib.c:448:10: note: Value stored to 'progress' is never read
/project/git/Utilities/cmbzip2/bzlib.c:1419:4: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
   strcat(mode2, writing ? "w" : "r" );
   ^
/project/git/Utilities/cmbzip2/bzlib.c:1419:4: note: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119
/project/git/Utilities/cmbzip2/bzlib.c:1420:4: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
   strcat(mode2,"b");   /* binary mode */
   ^
/project/git/Utilities/cmbzip2/bzlib.c:1420:4: note: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpnkoVk2.yaml -p=/project/git /project/git/Utilities/cmlibarchive/libarchive/archive_read_support_filter_zstd.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpS1BMsc.yaml -p=/project/git /project/git/Utilities/cmlibarchive/libarchive/archive_pathmatch.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpxd4lfD.yaml -p=/project/git /project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_all.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpW9Mdys.yaml -p=/project/git /project/git/Utilities/cmlibarchive/libarchive/archive_match.c
/project/git/Utilities/cmlibarchive/libarchive/archive_match.c:582:2: warning: Value stored to 'r' is never read [clang-analyzer-deadcode.DeadStores]
        r = archive_read_support_format_raw(ar);
        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_match.c:582:2: note: Value stored to 'r' is never read

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpM3WWNv.yaml -p=/project/git /project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_by_code.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmp9xnWmM.yaml -p=/project/git /project/git/Utilities/cmlibarchive/libarchive/archive_read_support_filter_gzip.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpcrB4pA.yaml -p=/project/git /project/git/Utilities/cmlibarchive/libarchive/archive_read_support_filter_xz.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpUctHVE.yaml -p=/project/git /project/git/Utilities/cmlibarchive/libarchive/archive_read_support_filter_compress.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpG2eDJS.yaml -p=/project/git /project/git/Utilities/cmlibarchive/libarchive/archive_read_support_filter_rpm.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpkPyXWE.yaml -p=/project/git /project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_empty.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpa5EaU2.yaml -p=/project/git /project/git/Utilities/cmlibarchive/libarchive/archive_read_support_filter_program.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpPa6xC3.yaml -p=/project/git /project/git/Utilities/cmlibarchive/libarchive/archive_entry.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmp1M6ukA.yaml -p=/project/git /project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_raw.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpXaVt9a.yaml -p=/project/git /project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_ar.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpi473LZ.yaml -p=/project/git /project/git/Utilities/cmcurl/lib/mime.c
/project/git/Utilities/cmcurl/lib/urldata.h:1209:8: warning: Excessive padding in 'struct UrlState' (61 padding bytes, where 5 is optimal). 
Optimal fields order: 
conn_cache, 
lastconnect, 
headerbuff, 
headersize, 
buffer, 
ulbuf, 
current_speed, 
first_host, 
session, 
sessionage, 
scratch, 
prev_signal, 
resolver, 
most_recent_ftp_entrypath, 
crlf_conversions, 
pathbuffer, 
path, 
range, 
resume_from, 
rtsp_next_client_CSeq, 
rtsp_next_server_CSeq, 
rtsp_CSeq_recv, 
infilesize, 
drain, 
fread_func, 
in, 
stream_depends_on, 
keeps_speed, 
expiretime, 
authhost, 
authproxy, 
timeoutlist, 
timenode, 
digest, 
proxydigest, 
tempwrite, 
expires, 
first_remote_port, 
tempcount, 
os_errno, 
httpversion, 
stream_weight, 
multi_owned_by_easy, 
this_is_a_follow, 
refused_stream, 
errorbuf, 
allow_port, 
authproblem, 
ftp_trying_alternative, 
wildcardmatch, 
expect100header, 
prev_block_had_trailing_cr, 
slash_removed, 
use_range, 
rangestringalloc, 
done, 
stream_depends_e, 
consider reordering the fields or adding explicit padding members [clang-analyzer-optin.performance.Padding]
struct UrlState {
       ^
/project/git/Utilities/cmcurl/lib/urldata.h:1209:8: note: Excessive padding in 'struct UrlState' (61 padding bytes, where 5 is optimal). Optimal fields order: conn_cache, lastconnect, headerbuff, headersize, buffer, ulbuf, current_speed, first_host, session, sessionage, scratch, prev_signal, resolver, most_recent_ftp_entrypath, crlf_conversions, pathbuffer, path, range, resume_from, rtsp_next_client_CSeq, rtsp_next_server_CSeq, rtsp_CSeq_recv, infilesize, drain, fread_func, in, stream_depends_on, keeps_speed, expiretime, authhost, authproxy, timeoutlist, timenode, digest, proxydigest, tempwrite, expires, first_remote_port, tempcount, os_errno, httpversion, stream_weight, multi_owned_by_easy, this_is_a_follow, refused_stream, errorbuf, allow_port, authproblem, ftp_trying_alternative, wildcardmatch, expect100header, prev_block_had_trailing_cr, slash_removed, use_range, rangestringalloc, done, stream_depends_e, consider reordering the fields or adding explicit padding members
/project/git/Utilities/cmcurl/lib/urldata.h:1457:8: warning: Excessive padding in 'struct UserDefined' (120 padding bytes, where 0 is optimal). 
Optimal fields order: 
err, 
debugdata, 
errorbuffer, 
proxyport, 
out, 
in_set, 
writeheader, 
rtp_out, 
use_port, 
httpauth, 
proxyauth, 
socks5auth, 
followlocation, 
maxredirs, 
postfields, 
seek_func, 
postfieldsize, 
fwrite_func, 
fwrite_header, 
fwrite_rtp, 
fread_func_set, 
fprogress, 
fxferinfo, 
fdebug, 
ioctl_func, 
fsockopt, 
sockopt_client, 
fopensocket, 
opensocket_client, 
fclosesocket, 
closesocket_client, 
seek_client, 
convfromnetwork, 
convtonetwork, 
convfromutf8, 
progress_client, 
ioctl_client, 
timeout, 
connecttimeout, 
accepttimeout, 
happy_eyeballs_timeout, 
server_response_timeout, 
tftp_blksize, 
filesize, 
low_speed_limit, 
low_speed_time, 
max_send_speed, 
max_recv_speed, 
set_resume_from, 
headers, 
proxyheaders, 
httppost, 
quote, 
postquote, 
prequote, 
source_quote, 
source_prequote, 
source_postquote, 
telnet_options, 
resolve, 
connect_to, 
timevalue, 
httpversion, 
general_ssl, 
dns_cache_timeout, 
buffer_size, 
upload_buffer_size, 
private_data, 
http200aliases, 
ipver, 
max_filesize, 
ssh_keyfunc, 
ssh_keyfunc_userp, 
ssh_auth_types, 
new_file_perms, 
new_directory_perms, 
allowed_protocols, 
redir_protocols, 
mail_rcpt, 
rtspversion, 
chunk_bgn, 
chunk_end, 
fnmatch, 
fnmatch_data, 
gssapi_delegation, 
tcp_keepidle, 
tcp_keepintvl, 
maxconnects, 
expect_100_timeout, 
stream_depends_on, 
stream_dependents, 
resolver_start, 
resolver_start_client, 
ssl, 
proxy_ssl, 
mimepost, 
str, 
keep_post, 
localportrange, 
is_fread_set, 
is_fwrite_set, 
timecondition, 
httpreq, 
proxytype, 
ftp_filemethod, 
ftp_create_missing_dirs, 
use_netrc, 
use_ssl, 
ftpsslauth, 
ftp_ccc, 
scope_id, 
rtspreq, 
stream_weight, 
localport, 
free_referer, 
tftp_no_options, 
sep_headers, 
cookiesession, 
crlf, 
strip_path_slash, 
ssh_compression, 
get_filetime, 
tunnel_thru_httpproxy, 
prefer_ascii, 
ftp_append, 
ftp_list_only, 
ftp_use_port, 
hide_progress, 
http_fail_on_error, 
http_keep_sending_on_error, 
http_follow_location, 
http_transfer_encoding, 
allow_auth_to_other_hosts, 
include_header, 
http_set_referer, 
http_auto_referer, 
opt_no_body, 
upload, 
verbose, 
krb, 
reuse_forbid, 
reuse_fresh, 
ftp_use_epsv, 
ftp_use_eprt, 
ftp_use_pret, 
no_signal, 
global_dns_cache, 
tcp_nodelay, 
ignorecl, 
ftp_skip_ip, 
connect_only, 
http_te_skip, 
http_ce_skip, 
proxy_transfer_mode, 
sasl_ir, 
wildcard_enabled, 
tcp_keepalive, 
tcp_fastopen, 
ssl_enable_npn, 
ssl_enable_alpn, 
path_as_is, 
pipewait, 
suppress_connect_headers, 
dns_shuffle_addresses, 
stream_depends_e, 
haproxyprotocol, 
abstract_unix_socket, 
disallow_username_in_url, 
consider reordering the fields or adding explicit padding members [clang-analyzer-optin.performance.Padding]
struct UserDefined {
       ^
2 warnings generated.

/project/git/Utilities/cmcurl/lib/urldata.h:1457:8: note: Excessive padding in 'struct UserDefined' (120 padding bytes, where 0 is optimal). Optimal fields order: err, debugdata, errorbuffer, proxyport, out, in_set, writeheader, rtp_out, use_port, httpauth, proxyauth, socks5auth, followlocation, maxredirs, postfields, seek_func, postfieldsize, fwrite_func, fwrite_header, fwrite_rtp, fread_func_set, fprogress, fxferinfo, fdebug, ioctl_func, fsockopt, sockopt_client, fopensocket, opensocket_client, fclosesocket, closesocket_client, seek_client, convfromnetwork, convtonetwork, convfromutf8, progress_client, ioctl_client, timeout, connecttimeout, accepttimeout, happy_eyeballs_timeout, server_response_timeout, tftp_blksize, filesize, low_speed_limit, low_speed_time, max_send_speed, max_recv_speed, set_resume_from, headers, proxyheaders, httppost, quote, postquote, prequote, source_quote, source_prequote, source_postquote, telnet_options, resolve, connect_to, timevalue, httpversion, general_ssl, dns_cache_timeout, buffer_size, upload_buffer_size, private_data, http200aliases, ipver, max_filesize, ssh_keyfunc, ssh_keyfunc_userp, ssh_auth_types, new_file_perms, new_directory_perms, allowed_protocols, redir_protocols, mail_rcpt, rtspversion, chunk_bgn, chunk_end, fnmatch, fnmatch_data, gssapi_delegation, tcp_keepidle, tcp_keepintvl, maxconnects, expect_100_timeout, stream_depends_on, stream_dependents, resolver_start, resolver_start_client, ssl, proxy_ssl, mimepost, str, keep_post, localportrange, is_fread_set, is_fwrite_set, timecondition, httpreq, proxytype, ftp_filemethod, ftp_create_missing_dirs, use_netrc, use_ssl, ftpsslauth, ftp_ccc, scope_id, rtspreq, stream_weight, localport, free_referer, tftp_no_options, sep_headers, cookiesession, crlf, strip_path_slash, ssh_compression, get_filetime, tunnel_thru_httpproxy, prefer_ascii, ftp_append, ftp_list_only, ftp_use_port, hide_progress, http_fail_on_error, http_keep_sending_on_error, http_follow_location, http_transfer_encoding, allow_auth_to_other_hosts, include_header, http_set_referer, http_auto_referer, opt_no_body, upload, verbose, krb, reuse_forbid, reuse_fresh, ftp_use_epsv, ftp_use_eprt, ftp_use_pret, no_signal, global_dns_cache, tcp_nodelay, ignorecl, ftp_skip_ip, connect_only, http_te_skip, http_ce_skip, proxy_transfer_mode, sasl_ir, wildcard_enabled, tcp_keepalive, tcp_fastopen, ssl_enable_npn, ssl_enable_alpn, path_as_is, pipewait, suppress_connect_headers, dns_shuffle_addresses, stream_depends_e, haproxyprotocol, abstract_unix_socket, disallow_username_in_url, consider reordering the fields or adding explicit padding members

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpedY8mJ.yaml -p=/project/git /project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_xar.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpT3Hyx7.yaml -p=/project/git /project/git/Utilities/cmlibarchive/libarchive/archive_read.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmp1xunST.yaml -p=/project/git /project/git/Utilities/cmlibarchive/libarchive/archive_acl.c
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:757:12: warning: Potential leak of memory pointed to by 'wp' [clang-analyzer-unix.Malloc]
                        return (NULL);
                                ^
/usr/local/bin/../lib/clang/8.0.0/include/stddef.h:105:24: note: expanded from macro 'NULL'
#  define NULL ((void*)0)
                       ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:688:2: note: Taking false branch
        if (want_type == 0)
        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:691:2: note: Taking false branch
        if (want_type == ARCHIVE_ENTRY_ACL_TYPE_POSIX1E)
        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:696:6: note: Assuming 'length' is not equal to 0
        if (length == 0)
            ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:696:2: note: Taking false branch
        if (length == 0)
        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:699:6: note: Assuming the condition is false
        if (flags & ARCHIVE_ENTRY_ACL_STYLE_SEPARATOR_COMMA)
            ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:699:2: note: Taking false branch
        if (flags & ARCHIVE_ENTRY_ACL_STYLE_SEPARATOR_COMMA)
        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:705:23: note: Memory is allocated
        wp = ws = (wchar_t *)malloc(length * sizeof(wchar_t));
                             ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:706:6: note: Assuming 'wp' is not equal to NULL
        if (wp == NULL) {
            ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:706:2: note: Taking false branch
        if (wp == NULL) {
        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:713:2: note: Taking false branch
        if ((want_type & ARCHIVE_ENTRY_ACL_TYPE_ACCESS) != 0) {
        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:728:27: note: Assuming 'ap' is not equal to NULL
        for (ap = acl->acl_head; ap != NULL; ap = ap->next) {
                                 ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:728:2: note: Loop condition is true.  Entering loop body
        for (ap = acl->acl_head; ap != NULL; ap = ap->next) {
        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:729:7: note: Assuming the condition is false
                if ((ap->type & want_type) == 0)
                    ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:729:3: note: Taking false branch
                if ((ap->type & want_type) == 0)
                ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:735:8: note: Assuming the condition is false
                if ((ap->type == ARCHIVE_ENTRY_ACL_TYPE_ACCESS)
                     ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:736:7: note: Left side of '&&' is false
                    && (ap->tag == ARCHIVE_ENTRY_ACL_USER_OBJ
                    ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:740:7: note: Assuming the condition is false
                if (ap->type == ARCHIVE_ENTRY_ACL_TYPE_DEFAULT &&
                    ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:740:50: note: Left side of '&&' is false
                if (ap->type == ARCHIVE_ENTRY_ACL_TYPE_DEFAULT &&
                                                               ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:746:7: note: Assuming 'r' is not equal to 0
                if (r == 0) {
                    ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:746:3: note: Taking false branch
                if (r == 0) {
                ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:756:14: note: Assuming 'r' is < 0
                } else if (r < 0 && errno == ENOMEM)
                           ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:756:14: note: Left side of '&&' is true
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:756:10: note: Taking true branch
                } else if (r < 0 && errno == ENOMEM)
                       ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:757:12: note: Potential leak of memory pointed to by 'wp'
                        return (NULL);
                                ^
/usr/local/bin/../lib/clang/8.0.0/include/stddef.h:105:24: note: expanded from macro 'NULL'
#  define NULL ((void*)0)
                       ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1024:3: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
                strcpy(*p, prefix);
                ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1024:3: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1032:4: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
                        strcpy(*p, "owner@");
                        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1032:4: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1037:3: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
                strcpy(*p, "user");
                ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1037:3: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1043:4: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
                        strcpy(*p, "group@");
                        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1043:4: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1048:3: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
                strcpy(*p, "group");
                ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1048:3: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1051:3: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
                strcpy(*p, "mask");
                ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1051:3: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1056:3: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
                strcpy(*p, "other");
                ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1056:3: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1061:3: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
                strcpy(*p, "everyone@");
                ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1061:3: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1072:4: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
                        strcpy(*p, name);
                        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1072:4: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1109:4: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
                        strcpy(*p, "allow");
                        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1109:4: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1112:4: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
                        strcpy(*p, "deny");
                        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1112:4: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1115:4: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
                        strcpy(*p, "audit");
                        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1115:4: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1118:4: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
                        strcpy(*p, "alarm");
                        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1118:4: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1315:9: warning: Null pointer argument in call to memory comparison function [clang-analyzer-unix.cstring.NullArg]
                                if (wmemcmp(s, L"user", 4) == 0)
                                    ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1159:2: note: Control jumps to 'case 15360:'  at line 1167
        switch (want_type) {
        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1169:3: note:  Execution continues on line 1174
                break;
                ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1174:9: note: Assuming 'text' is not equal to NULL
        while (text != NULL && *text != L'\0') {
               ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1174:9: note: Left side of '&&' is true
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1174:25: note: Assuming the condition is true
        while (text != NULL && *text != L'\0') {
                               ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1174:2: note: Loop condition is true.  Entering loop body
        while (text != NULL && *text != L'\0') {
        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1183:4: note: Taking true branch
                        if (fields < numfields) {
                        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1184:5: note: Value assigned to field 'start'
                                field[fields].start = start;
                                ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1188:12: note: Assuming the condition is true
                } while (sep == L':');
                         ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1180:3: note: Loop condition is true. Execution continues on line 1181
                do {
                ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1183:4: note: Taking true branch
                        if (fields < numfields) {
                        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1188:12: note: Assuming the condition is true
                } while (sep == L':');
                         ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1180:3: note: Loop condition is true. Execution continues on line 1181
                do {
                ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1183:4: note: Taking true branch
                        if (fields < numfields) {
                        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1188:12: note: Assuming the condition is false
                } while (sep == L':');
                         ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1180:3: note: Loop condition is false.  Exiting loop
                do {
                ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1191:3: note: Loop condition is true.  Entering loop body
                for (n = fields; n < numfields; ++n)
                ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1191:3: note: Loop condition is true.  Entering loop body
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1191:3: note: Loop condition is true.  Entering loop body
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1191:3: note: Loop condition is false. Execution continues on line 1194
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1194:7: note: Assuming pointer value is null
                if (field[0].start != NULL && *(field[0].start) == L'#') {
                    ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1194:30: note: Left side of '&&' is false
                if (field[0].start != NULL && *(field[0].start) == L'#') {
                                           ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1205:3: note: Taking false branch
                if (want_type != ARCHIVE_ENTRY_ACL_TYPE_NFS4) {
                ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1309:4: note: Null pointer value stored to 's'
                        s = field[0].start;
                        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1313:4: note: Control jumps to 'case 4:'  at line 1314
                        switch (len) {
                        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1315:9: note: Null pointer argument in call to memory comparison function
                                if (wmemcmp(s, L"user", 4) == 0)
                                    ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1319:9: warning: Null pointer argument in call to memory comparison function [clang-analyzer-unix.cstring.NullArg]
                                if (wmemcmp(s, L"group", 5) == 0)
                                    ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1159:2: note: Control jumps to 'case 15360:'  at line 1167
        switch (want_type) {
        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1169:3: note:  Execution continues on line 1174
                break;
                ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1174:9: note: Assuming 'text' is not equal to NULL
        while (text != NULL && *text != L'\0') {
               ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1174:9: note: Left side of '&&' is true
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1174:25: note: Assuming the condition is true
        while (text != NULL && *text != L'\0') {
                               ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1174:2: note: Loop condition is true.  Entering loop body
        while (text != NULL && *text != L'\0') {
        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1183:4: note: Taking true branch
                        if (fields < numfields) {
                        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1184:5: note: Value assigned to field 'start'
                                field[fields].start = start;
                                ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1188:12: note: Assuming the condition is true
                } while (sep == L':');
                         ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1180:3: note: Loop condition is true. Execution continues on line 1181
                do {
                ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1183:4: note: Taking true branch
                        if (fields < numfields) {
                        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1188:12: note: Assuming the condition is true
                } while (sep == L':');
                         ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1180:3: note: Loop condition is true. Execution continues on line 1181
                do {
                ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1183:4: note: Taking true branch
                        if (fields < numfields) {
                        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1188:12: note: Assuming the condition is false
                } while (sep == L':');
                         ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1180:3: note: Loop condition is false.  Exiting loop
                do {
                ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1191:3: note: Loop condition is true.  Entering loop body
                for (n = fields; n < numfields; ++n)
                ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1191:3: note: Loop condition is true.  Entering loop body
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1191:3: note: Loop condition is true.  Entering loop body
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1191:3: note: Loop condition is false. Execution continues on line 1194
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1194:7: note: Assuming pointer value is null
                if (field[0].start != NULL && *(field[0].start) == L'#') {
                    ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1194:30: note: Left side of '&&' is false
                if (field[0].start != NULL && *(field[0].start) == L'#') {
                                           ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1205:3: note: Taking false branch
                if (want_type != ARCHIVE_ENTRY_ACL_TYPE_NFS4) {
                ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1309:4: note: Null pointer value stored to 's'
                        s = field[0].start;
                        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1313:4: note: Control jumps to 'case 5:'  at line 1318
                        switch (len) {
                        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1319:9: note: Null pointer argument in call to memory comparison function
                                if (wmemcmp(s, L"group", 5) == 0)
                                    ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1323:9: warning: Null pointer argument in call to memory comparison function [clang-analyzer-unix.cstring.NullArg]
                                if (wmemcmp(s, L"owner@", 6) == 0)
                                    ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1159:2: note: Control jumps to 'case 15360:'  at line 1167
        switch (want_type) {
        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1169:3: note:  Execution continues on line 1174
                break;
                ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1174:9: note: Assuming 'text' is not equal to NULL
        while (text != NULL && *text != L'\0') {
               ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1174:9: note: Left side of '&&' is true
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1174:25: note: Assuming the condition is true
        while (text != NULL && *text != L'\0') {
                               ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1174:2: note: Loop condition is true.  Entering loop body
        while (text != NULL && *text != L'\0') {
        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1183:4: note: Taking true branch
                        if (fields < numfields) {
                        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1184:5: note: Value assigned to field 'start'
                                field[fields].start = start;
                                ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1188:12: note: Assuming the condition is true
                } while (sep == L':');
                         ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1180:3: note: Loop condition is true. Execution continues on line 1181
                do {
                ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1183:4: note: Taking true branch
                        if (fields < numfields) {
                        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1188:12: note: Assuming the condition is true
                } while (sep == L':');
                         ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1180:3: note: Loop condition is true. Execution continues on line 1181
                do {
                ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1183:4: note: Taking true branch
                        if (fields < numfields) {
                        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1188:12: note: Assuming the condition is false
                } while (sep == L':');
                         ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1180:3: note: Loop condition is false.  Exiting loop
                do {
                ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1191:3: note: Loop condition is true.  Entering loop body
                for (n = fields; n < numfields; ++n)
                ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1191:3: note: Loop condition is true.  Entering loop body
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1191:3: note: Loop condition is true.  Entering loop body
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1191:3: note: Loop condition is false. Execution continues on line 1194
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1194:7: note: Assuming pointer value is null
                if (field[0].start != NULL && *(field[0].start) == L'#') {
                    ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1194:30: note: Left side of '&&' is false
                if (field[0].start != NULL && *(field[0].start) == L'#') {
                                           ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1205:3: note: Taking false branch
                if (want_type != ARCHIVE_ENTRY_ACL_TYPE_NFS4) {
                ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1309:4: note: Null pointer value stored to 's'
                        s = field[0].start;
                        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1313:4: note: Control jumps to 'case 6:'  at line 1322
                        switch (len) {
                        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1323:9: note: Null pointer argument in call to memory comparison function
                                if (wmemcmp(s, L"owner@", 6) == 0)
                                    ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1329:9: warning: Null pointer argument in call to memory comparison function [clang-analyzer-unix.cstring.NullArg]
                                if (wmemcmp(s, L"everyone@", 9) == 0)
                                    ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1159:2: note: Control jumps to 'case 15360:'  at line 1167
        switch (want_type) {
        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1169:3: note:  Execution continues on line 1174
                break;
                ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1174:9: note: Assuming 'text' is not equal to NULL
        while (text != NULL && *text != L'\0') {
               ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1174:9: note: Left side of '&&' is true
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1174:25: note: Assuming the condition is true
        while (text != NULL && *text != L'\0') {
                               ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1174:2: note: Loop condition is true.  Entering loop body
        while (text != NULL && *text != L'\0') {
        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1183:4: note: Taking true branch
                        if (fields < numfields) {
                        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1184:5: note: Value assigned to field 'start'
                                field[fields].start = start;
                                ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1188:12: note: Assuming the condition is true
                } while (sep == L':');
                         ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1180:3: note: Loop condition is true. Execution continues on line 1181
                do {
                ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1183:4: note: Taking true branch
                        if (fields < numfields) {
                        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1188:12: note: Assuming the condition is true
                } while (sep == L':');
                         ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1180:3: note: Loop condition is true. Execution continues on line 1181
                do {
                ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1183:4: note: Taking true branch
                        if (fields < numfields) {
                        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1188:12: note: Assuming the condition is false
                } while (sep == L':');
                         ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1180:3: note: Loop condition is false.  Exiting loop
                do {
                ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1191:3: note: Loop condition is true.  Entering loop body
                for (n = fields; n < numfields; ++n)
                ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1191:3: note: Loop condition is true.  Entering loop body
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1191:3: note: Loop condition is true.  Entering loop body
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1191:3: note: Loop condition is false. Execution continues on line 1194
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1194:7: note: Assuming pointer value is null
                if (field[0].start != NULL && *(field[0].start) == L'#') {
                    ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1194:30: note: Left side of '&&' is false
                if (field[0].start != NULL && *(field[0].start) == L'#') {
                                           ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1205:3: note: Taking false branch
                if (want_type != ARCHIVE_ENTRY_ACL_TYPE_NFS4) {
                ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1309:4: note: Null pointer value stored to 's'
                        s = field[0].start;
                        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1313:4: note: Control jumps to 'case 9:'  at line 1328
                        switch (len) {
                        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1329:9: note: Null pointer argument in call to memory comparison function
                                if (wmemcmp(s, L"everyone@", 9) == 0)
                                    ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1786:9: warning: Null pointer passed as an argument to a 'nonnull' parameter [clang-analyzer-core.NonNullParamChecker]
                                if (memcmp(s, "user", 4) == 0)
                                    ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1627:2: note: Control jumps to 'case 15360:'  at line 1635
        switch (want_type) {
        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1637:3: note:  Execution continues on line 1642
                break;
                ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1645:9: note: Assuming 'text' is not equal to NULL
        while (text != NULL  &&  *text != '\0') {
               ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1645:9: note: Left side of '&&' is true
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1645:27: note: Assuming the condition is true
        while (text != NULL  &&  *text != '\0') {
                                 ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1645:2: note: Loop condition is true.  Entering loop body
        while (text != NULL  &&  *text != '\0') {
        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1654:4: note: Taking true branch
                        if (fields < numfields) {
                        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1655:5: note: Value assigned to field 'start'
                                field[fields].start = start;
                                ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1659:12: note: Assuming the condition is true
                } while (sep == ':');
                         ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1651:3: note: Loop condition is true. Execution continues on line 1652
                do {
                ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1654:4: note: Taking true branch
                        if (fields < numfields) {
                        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1659:12: note: Assuming the condition is true
                } while (sep == ':');
                         ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1651:3: note: Loop condition is true. Execution continues on line 1652
                do {
                ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1654:4: note: Taking true branch
                        if (fields < numfields) {
                        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1659:12: note: Assuming the condition is false
                } while (sep == ':');
                         ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1651:3: note: Loop condition is false.  Exiting loop
                do {
                ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1662:3: note: Loop condition is true.  Entering loop body
                for (n = fields; n < numfields; ++n)
                ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1662:3: note: Loop condition is true.  Entering loop body
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1662:3: note: Loop condition is true.  Entering loop body
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1662:3: note: Loop condition is false. Execution continues on line 1665
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1665:7: note: Assuming pointer value is null
                if (field[0].start != NULL && *(field[0].start) == '#') {
                    ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1665:30: note: Left side of '&&' is false
                if (field[0].start != NULL && *(field[0].start) == '#') {
                                           ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1676:3: note: Taking false branch
                if (want_type != ARCHIVE_ENTRY_ACL_TYPE_NFS4) {
                ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1780:4: note: Null pointer value stored to 's'
                        s = field[0].start;
                        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1784:4: note: Control jumps to 'case 4:'  at line 1785
                        switch (len) {
                        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1786:9: note: Null pointer passed as an argument to a 'nonnull' parameter
                                if (memcmp(s, "user", 4) == 0)
                                    ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1790:9: warning: Null pointer passed as an argument to a 'nonnull' parameter [clang-analyzer-core.NonNullParamChecker]
                                if (memcmp(s, "group", 5) == 0)
                                    ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1627:2: note: Control jumps to 'case 15360:'  at line 1635
        switch (want_type) {
        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1637:3: note:  Execution continues on line 1642
                break;
                ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1645:9: note: Assuming 'text' is not equal to NULL
        while (text != NULL  &&  *text != '\0') {
               ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1645:9: note: Left side of '&&' is true
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1645:27: note: Assuming the condition is true
        while (text != NULL  &&  *text != '\0') {
                                 ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1645:2: note: Loop condition is true.  Entering loop body
        while (text != NULL  &&  *text != '\0') {
        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1654:4: note: Taking true branch
                        if (fields < numfields) {
                        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1655:5: note: Value assigned to field 'start'
                                field[fields].start = start;
                                ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1659:12: note: Assuming the condition is true
                } while (sep == ':');
                         ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1651:3: note: Loop condition is true. Execution continues on line 1652
                do {
                ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1654:4: note: Taking true branch
                        if (fields < numfields) {
                        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1659:12: note: Assuming the condition is true
                } while (sep == ':');
                         ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1651:3: note: Loop condition is true. Execution continues on line 1652
                do {
                ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1654:4: note: Taking true branch
                        if (fields < numfields) {
                        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1659:12: note: Assuming the condition is false
                } while (sep == ':');
                         ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1651:3: note: Loop condition is false.  Exiting loop
                do {
                ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1662:3: note: Loop condition is true.  Entering loop body
                for (n = fields; n < numfields; ++n)
                ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1662:3: note: Loop condition is true.  Entering loop body
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1662:3: note: Loop condition is true.  Entering loop body
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1662:3: note: Loop condition is false. Execution continues on line 1665
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1665:7: note: Assuming pointer value is null
                if (field[0].start != NULL && *(field[0].start) == '#') {
                    ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1665:30: note: Left side of '&&' is false
                if (field[0].start != NULL && *(field[0].start) == '#') {
                                           ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1676:3: note: Taking false branch
                if (want_type != ARCHIVE_ENTRY_ACL_TYPE_NFS4) {
                ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1780:4: note: Null pointer value stored to 's'
                        s = field[0].start;
                        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1784:4: note: Control jumps to 'case 5:'  at line 1789
                        switch (len) {
                        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1790:9: note: Null pointer passed as an argument to a 'nonnull' parameter
                                if (memcmp(s, "group", 5) == 0)
                                    ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1794:9: warning: Null pointer passed as an argument to a 'nonnull' parameter [clang-analyzer-core.NonNullParamChecker]
                                if (memcmp(s, "owner@", 6) == 0)
                                    ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1627:2: note: Control jumps to 'case 15360:'  at line 1635
        switch (want_type) {
        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1637:3: note:  Execution continues on line 1642
                break;
                ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1645:9: note: Assuming 'text' is not equal to NULL
        while (text != NULL  &&  *text != '\0') {
               ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1645:9: note: Left side of '&&' is true
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1645:27: note: Assuming the condition is true
        while (text != NULL  &&  *text != '\0') {
                                 ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1645:2: note: Loop condition is true.  Entering loop body
        while (text != NULL  &&  *text != '\0') {
        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1654:4: note: Taking true branch
                        if (fields < numfields) {
                        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1655:5: note: Value assigned to field 'start'
                                field[fields].start = start;
                                ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1659:12: note: Assuming the condition is true
                } while (sep == ':');
                         ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1651:3: note: Loop condition is true. Execution continues on line 1652
                do {
                ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1654:4: note: Taking true branch
                        if (fields < numfields) {
                        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1659:12: note: Assuming the condition is true
                } while (sep == ':');
                         ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1651:3: note: Loop condition is true. Execution continues on line 1652
                do {
                ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1654:4: note: Taking true branch
                        if (fields < numfields) {
                        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1659:12: note: Assuming the condition is false
                } while (sep == ':');
                         ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1651:3: note: Loop condition is false.  Exiting loop
                do {
                ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1662:3: note: Loop condition is true.  Entering loop body
                for (n = fields; n < numfields; ++n)
                ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1662:3: note: Loop condition is true.  Entering loop body
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1662:3: note: Loop condition is true.  Entering loop body
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1662:3: note: Loop condition is false. Execution continues on line 1665
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1665:7: note: Assuming pointer value is null
                if (field[0].start != NULL && *(field[0].start) == '#') {
                    ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1665:30: note: Left side of '&&' is false
                if (field[0].start != NULL && *(field[0].start) == '#') {
                                           ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1676:3: note: Taking false branch
                if (want_type != ARCHIVE_ENTRY_ACL_TYPE_NFS4) {
                ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1780:4: note: Null pointer value stored to 's'
                        s = field[0].start;
                        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1784:4: note: Control jumps to 'case 6:'  at line 1793
                        switch (len) {
                        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1794:9: note: Null pointer passed as an argument to a 'nonnull' parameter
                                if (memcmp(s, "owner@", 6) == 0)
                                    ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1800:9: warning: Null pointer passed as an argument to a 'nonnull' parameter [clang-analyzer-core.NonNullParamChecker]
                                if (memcmp(s, "everyone@", 9) == 0)
                                    ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1627:2: note: Control jumps to 'case 15360:'  at line 1635
        switch (want_type) {
        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1637:3: note:  Execution continues on line 1642
                break;
                ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1645:9: note: Assuming 'text' is not equal to NULL
        while (text != NULL  &&  *text != '\0') {
               ^
22 warnings generated.

1 warning generated.

/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1645:9: note: Left side of '&&' is true
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1645:27: note: Assuming the condition is true
        while (text != NULL  &&  *text != '\0') {
                                 ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1645:2: note: Loop condition is true.  Entering loop body
        while (text != NULL  &&  *text != '\0') {
        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1654:4: note: Taking true branch
                        if (fields < numfields) {
                        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1655:5: note: Value assigned to field 'start'
                                field[fields].start = start;
                                ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1659:12: note: Assuming the condition is true
                } while (sep == ':');
                         ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1651:3: note: Loop condition is true. Execution continues on line 1652
                do {
                ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1654:4: note: Taking true branch
                        if (fields < numfields) {
                        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1659:12: note: Assuming the condition is true
                } while (sep == ':');
                         ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1651:3: note: Loop condition is true. Execution continues on line 1652
                do {
                ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1654:4: note: Taking true branch
                        if (fields < numfields) {
                        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1659:12: note: Assuming the condition is false
                } while (sep == ':');
                         ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1651:3: note: Loop condition is false.  Exiting loop
                do {
                ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1662:3: note: Loop condition is true.  Entering loop body
                for (n = fields; n < numfields; ++n)
                ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1662:3: note: Loop condition is true.  Entering loop body
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1662:3: note: Loop condition is true.  Entering loop body
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1662:3: note: Loop condition is false. Execution continues on line 1665
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1665:7: note: Assuming pointer value is null
                if (field[0].start != NULL && *(field[0].start) == '#') {
                    ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1665:30: note: Left side of '&&' is false
                if (field[0].start != NULL && *(field[0].start) == '#') {
                                           ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1676:3: note: Taking false branch
                if (want_type != ARCHIVE_ENTRY_ACL_TYPE_NFS4) {
                ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1780:4: note: Null pointer value stored to 's'
                        s = field[0].start;
                        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1784:4: note: Control jumps to 'case 9:'  at line 1799
                        switch (len) {
                        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_acl.c:1800:9: note: Null pointer passed as an argument to a 'nonnull' parameter
                                if (memcmp(s, "everyone@", 9) == 0)
                                    ^

1 warning generated.

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpK6JO5d.yaml -p=/project/git /project/git/Utilities/cmlibarchive/libarchive/archive_read_disk_posix.c
/project/git/Utilities/cmlibarchive/libarchive/archive_read_disk_posix.c:747:6: warning: Value stored to 'flags' is never read [clang-analyzer-deadcode.DeadStores]
                                        flags &= ~O_NOATIME;
                                        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_disk_posix.c:747:6: note: Value stored to 'flags' is never read

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpx1TzCA.yaml -p=/project/git /project/git/Utilities/cmlibarchive/libarchive/archive_util.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmp1Skkup.yaml -p=/project/git /project/git/Utilities/cmlibarchive/libarchive/archive_version_details.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpEMP_Yz.yaml -p=/project/git /project/git/Utilities/cmlibarchive/libarchive/archive_read_support_filter_uu.c
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_filter_uu.c:472:3: warning: Null pointer passed as an argument to a 'nonnull' parameter [clang-analyzer-core.NonNullParamChecker]
                memcpy(uudecode->in_buff + uudecode->in_cnt,
                ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_filter_uu.c:449:2: note: Value assigned to 'd'
        d = __archive_read_filter_ahead(self->upstream, 1, &avail_in);
        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_filter_uu.c:450:6: note: Assuming 'd' is equal to NULL
        if (d == NULL && avail_in < 0)
            ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_filter_uu.c:450:6: note: Left side of '&&' is true
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_filter_uu.c:450:19: note: Assuming 'avail_in' is >= 0
        if (d == NULL && avail_in < 0)
                         ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_filter_uu.c:450:2: note: Taking false branch
        if (d == NULL && avail_in < 0)
        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_filter_uu.c:454:2: note: Taking true branch
        if (d == NULL)
        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_filter_uu.c:460:6: note: Assuming the condition is false
        if (uudecode->state == ST_IGNORE) {
            ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_filter_uu.c:460:2: note: Taking false branch
        if (uudecode->state == ST_IGNORE) {
        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_filter_uu.c:464:6: note: Assuming the condition is true
        if (uudecode->in_cnt) {
            ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_filter_uu.c:464:2: note: Taking true branch
        if (uudecode->in_cnt) {
        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_filter_uu.c:469:7: note: Assuming the condition is false
                if (ensure_in_buff_size(self, uudecode,
                    ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_filter_uu.c:469:3: note: Taking false branch
                if (ensure_in_buff_size(self, uudecode,
                ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_filter_uu.c:472:3: note: Null pointer passed as an argument to a 'nonnull' parameter
                memcpy(uudecode->in_buff + uudecode->in_cnt,
                ^

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpIWAMZ4.yaml -p=/project/git /project/git/Utilities/cmlibarchive/libarchive/archive_virtual.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpZEbnja.yaml -p=/project/git /project/git/Utilities/cmlibarchive/libarchive/archive_write.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmp91i6DT.yaml -p=/project/git /project/git/Utilities/cmlibarchive/libarchive/archive_write_disk_set_standard_lookup.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpzvbe1z.yaml -p=/project/git /project/git/Utilities/cmlibarchive/libarchive/archive_write_open_fd.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpGpZLyk.yaml -p=/project/git /project/git/Utilities/cmlibarchive/libarchive/archive_write_open_file.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmp_TbQrj.yaml -p=/project/git /project/git/Utilities/cmlibarchive/libarchive/archive_write_open_filename.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmprOXGDV.yaml -p=/project/git /project/git/Utilities/cmlibarchive/libarchive/archive_write_open_memory.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpyg7SPe.yaml -p=/project/git /project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_warc.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpW8m58N.yaml -p=/project/git /project/git/Utilities/cmlibarchive/libarchive/archive_write_add_filter.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpQs76gC.yaml -p=/project/git /project/git/Utilities/cmlibarchive/libarchive/archive_write_add_filter_by_name.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpcMkxjV.yaml -p=/project/git /project/git/Utilities/cmlibarchive/libarchive/archive_write_add_filter_b64encode.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpDhG5Ni.yaml -p=/project/git /project/git/Utilities/cmlibarchive/libarchive/archive_write_add_filter_bzip2.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmp7l1JCv.yaml -p=/project/git /project/git/Utilities/cmlibarchive/libarchive/archive_write_add_filter_grzip.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpwuvVfh.yaml -p=/project/git /project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_mtree.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpwruQdY.yaml -p=/project/git /project/git/Utilities/cmlibarchive/libarchive/archive_write_add_filter_lrzip.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmp9_aJ7q.yaml -p=/project/git /project/git/Utilities/cmlibarchive/libarchive/archive_write_add_filter_gzip.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpOwFrry.yaml -p=/project/git /project/git/Utilities/cmlibarchive/libarchive/archive_write_add_filter_lzop.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpeFdzj4.yaml -p=/project/git /project/git/Utilities/cmlibarchive/libarchive/archive_write_add_filter_lz4.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpVzFqTB.yaml -p=/project/git /project/git/Utilities/cmlibarchive/libarchive/archive_write_add_filter_none.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpPp8KF1.yaml -p=/project/git /project/git/Utilities/cmlibarchive/libarchive/archive_string_sprintf.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmp63XvbZ.yaml -p=/project/git /project/git/Utilities/cmlibarchive/libarchive/archive_write_add_filter_xz.c

1 warning generated.

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmp_3_kKN.yaml -p=/project/git /project/git/Utilities/cmlibarchive/libarchive/archive_write_add_filter_zstd.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmprm7nuh.yaml -p=/project/git /project/git/Utilities/cmlibarchive/libarchive/archive_write_set_format.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpBdqgEn.yaml -p=/project/git /project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_cpio.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpdSUn1h.yaml -p=/project/git /project/git/Utilities/cmlibarchive/libarchive/archive_write_add_filter_uuencode.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmp4ChKdY.yaml -p=/project/git /project/git/Utilities/cmlibarchive/libarchive/archive_write_set_format_ar.c
/project/git/Utilities/cmlibarchive/libarchive/archive_write_set_format_ar.c:252:4: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
                        strcpy(se + strlen(filename), "/\n");
                        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_write_set_format_ar.c:252:4: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpwzq0nN.yaml -p=/project/git /project/git/Utilities/cmlibarchive/libarchive/archive_write_set_format_by_name.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpJqCQyS.yaml -p=/project/git /project/git/Utilities/cmlibarchive/libarchive/archive_write_add_filter_program.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpBvEY2k.yaml -p=/project/git /project/git/Utilities/cmlibarchive/libarchive/archive_write_set_format_filter_by_ext.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpVjiPp0.yaml -p=/project/git /project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_tar.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmp0UkIK_.yaml -p=/project/git /project/git/Utilities/cmexpat/lib/xmlparse.c
/project/git/Utilities/cmexpat/lib/xmlparse.c:521:8: warning: Excessive padding in 'struct XML_ParserStruct' (33 padding bytes, where 1 is optimal). 
Optimal fields order: 
m_userData, 
m_handlerArg, 
m_buffer, 
m_bufferPtr, 
m_bufferEnd, 
m_bufferLim, 
m_parseEndByteIndex, 
m_parseEndPtr, 
m_dataBuf, 
m_dataBufEnd, 
m_startElementHandler, 
m_endElementHandler, 
m_characterDataHandler, 
m_processingInstructionHandler, 
m_commentHandler, 
m_startCdataSectionHandler, 
m_endCdataSectionHandler, 
m_defaultHandler, 
m_startDoctypeDeclHandler, 
m_endDoctypeDeclHandler, 
m_unparsedEntityDeclHandler, 
m_notationDeclHandler, 
m_startNamespaceDeclHandler, 
m_endNamespaceDeclHandler, 
m_notStandaloneHandler, 
m_externalEntityRefHandler, 
m_externalEntityRefHandlerArg, 
m_skippedEntityHandler, 
m_unknownEncodingHandler, 
m_elementDeclHandler, 
m_attlistDeclHandler, 
m_entityDeclHandler, 
m_xmlDeclHandler, 
m_encoding, 
m_internalEncoding, 
m_protocolEncodingName, 
m_unknownEncodingMem, 
m_unknownEncodingData, 
m_unknownEncodingHandlerData, 
m_unknownEncodingRelease, 
m_processor, 
m_eventPtr, 
m_eventEndPtr, 
m_positionPtr, 
m_openInternalEntities, 
m_freeInternalEntities, 
m_declEntity, 
m_doctypeName, 
m_doctypeSysid, 
m_doctypePubid, 
m_declAttributeType, 
m_declNotationName, 
m_declNotationPublicId, 
m_declElementType, 
m_declAttributeId, 
m_dtd, 
m_curBase, 
m_tagStack, 
m_freeTagList, 
m_inheritedBindings, 
m_freeBindingList, 
m_atts, 
1 warning generated.

m_nsAtts, 
m_nsAttsVersion, 
m_groupConnector, 
m_parentParser, 
m_hash_secret_salt, 
m_prologState, 
m_position, 
m_mem, 
m_tempPool, 
m_temp2Pool, 
m_initEncoding, 
m_errorCode, 
m_tagLevel, 
m_attsSize, 
m_nSpecifiedAtts, 
m_idAttIndex, 
m_groupSize, 
m_parsingStatus, 
m_ns, 
m_ns_triplets, 
m_defaultExpandInternalEntities, 
m_declAttributeIsCdata, 
m_declAttributeIsId, 
m_nsAttsPower, 
m_namespaceSeparator, 
consider reordering the fields or adding explicit padding members [clang-analyzer-optin.performance.Padding]
struct XML_ParserStruct {
       ^
/project/git/Utilities/cmexpat/lib/xmlparse.c:521:8: note: Excessive padding in 'struct XML_ParserStruct' (33 padding bytes, where 1 is optimal). Optimal fields order: m_userData, m_handlerArg, m_buffer, m_bufferPtr, m_bufferEnd, m_bufferLim, m_parseEndByteIndex, m_parseEndPtr, m_dataBuf, m_dataBufEnd, m_startElementHandler, m_endElementHandler, m_characterDataHandler, m_processingInstructionHandler, m_commentHandler, m_startCdataSectionHandler, m_endCdataSectionHandler, m_defaultHandler, m_startDoctypeDeclHandler, m_endDoctypeDeclHandler, m_unparsedEntityDeclHandler, m_notationDeclHandler, m_startNamespaceDeclHandler, m_endNamespaceDeclHandler, m_notStandaloneHandler, m_externalEntityRefHandler, m_externalEntityRefHandlerArg, m_skippedEntityHandler, m_unknownEncodingHandler, m_elementDeclHandler, m_attlistDeclHandler, m_entityDeclHandler, m_xmlDeclHandler, m_encoding, m_internalEncoding, m_protocolEncodingName, m_unknownEncodingMem, m_unknownEncodingData, m_unknownEncodingHandlerData, m_unknownEncodingRelease, m_processor, m_eventPtr, m_eventEndPtr, m_positionPtr, m_openInternalEntities, m_freeInternalEntities, m_declEntity, m_doctypeName, m_doctypeSysid, m_doctypePubid, m_declAttributeType, m_declNotationName, m_declNotationPublicId, m_declElementType, m_declAttributeId, m_dtd, m_curBase, m_tagStack, m_freeTagList, m_inheritedBindings, m_freeBindingList, m_atts, m_nsAtts, m_nsAttsVersion, m_groupConnector, m_parentParser, m_hash_secret_salt, m_prologState, m_position, m_mem, m_tempPool, m_temp2Pool, m_initEncoding, m_errorCode, m_tagLevel, m_attsSize, m_nSpecifiedAtts, m_idAttIndex, m_groupSize, m_parsingStatus, m_ns, m_ns_triplets, m_defaultExpandInternalEntities, m_declAttributeIsCdata, m_declAttributeIsId, m_nsAttsPower, m_namespaceSeparator, consider reordering the fields or adding explicit padding members

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpE9RxxI.yaml -p=/project/git /project/git/Utilities/cmliblzma/liblzma/lz/lz_encoder_mf.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmp3CuxBj.yaml -p=/project/git /project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_lha.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpQnrPsH.yaml -p=/project/git /project/git/Utilities/cmlibarchive/libarchive/archive_write_set_format_raw.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpeulpbE.yaml -p=/project/git /project/git/Utilities/cmlibarchive/libarchive/archive_write_add_filter_compress.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpMYdHc3.yaml -p=/project/git /project/git/Utilities/cmlibarchive/libarchive/archive_write_set_format_gnutar.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpT27bDV.yaml -p=/project/git /project/git/Utilities/cmlibarchive/libarchive/archive_write_set_format_cpio_newc.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpR0lI4y.yaml -p=/project/git /project/git/Utilities/cmlibarchive/libarchive/archive_write_set_format_warc.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpr62O4_.yaml -p=/project/git /project/git/Utilities/cmlibarchive/libarchive/archive_write_set_format_xar.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmppdkdTf.yaml -p=/project/git /project/git/Utilities/cmlibarchive/libarchive/archive_write_set_format_v7tar.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpqWPtrZ.yaml -p=/project/git /project/git/Utilities/cmlibarchive/libarchive/archive_write_set_options.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmp9GAaEb.yaml -p=/project/git /project/git/Utilities/cmlibarchive/libarchive/archive_write_set_passphrase.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmppfn9ca.yaml -p=/project/git /project/git/Utilities/cmlibarchive/libarchive/archive_write_set_format_cpio.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpTZlksA.yaml -p=/project/git /project/git/Utilities/cmlibarchive/libarchive/filter_fork_posix.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmp_SlyVk.yaml -p=/project/git /project/git/Utilities/cmlibarchive/libarchive/xxhash.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpPVxyHj.yaml -p=/project/git /project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_iso9660.c
/project/git/Utilities/cmlibarchive/libarchive/archive_endian.h:122:2: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]
        unsigned int p3 = p[3];
        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_iso9660.c:1657:6: note: Assuming the condition is false
        if (iso9660->entry_bytes_unconsumed) {
            ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_iso9660.c:1657:2: note: Taking false branch
        if (iso9660->entry_bytes_unconsumed) {
        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_iso9660.c:1662:6: note: Assuming the condition is false
        if (iso9660->entry_bytes_remaining <= 0) {
            ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_iso9660.c:1662:2: note: Taking false branch
        if (iso9660->entry_bytes_remaining <= 0) {
        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_iso9660.c:1696:6: note: Assuming the condition is true
        if (iso9660->entry_zisofs.pz)
            ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_iso9660.c:1696:2: note: Taking true branch
        if (iso9660->entry_zisofs.pz)
        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_iso9660.c:1697:11: note: Calling 'zisofs_read_data'
                return (zisofs_read_data(a, buff, size, offset));
                        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_iso9660.c:1425:6: note: Assuming 'bytes_read' is > 0
        if (bytes_read <= 0) {
            ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_iso9660.c:1425:2: note: Taking false branch
        if (bytes_read <= 0) {
        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_iso9660.c:1430:6: note: Assuming the condition is false
        if (bytes_read > iso9660->entry_bytes_remaining)
            ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_iso9660.c:1430:2: note: Taking false branch
        if (bytes_read > iso9660->entry_bytes_remaining)
        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_iso9660.c:1435:6: note: Assuming the condition is true
        if (!zisofs->initialized) {
            ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_iso9660.c:1435:2: note: Taking true branch
        if (!zisofs->initialized) {
        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_iso9660.c:1443:7: note: Assuming the condition is true
                if (zisofs->block_pointers_alloc < xsize) {
                    ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_iso9660.c:1443:3: note: Taking true branch
                if (zisofs->block_pointers_alloc < xsize) {
                ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_iso9660.c:1446:8: note: Assuming the condition is false
                        if (zisofs->block_pointers != NULL)
                            ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_iso9660.c:1446:4: note: Taking false branch
                        if (zisofs->block_pointers != NULL)
                        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_iso9660.c:1449:29: note: Storing uninitialized value
                        zisofs->block_pointers = malloc(alloc);
                                                 ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_iso9660.c:1450:8: note: Assuming the condition is false
                        if (zisofs->block_pointers == NULL) {
                            ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_iso9660.c:1450:4: note: Taking false branch
                        if (zisofs->block_pointers == NULL) {
                        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_iso9660.c:1461:7: note: Assuming the condition is false
                if (zisofs->uncompressed_buffer_size < xsize) {
                    ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_iso9660.c:1461:3: note: Taking false branch
                if (zisofs->uncompressed_buffer_size < xsize) {
                ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_iso9660.c:1476:7: note: Assuming the condition is true
                if (zisofs->header_avail < sizeof(zisofs->header)) {
                    ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_iso9660.c:1476:3: note: Taking true branch
                if (zisofs->header_avail < sizeof(zisofs->header)) {
                ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_iso9660.c:1478:8: note: Assuming 'avail' is < 'xsize'
                        if (avail < xsize)
                            ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_iso9660.c:1478:4: note: Taking true branch
                        if (avail < xsize)
                        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_iso9660.c:1485:7: note: Assuming the condition is false
                if (!zisofs->header_passed &&
                    ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_iso9660.c:1485:30: note: Left side of '&&' is false
                if (!zisofs->header_passed &&
                                           ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_iso9660.c:1510:7: note: Left side of '&&' is true
                if (zisofs->header_passed &&
                    ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_iso9660.c:1511:7: note: Assuming the condition is true
                    zisofs->block_pointers_avail < zisofs->block_pointers_size) {
                    ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_iso9660.c:1510:3: note: Taking true branch
                if (zisofs->header_passed &&
                ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_iso9660.c:1514:8: note: Assuming 'avail' is >= 'xsize'
                        if (avail < xsize)
                            ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_iso9660.c:1514:4: note: Taking false branch
                        if (avail < xsize)
                        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_iso9660.c:1521:12: note: Assuming the condition is true
                        if (zisofs->block_pointers_avail
                            ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_iso9660.c:1521:8: note: Taking true branch
                        if (zisofs->block_pointers_avail
                        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_iso9660.c:1532:3: note: Taking false branch
                if (!zisofs->initialized)
                ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_iso9660.c:1539:2: note: Taking true branch
        if (zisofs->block_avail == 0) {
        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_iso9660.c:1542:7: note: Assuming the condition is false
                if (zisofs->block_off + 4 >= zisofs->block_pointers_size) {
                    ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_iso9660.c:1542:3: note: Taking false branch
                if (zisofs->block_off + 4 >= zisofs->block_pointers_size) {
                ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_iso9660.c:1549:9: note: Calling 'archive_le32dec'
                bst = archive_le32dec(
                      ^
/project/git/Utilities/cmlibarchive/libarchive/archive_endian.h:122:2: note: Assigned value is garbage or undefined
        unsigned int p3 = p[3];
        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_iso9660.c:261:8: warning: Excessive padding in 'struct file_info' (38 padding bytes, where 6 is optimal). 
Optimal fields order: 
use_next, 
parent, 
next, 
re_next, 
key, 
offset, 
size, 
cl_offset, 
birthtime, 
mtime, 
atime, 
ctime, 
rdev, 
number, 
utf16be_name, 
utf16be_bytes, 
pz_uncompressed_size, 
contents, 
rede_files, 
name, 
symlink, 
subdirs, 
ce_offset, 
ce_size, 
birthtime_is_set, 
mode, 
uid, 
gid, 
nlinks, 
pz, 
pz_log2_bs, 
multi_extent, 
rr_moved, 
rr_moved_has_re_only, 
re, 
re_descendant, 
name_continues, 
symlink_continues, 
consider reordering the fields or adding explicit padding members [clang-analyzer-optin.performance.Padding]
struct file_info {
       ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_iso9660.c:261:8: note: Excessive padding in 'struct file_info' (38 padding bytes, where 6 is optimal). Optimal fields order: use_next, parent, next, re_next, key, offset, size, cl_offset, birthtime, mtime, atime, ctime, rdev, number, utf16be_name, utf16be_bytes, pz_uncompressed_size, contents, rede_files, name, symlink, subdirs, ce_offset, ce_size, birthtime_is_set, mode, uid, gid, nlinks, pz, pz_log2_bs, multi_extent, rr_moved, rr_moved_has_re_only, re, re_descendant, name_continues, symlink_continues, consider reordering the fields or adding explicit padding members
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_iso9660.c:3046:16: warning: Dereference of undefined pointer value [clang-analyzer-core.NullDereference]
                parent_key = heap->files[parent]->key;
                             ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_iso9660.c:1176:6: note: Assuming the condition is false
        if (!a->archive.archive_format) {
            ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_iso9660.c:1176:2: note: Taking false branch
        if (!a->archive.archive_format) {
        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_iso9660.c:1181:6: note: Assuming the condition is false
        if (iso9660->current_position == 0) {
            ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_iso9660.c:1181:2: note: Taking false branch
        if (iso9660->current_position == 0) {
        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_iso9660.c:1189:6: note: Calling 'next_entry_seek'
        r = next_entry_seek(a, iso9660, &file);
            ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_iso9660.c:2683:6: note: Calling 'next_cache_entry'
        r = next_cache_entry(a, iso9660, pfile);
            ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_iso9660.c:2727:2: note: Taking false branch
        if (file != NULL) {
        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_iso9660.c:2732:2: note: Loop condition is true.  Entering loop body
        for (;;) {
        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_iso9660.c:2736:7: note: Assuming 'file' is not equal to NULL
                if (file == NULL) {
                    ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_iso9660.c:2736:3: note: Taking false branch
                if (file == NULL) {
                ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_iso9660.c:2756:7: note: Assuming the condition is false
                if (file->cl_offset) {
                    ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_iso9660.c:2756:3: note: Taking false branch
                if (file->cl_offset) {
                ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_iso9660.c:2806:14: note: Assuming the condition is true
                } else if ((file->mode & AE_IFMT) == AE_IFDIR) {
                           ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_iso9660.c:2806:10: note: Taking true branch
                } else if ((file->mode & AE_IFMT) == AE_IFDIR) {
                       ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_iso9660.c:2810:8: note: Calling 'read_children'
                        r = read_children(a, file);
                            ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_iso9660.c:966:6: note: Assuming the condition is false
        if (iso9660->entry_bytes_unconsumed) {
            ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_iso9660.c:966:2: note: Taking false branch
        if (iso9660->entry_bytes_unconsumed) {
        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_iso9660.c:970:6: note: Assuming the condition is false
        if (iso9660->current_position > parent->offset) {
            ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_iso9660.c:970:2: note: Taking false branch
        if (iso9660->current_position > parent->offset) {
        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_iso9660.c:978:6: note: Assuming the condition is false
        if (parent->offset + parent->size > iso9660->volume_size) {
            ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_iso9660.c:978:2: note: Taking false branch
        if (parent->offset + parent->size > iso9660->volume_size) {
        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_iso9660.c:984:6: note: Assuming the condition is false
        if (iso9660->current_position < parent->offset) {
            ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_iso9660.c:984:2: note: Taking false branch
        if (iso9660->current_position < parent->offset) {
        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_iso9660.c:997:6: note: Assuming 'b' is not equal to NULL
        if (b == NULL) {
            ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_iso9660.c:997:2: note: Taking false branch
        if (b == NULL) {
        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_iso9660.c:1006:2: note: Loop condition is true.  Entering loop body
        while (step) {
        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_iso9660.c:1010:10: note: Assuming the condition is true
                for (; *p != 0 && p < b && p + *p <= b; p += *p) {
                       ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_iso9660.c:1010:10: note: Left side of '&&' is true
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_iso9660.c:1010:21: note: Assuming 'p' is < 'b'
                for (; *p != 0 && p < b && p + *p <= b; p += *p) {
                                  ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_iso9660.c:1010:10: note: Left side of '&&' is true
                for (; *p != 0 && p < b && p + *p <= b; p += *p) {
                       ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_iso9660.c:1010:30: note: Assuming the condition is true
                for (; *p != 0 && p < b && p + *p <= b; p += *p) {
                                           ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_iso9660.c:1010:3: note: Loop condition is true.  Entering loop body
                for (; *p != 0 && p < b && p + *p <= b; p += *p) {
                ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_iso9660.c:1019:8: note: Assuming the condition is false
                        if (*(p + DR_name_len_offset) == 1
                            ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_iso9660.c:1020:8: note: Left side of '&&' is false
                            && *(p + DR_name_offset) == '\0')
                            ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_iso9660.c:1024:8: note: Left side of '&&' is false
                            && *(p + DR_name_offset) == '\001')
                            ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_iso9660.c:1027:8: note: Assuming 'child' is not equal to NULL
                        if (child == NULL) {
                            ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_iso9660.c:1027:4: note: Taking false branch
                        if (child == NULL) {
                        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_iso9660.c:1031:8: note: Assuming the condition is false
                        if (child->cl_offset == 0 &&
                            ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_iso9660.c:1031:30: note: Left side of '&&' is false
                        if (child->cl_offset == 0 &&
                                                  ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_iso9660.c:1064:9: note: Calling 'heap_add_entry'
                                if (add_entry(a, iso9660, child) != ARCHIVE_OK)
                                    ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_iso9660.c:443:2: note: expanded from macro 'add_entry'
        heap_add_entry(arch, &((iso9660)->pending_files), file, file->offset)
        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_iso9660.c:3010:6: note: Assuming the condition is true
        if (heap->used >= heap->allocated) {
            ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_iso9660.c:3010:2: note: Taking true branch
        if (heap->used >= heap->allocated) {
        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_iso9660.c:3014:3: note: Taking true branch
                if (heap->allocated < 1024)
                ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_iso9660.c:3017:3: note: Taking false branch
                if (new_size <= heap->allocated) {
                ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_iso9660.c:3024:7: note: Assuming 'new_pending_files' is not equal to NULL
                if (new_pending_files == NULL) {
                    ^
3 warnings generated.

/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_iso9660.c:3024:3: note: Taking false branch
                if (new_pending_files == NULL) {
                ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_iso9660.c:3029:7: note: Assuming the condition is false
                if (heap->allocated)
                    ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_iso9660.c:3029:3: note: Taking false branch
                if (heap->allocated)
                ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_iso9660.c:3032:3: note: Taking true branch
                if (heap->files != NULL)
                ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_iso9660.c:3044:2: note: Loop condition is true.  Entering loop body
        while (hole > 0) {
        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_iso9660.c:3046:16: note: Dereference of undefined pointer value
                parent_key = heap->files[parent]->key;
                             ^

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpUf3PQA.yaml -p=/project/git /project/git/Utilities/cmlibarchive/libarchive/archive_write_set_format_pax.c
/project/git/Utilities/cmlibarchive/libarchive/archive_write_set_format_pax.c:737:3: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
                strcpy(name, oname);
                ^
/project/git/Utilities/cmlibarchive/libarchive/archive_write_set_format_pax.c:737:3: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
/project/git/Utilities/cmlibarchive/libarchive/archive_write_set_format_pax.c:1557:3: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
                strcpy(p, insert);
                ^
/project/git/Utilities/cmlibarchive/libarchive/archive_write_set_format_pax.c:1557:3: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
/project/git/Utilities/cmlibarchive/libarchive/archive_write_set_format_pax.c:1601:3: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
                strcpy(dest, "PaxHeader/blank");
                ^
/project/git/Utilities/cmlibarchive/libarchive/archive_write_set_format_pax.c:1601:3: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
/project/git/Utilities/cmlibarchive/libarchive/archive_write_set_format_pax.c:1625:3: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
                strcpy(dest, "/PaxHeader/rootdir");
                ^
6 warnings generated.

1 warning generated.

/project/git/Utilities/cmlibarchive/libarchive/archive_write_set_format_pax.c:1625:3: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
/project/git/Utilities/cmlibarchive/libarchive/archive_write_set_format_pax.c:1631:3: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
                strcpy(dest, "PaxHeader/currentdir");
                ^
/project/git/Utilities/cmlibarchive/libarchive/archive_write_set_format_pax.c:1631:3: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
/project/git/Utilities/cmlibarchive/libarchive/archive_write_set_format_pax.c:1669:3: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
                strcpy(dest, "GNUSparseFile/blank");
                ^
/project/git/Utilities/cmlibarchive/libarchive/archive_write_set_format_pax.c:1669:3: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpYaKgaL.yaml -p=/project/git /project/git/Utilities/cmlibuv/src/fs-poll.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpbfBzEJ.yaml -p=/project/git /project/git/Utilities/cmlibarchive/libarchive/archive_write_set_format_shar.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpJG_eSQ.yaml -p=/project/git /project/git/Utilities/cmlibuv/src/inet.c
/project/git/Utilities/cmlibuv/src/inet.c:152:3: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
  strcpy(dst, tmp);
  ^
/project/git/Utilities/cmlibuv/src/inet.c:152:3: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpprHUMA.yaml -p=/project/git /project/git/Utilities/cmlibarchive/libarchive/archive_write_set_format_ustar.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpEkLhP0.yaml -p=/project/git /project/git/Utilities/cmlibuv/src/uv-data-getter-setters.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpCmoogD.yaml -p=/project/git /project/git/Utilities/cmlibuv/src/threadpool.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpCxhpt_.yaml -p=/project/git /project/git/Utilities/cmlibarchive/libarchive/archive_write_disk_posix.c
/project/git/Utilities/cmlibarchive/libarchive/archive_write_disk_posix.c:2155:4: warning: 2nd function call argument is an uninitialized value [clang-analyzer-core.CallAndMessage]
                        archive_set_error(&a->archive, error_number, "%s",
                        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_write_disk_posix.c:491:6: note: Assuming the condition is false
        if (a->archive.state & ARCHIVE_STATE_DATA) {
            ^
/project/git/Utilities/cmlibarchive/libarchive/archive_write_disk_posix.c:491:2: note: Taking false branch
        if (a->archive.state & ARCHIVE_STATE_DATA) {
        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_write_disk_posix.c:501:6: note: Assuming the condition is false
        if (a->entry) {
            ^
/project/git/Utilities/cmlibarchive/libarchive/archive_write_disk_posix.c:501:2: note: Taking false branch
        if (a->entry) {
        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_write_disk_posix.c:512:6: note: Assuming the condition is false
        if (archive_entry_size_is_set(a->entry))
            ^
/project/git/Utilities/cmlibarchive/libarchive/archive_write_disk_posix.c:512:2: note: Taking false branch
        if (archive_entry_size_is_set(a->entry))
        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_write_disk_posix.c:526:2: note: Taking false branch
        if (ret != ARCHIVE_OK)
        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_write_disk_posix.c:539:6: note: Assuming the condition is false
        if (a->flags & ARCHIVE_EXTRACT_PERM) {
            ^
/project/git/Utilities/cmlibarchive/libarchive/archive_write_disk_posix.c:539:2: note: Taking false branch
        if (a->flags & ARCHIVE_EXTRACT_PERM) {
        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_write_disk_posix.c:573:6: note: Assuming the condition is false
        if (a->flags & ARCHIVE_EXTRACT_OWNER)
            ^
/project/git/Utilities/cmlibarchive/libarchive/archive_write_disk_posix.c:573:2: note: Taking false branch
        if (a->flags & ARCHIVE_EXTRACT_OWNER)
        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_write_disk_posix.c:575:6: note: Assuming the condition is false
        if (a->flags & ARCHIVE_EXTRACT_TIME)
            ^
/project/git/Utilities/cmlibarchive/libarchive/archive_write_disk_posix.c:575:2: note: Taking false branch
        if (a->flags & ARCHIVE_EXTRACT_TIME)
        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_write_disk_posix.c:577:6: note: Assuming the condition is false
        if (a->flags & ARCHIVE_EXTRACT_ACL) {
            ^
/project/git/Utilities/cmlibarchive/libarchive/archive_write_disk_posix.c:577:2: note: Taking false branch
        if (a->flags & ARCHIVE_EXTRACT_ACL) {
        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_write_disk_posix.c:628:6: note: Assuming the condition is false
        if (a->flags & ARCHIVE_EXTRACT_MAC_METADATA) {
            ^
/project/git/Utilities/cmlibarchive/libarchive/archive_write_disk_posix.c:628:2: note: Taking false branch
        if (a->flags & ARCHIVE_EXTRACT_MAC_METADATA) {
        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_write_disk_posix.c:667:6: note: Assuming the condition is false
        if (a->flags & ARCHIVE_EXTRACT_XATTR) {
            ^
/project/git/Utilities/cmlibarchive/libarchive/archive_write_disk_posix.c:667:2: note: Taking false branch
        if (a->flags & ARCHIVE_EXTRACT_XATTR) {
        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_write_disk_posix.c:682:6: note: Assuming the condition is false
        if (a->flags & ARCHIVE_EXTRACT_FFLAGS)
            ^
/project/git/Utilities/cmlibarchive/libarchive/archive_write_disk_posix.c:682:2: note: Taking false branch
        if (a->flags & ARCHIVE_EXTRACT_FFLAGS)
        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_write_disk_posix.c:684:6: note: Assuming the condition is false
        if (a->flags & ARCHIVE_EXTRACT_SECURE_SYMLINKS) {
            ^
/project/git/Utilities/cmlibarchive/libarchive/archive_write_disk_posix.c:684:2: note: Taking false branch
        if (a->flags & ARCHIVE_EXTRACT_SECURE_SYMLINKS) {
        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_write_disk_posix.c:694:8: note: Calling 'restore_entry'
        ret = restore_entry(a);
              ^
/project/git/Utilities/cmlibarchive/libarchive/archive_write_disk_posix.c:1936:6: note: Assuming the condition is false
        if (a->flags & ARCHIVE_EXTRACT_UNLINK && !S_ISDIR(a->mode)) {
            ^
/project/git/Utilities/cmlibarchive/libarchive/archive_write_disk_posix.c:1936:40: note: Left side of '&&' is false
        if (a->flags & ARCHIVE_EXTRACT_UNLINK && !S_ISDIR(a->mode)) {
                                              ^
/project/git/Utilities/cmlibarchive/libarchive/archive_write_disk_posix.c:1964:7: note: Calling 'create_filesystem_object'
        en = create_filesystem_object(a);
             ^
/project/git/Utilities/cmlibarchive/libarchive/archive_write_disk_posix.c:2121:2: note: 'error_number' declared without an initial value
        int error_number;
        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_write_disk_posix.c:2126:6: note: Assuming 'linkname' is not equal to NULL
        if (linkname != NULL) {
            ^
/project/git/Utilities/cmlibarchive/libarchive/archive_write_disk_posix.c:2126:2: note: Taking true branch
        if (linkname != NULL) {
        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_write_disk_posix.c:2132:7: note: Assuming 'linkname_copy' is not equal to NULL
                if (linkname_copy == NULL) {
                    ^
/project/git/Utilities/cmlibarchive/libarchive/archive_write_disk_posix.c:2132:3: note: Taking false branch
                if (linkname_copy == NULL) {
                ^
/project/git/Utilities/cmlibarchive/libarchive/archive_write_disk_posix.c:2139:7: note: Calling 'cleanup_pathname_fsobj'
                r = cleanup_pathname_fsobj(linkname_copy, &error_number,
                    ^
/project/git/Utilities/cmlibarchive/libarchive/archive_write_disk_posix.c:2862:6: note: Assuming the condition is false
        if (*src == '\0') {
            ^
/project/git/Utilities/cmlibarchive/libarchive/archive_write_disk_posix.c:2862:2: note: Taking false branch
        if (*src == '\0') {
        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_write_disk_posix.c:2872:6: note: Assuming the condition is false
        if (*src == '/') {
            ^
/project/git/Utilities/cmlibarchive/libarchive/archive_write_disk_posix.c:2872:2: note: Taking false branch
        if (*src == '/') {
        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_write_disk_posix.c:2883:2: note: Loop condition is true.  Entering loop body
        for (;;) {
        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_write_disk_posix.c:2885:3: note: Taking false branch
                if (src[0] == '\0') {
                ^
/project/git/Utilities/cmlibarchive/libarchive/archive_write_disk_posix.c:2887:10: note: Taking false branch
                } else if (src[0] == '/') {
                       ^
/project/git/Utilities/cmlibarchive/libarchive/archive_write_disk_posix.c:2891:14: note: Assuming the condition is true
                } else if (src[0] == '.') {
                           ^
/project/git/Utilities/cmlibarchive/libarchive/archive_write_disk_posix.c:2891:10: note: Taking true branch
                } else if (src[0] == '.') {
                       ^
/project/git/Utilities/cmlibarchive/libarchive/archive_write_disk_posix.c:2892:8: note: Assuming the condition is true
                        if (src[1] == '\0') {
                            ^
/project/git/Utilities/cmlibarchive/libarchive/archive_write_disk_posix.c:2892:4: note: Taking true branch
                        if (src[1] == '\0') {
                        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_write_disk_posix.c:2894:5: note:  Execution continues on line 2937
                                break;
                                ^
/project/git/Utilities/cmlibarchive/libarchive/archive_write_disk_posix.c:2937:2: note: Taking true branch
        if (dest == path) {
        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_write_disk_posix.c:2942:3: note: Taking false branch
                if (separator)
                ^
/project/git/Utilities/cmlibarchive/libarchive/archive_write_disk_posix.c:2949:2: note: Returning without writing to '*a_eno'
        return (ARCHIVE_OK);
        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_write_disk_posix.c:2139:7: note: Returning from 'cleanup_pathname_fsobj'
                r = cleanup_pathname_fsobj(linkname_copy, &error_number,
                    ^
/project/git/Utilities/cmlibarchive/libarchive/archive_write_disk_posix.c:2141:3: note: Taking false branch
                if (r != ARCHIVE_OK) {
                ^
/project/git/Utilities/cmlibarchive/libarchive/archive_write_disk_posix.c:2152:7: note: Calling 'check_symlinks_fsobj'
                r = check_symlinks_fsobj(linkname_copy, &error_number,
                    ^
/project/git/Utilities/cmlibarchive/libarchive/archive_write_disk_posix.c:2549:2: note: Taking false branch
        if(path[0] == '\0')
        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_write_disk_posix.c:2569:6: note: Assuming 'restore_pwd' is < 0
        if (restore_pwd < 0)
            ^
/project/git/Utilities/cmlibarchive/libarchive/archive_write_disk_posix.c:2569:2: note: Taking true branch
        if (restore_pwd < 0)
        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_write_disk_posix.c:2570:3: note: Returning without writing to '*a_eno'
                return (ARCHIVE_FATAL);
                ^
/project/git/Utilities/cmlibarchive/libarchive/archive_write_disk_posix.c:2152:7: note: Returning from 'check_symlinks_fsobj'
                r = check_symlinks_fsobj(linkname_copy, &error_number,
                    ^
/project/git/Utilities/cmlibarchive/libarchive/archive_write_disk_posix.c:2154:3: note: Taking true branch
                if (r != ARCHIVE_OK) {
                ^
/project/git/Utilities/cmlibarchive/libarchive/archive_write_disk_posix.c:2155:4: note: 2nd function call argument is an uninitialized value
                        archive_set_error(&a->archive, error_number, "%s",
                        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_write_disk_posix.c:2748:3: warning: Value stored to 'restore_pwd' is never read [clang-analyzer-deadcode.DeadStores]
                restore_pwd = -1;
                ^
/project/git/Utilities/cmlibarchive/libarchive/archive_write_disk_posix.c:2748:3: note: Value stored to 'restore_pwd' is never read
/project/git/Utilities/cmlibarchive/libarchive/archive_write_disk_posix.c:2773:3: warning: 2nd function call argument is an uninitialized value [clang-analyzer-core.CallAndMessage]
                archive_set_error(&a->archive, error_number, "%s",
                ^
/project/git/Utilities/cmlibarchive/libarchive/archive_write_disk_posix.c:491:6: note: Assuming the condition is false
        if (a->archive.state & ARCHIVE_STATE_DATA) {
            ^
/project/git/Utilities/cmlibarchive/libarchive/archive_write_disk_posix.c:491:2: note: Taking false branch
        if (a->archive.state & ARCHIVE_STATE_DATA) {
        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_write_disk_posix.c:501:6: note: Assuming the condition is false
        if (a->entry) {
            ^
/project/git/Utilities/cmlibarchive/libarchive/archive_write_disk_posix.c:501:2: note: Taking false branch
        if (a->entry) {
        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_write_disk_posix.c:512:6: note: Assuming the condition is false
        if (archive_entry_size_is_set(a->entry))
            ^
/project/git/Utilities/cmlibarchive/libarchive/archive_write_disk_posix.c:512:2: note: Taking false branch
        if (archive_entry_size_is_set(a->entry))
        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_write_disk_posix.c:526:2: note: Taking false branch
        if (ret != ARCHIVE_OK)
        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_write_disk_posix.c:539:6: note: Assuming the condition is false
        if (a->flags & ARCHIVE_EXTRACT_PERM) {
            ^
/project/git/Utilities/cmlibarchive/libarchive/archive_write_disk_posix.c:539:2: note: Taking false branch
        if (a->flags & ARCHIVE_EXTRACT_PERM) {
        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_write_disk_posix.c:573:6: note: Assuming the condition is false
        if (a->flags & ARCHIVE_EXTRACT_OWNER)
            ^
/project/git/Utilities/cmlibarchive/libarchive/archive_write_disk_posix.c:573:2: note: Taking false branch
        if (a->flags & ARCHIVE_EXTRACT_OWNER)
        ^
3 warnings generated.

/project/git/Utilities/cmlibarchive/libarchive/archive_write_disk_posix.c:575:6: note: Assuming the condition is false
        if (a->flags & ARCHIVE_EXTRACT_TIME)
            ^
/project/git/Utilities/cmlibarchive/libarchive/archive_write_disk_posix.c:575:2: note: Taking false branch
        if (a->flags & ARCHIVE_EXTRACT_TIME)
        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_write_disk_posix.c:577:6: note: Assuming the condition is false
        if (a->flags & ARCHIVE_EXTRACT_ACL) {
            ^
/project/git/Utilities/cmlibarchive/libarchive/archive_write_disk_posix.c:577:2: note: Taking false branch
        if (a->flags & ARCHIVE_EXTRACT_ACL) {
        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_write_disk_posix.c:628:6: note: Assuming the condition is false
        if (a->flags & ARCHIVE_EXTRACT_MAC_METADATA) {
            ^
/project/git/Utilities/cmlibarchive/libarchive/archive_write_disk_posix.c:628:2: note: Taking false branch
        if (a->flags & ARCHIVE_EXTRACT_MAC_METADATA) {
        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_write_disk_posix.c:667:6: note: Assuming the condition is false
        if (a->flags & ARCHIVE_EXTRACT_XATTR) {
            ^
/project/git/Utilities/cmlibarchive/libarchive/archive_write_disk_posix.c:667:2: note: Taking false branch
        if (a->flags & ARCHIVE_EXTRACT_XATTR) {
        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_write_disk_posix.c:682:6: note: Assuming the condition is false
        if (a->flags & ARCHIVE_EXTRACT_FFLAGS)
            ^
/project/git/Utilities/cmlibarchive/libarchive/archive_write_disk_posix.c:682:2: note: Taking false branch
        if (a->flags & ARCHIVE_EXTRACT_FFLAGS)
        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_write_disk_posix.c:684:6: note: Assuming the condition is true
        if (a->flags & ARCHIVE_EXTRACT_SECURE_SYMLINKS) {
            ^
/project/git/Utilities/cmlibarchive/libarchive/archive_write_disk_posix.c:684:2: note: Taking true branch
        if (a->flags & ARCHIVE_EXTRACT_SECURE_SYMLINKS) {
        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_write_disk_posix.c:685:9: note: Calling 'check_symlinks'
                ret = check_symlinks(a);
                      ^
/project/git/Utilities/cmlibarchive/libarchive/archive_write_disk_posix.c:2767:2: note: 'error_number' declared without an initial value
        int error_number;
        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_write_disk_posix.c:2770:7: note: Calling 'check_symlinks_fsobj'
        rc = check_symlinks_fsobj(a->name, &error_number, &error_string,
             ^
/project/git/Utilities/cmlibarchive/libarchive/archive_write_disk_posix.c:2549:2: note: Taking false branch
        if(path[0] == '\0')
        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_write_disk_posix.c:2569:6: note: Assuming 'restore_pwd' is < 0
        if (restore_pwd < 0)
            ^
/project/git/Utilities/cmlibarchive/libarchive/archive_write_disk_posix.c:2569:2: note: Taking true branch
        if (restore_pwd < 0)
        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_write_disk_posix.c:2570:3: note: Returning without writing to '*a_eno'
                return (ARCHIVE_FATAL);
                ^
/project/git/Utilities/cmlibarchive/libarchive/archive_write_disk_posix.c:2770:7: note: Returning from 'check_symlinks_fsobj'
        rc = check_symlinks_fsobj(a->name, &error_number, &error_string,
             ^
/project/git/Utilities/cmlibarchive/libarchive/archive_write_disk_posix.c:2772:2: note: Taking true branch
        if (rc != ARCHIVE_OK) {
        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_write_disk_posix.c:2773:3: note: 2nd function call argument is an uninitialized value
                archive_set_error(&a->archive, error_number, "%s",
                ^

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmp_Z8Jyu.yaml -p=/project/git /project/git/Utilities/cmlibuv/src/version.c

1 warning generated.

4 warnings generated.

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmp6JilVZ.yaml -p=/project/git /project/git/Utilities/cmlibuv/src/unix/dl.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpyg5Qtp.yaml -p=/project/git /project/git/Utilities/cmlibuv/src/unix/async.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpXb1ybd.yaml -p=/project/git /project/git/Utilities/cmlibuv/src/unix/getaddrinfo.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpGnDK9V.yaml -p=/project/git /project/git/Utilities/cmlibuv/src/unix/getnameinfo.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpVNqRpn.yaml -p=/project/git /project/git/Utilities/cmlibuv/src/unix/loop-watcher.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpSw5AcE.yaml -p=/project/git /project/git/Utilities/cmlibarchive/libarchive/archive_write_set_format_7zip.c
/project/git/Utilities/cmlibarchive/libarchive/archive_write_set_format_7zip.c:1560:7: warning: Access to field 'utf16name' results in a dereference of a null pointer (loaded from variable 'file') [clang-analyzer-core.NullDereference]
        free(file->utf16name);
             ^
/project/git/Utilities/cmlibarchive/libarchive/archive_write_set_format_7zip.c:433:6: note: Assuming the condition is false
        if (zip->sconv == NULL) {
            ^
/project/git/Utilities/cmlibarchive/libarchive/archive_write_set_format_7zip.c:433:2: note: Taking false branch
        if (zip->sconv == NULL) {
        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_write_set_format_7zip.c:440:6: note: Calling 'file_new'
        r = file_new(a, entry, &file);
            ^
/project/git/Utilities/cmlibarchive/libarchive/archive_write_set_format_7zip.c:1496:2: note: Null pointer value stored to 'file'
        *newfile = NULL;
        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_write_set_format_7zip.c:1499:6: note: Assuming 'file' is equal to NULL
        if (file == NULL) {
            ^
/project/git/Utilities/cmlibarchive/libarchive/archive_write_set_format_7zip.c:1499:2: note: Taking true branch
        if (file == NULL) {
        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_write_set_format_7zip.c:440:6: note: Returning from 'file_new'
        r = file_new(a, entry, &file);
            ^
/project/git/Utilities/cmlibarchive/libarchive/archive_write_set_format_7zip.c:441:2: note: Taking true branch
        if (r < ARCHIVE_WARN) {
        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_write_set_format_7zip.c:442:13: note: Passing null pointer value via 1st parameter 'file'
                file_free(file);
                          ^
/project/git/Utilities/cmlibarchive/libarchive/archive_write_set_format_7zip.c:442:3: note: Calling 'file_free'
                file_free(file);
                ^
/project/git/Utilities/cmlibarchive/libarchive/archive_write_set_format_7zip.c:1560:7: note: Access to field 'utf16name' results in a dereference of a null pointer (loaded from variable 'file')
        free(file->utf16name);
             ^

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmp1hnSv9.yaml -p=/project/git /project/git/Utilities/cmlibuv/src/unix/loop.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpvCU6Yh.yaml -p=/project/git /project/git/Utilities/cmlibuv/src/unix/poll.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpLIH_Yu.yaml -p=/project/git /project/git/Utilities/cmlibuv/src/unix/pipe.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpF_bjDj.yaml -p=/project/git /project/git/Utilities/cmlibarchive/libarchive/archive_write_set_format_mtree.c
/project/git/Utilities/cmlibarchive/libarchive/archive_write_set_format_mtree.c:1813:5: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
                                strcpy(p, p+1);
                                ^
/project/git/Utilities/cmlibarchive/libarchive/archive_write_set_format_mtree.c:1813:5: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
/project/git/Utilities/cmlibarchive/libarchive/archive_write_set_format_mtree.c:1816:5: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
                                strcpy(p, p+2);
                                ^
/project/git/Utilities/cmlibarchive/libarchive/archive_write_set_format_mtree.c:1816:5: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
/project/git/Utilities/cmlibarchive/libarchive/archive_write_set_format_mtree.c:1828:6: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
                                        strcpy(rp, p+3);
                                        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_write_set_format_mtree.c:1828:6: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
/project/git/Utilities/cmlibarchive/libarchive/archive_write_set_format_mtree.c:1831:6: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
                                        strcpy(dirname, p+4);
                                        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_write_set_format_mtree.c:1831:6: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpAvFe0S.yaml -p=/project/git /project/git/Utilities/cmlibuv/src/uv-common.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpDEK_Gx.yaml -p=/project/git /project/git/Utilities/cmlibuv/src/unix/tcp.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpQQvv9z.yaml -p=/project/git /project/git/Utilities/cmlibuv/src/unix/thread.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpGbSiOi.yaml -p=/project/git /project/git/Utilities/cmlibuv/src/unix/core.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpswGqnY.yaml -p=/project/git /project/git/Utilities/cmlibuv/src/unix/tty.c
/project/git/Utilities/cmlibuv/src/unix/tty.c:325:22: warning: The left operand of '==' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]
    if (sa.sa_family == AF_INET || sa.sa_family == AF_INET6)
                     ^
/project/git/Utilities/cmlibuv/src/unix/tty.c:107:10: note: Calling 'uv_guess_handle'
  type = uv_guess_handle(fd);
         ^
/project/git/Utilities/cmlibuv/src/unix/tty.c:295:7: note: Assuming 'file' is >= 0
  if (file < 0)
      ^
/project/git/Utilities/cmlibuv/src/unix/tty.c:295:3: note: Taking false branch
  if (file < 0)
  ^
/project/git/Utilities/cmlibuv/src/unix/tty.c:298:7: note: Assuming the condition is false
  if (isatty(file))
      ^
/project/git/Utilities/cmlibuv/src/unix/tty.c:298:3: note: Taking false branch
  if (isatty(file))
  ^
/project/git/Utilities/cmlibuv/src/unix/tty.c:301:7: note: Assuming the condition is false
  if (fstat(file, &s))
      ^
/project/git/Utilities/cmlibuv/src/unix/tty.c:301:3: note: Taking false branch
  if (fstat(file, &s))
  ^
/project/git/Utilities/cmlibuv/src/unix/tty.c:304:3: note: Taking false branch
  if (S_ISREG(s.st_mode))
  ^
/project/git/Utilities/cmlibuv/src/unix/tty.c:307:3: note: Taking false branch
  if (S_ISCHR(s.st_mode))
  ^
/project/git/Utilities/cmlibuv/src/unix/tty.c:310:3: note: Taking false branch
  if (S_ISFIFO(s.st_mode))
  ^
/project/git/Utilities/cmlibuv/src/unix/tty.c:313:3: note: Taking false branch
  if (!S_ISSOCK(s.st_mode))
  ^
/project/git/Utilities/cmlibuv/src/unix/tty.c:317:7: note: Assuming the condition is false
  if (getsockopt(file, SOL_SOCKET, SO_TYPE, &type, &len))
      ^
/project/git/Utilities/cmlibuv/src/unix/tty.c:317:3: note: Taking false branch
  if (getsockopt(file, SOL_SOCKET, SO_TYPE, &type, &len))
  ^
/project/git/Utilities/cmlibuv/src/unix/tty.c:321:7: note: Assuming the condition is false
  if (getsockname(file, &sa, &len))
      ^
/project/git/Utilities/cmlibuv/src/unix/tty.c:321:3: note: Taking false branch
  if (getsockname(file, &sa, &len))
  ^
/project/git/Utilities/cmlibuv/src/unix/tty.c:324:7: note: Assuming 'type' is equal to SOCK_DGRAM
  if (type == SOCK_DGRAM)
      ^
/project/git/Utilities/cmlibuv/src/unix/tty.c:324:3: note: Taking true branch
  if (type == SOCK_DGRAM)
  ^
/project/git/Utilities/cmlibuv/src/unix/tty.c:325:22: note: The left operand of '==' is a garbage value
    if (sa.sa_family == AF_INET || sa.sa_family == AF_INET6)
                     ^
/project/git/Utilities/cmlibuv/src/unix/tty.c:338:22: warning: The left operand of '==' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]
    if (sa.sa_family == AF_INET || sa.sa_family == AF_INET6)
                     ^
/project/git/Utilities/cmlibuv/src/unix/tty.c:107:10: note: Calling 'uv_guess_handle'
  type = uv_guess_handle(fd);
         ^
/project/git/Utilities/cmlibuv/src/unix/tty.c:295:7: note: Assuming 'file' is >= 0
  if (file < 0)
      ^
/project/git/Utilities/cmlibuv/src/unix/tty.c:295:3: note: Taking false branch
  if (file < 0)
  ^
/project/git/Utilities/cmlibuv/src/unix/tty.c:298:7: note: Assuming the condition is false
  if (isatty(file))
      ^
/project/git/Utilities/cmlibuv/src/unix/tty.c:298:3: note: Taking false branch
  if (isatty(file))
  ^
/project/git/Utilities/cmlibuv/src/unix/tty.c:301:7: note: Assuming the condition is false
  if (fstat(file, &s))
      ^
/project/git/Utilities/cmlibuv/src/unix/tty.c:301:3: note: Taking false branch
  if (fstat(file, &s))
  ^
/project/git/Utilities/cmlibuv/src/unix/tty.c:304:3: note: Taking false branch
  if (S_ISREG(s.st_mode))
  ^
/project/git/Utilities/cmlibuv/src/unix/tty.c:307:3: note: Taking false branch
  if (S_ISCHR(s.st_mode))
  ^
/project/git/Utilities/cmlibuv/src/unix/tty.c:310:3: note: Taking false branch
  if (S_ISFIFO(s.st_mode))
  ^
/project/git/Utilities/cmlibuv/src/unix/tty.c:313:3: note: Taking false branch
  if (!S_ISSOCK(s.st_mode))
  ^
/project/git/Utilities/cmlibuv/src/unix/tty.c:317:7: note: Assuming the condition is false
  if (getsockopt(file, SOL_SOCKET, SO_TYPE, &type, &len))
      ^
/project/git/Utilities/cmlibuv/src/unix/tty.c:317:3: note: Taking false branch
  if (getsockopt(file, SOL_SOCKET, SO_TYPE, &type, &len))
  ^
/project/git/Utilities/cmlibuv/src/unix/tty.c:321:7: note: Assuming the condition is false
  if (getsockname(file, &sa, &len))
      ^
/project/git/Utilities/cmlibuv/src/unix/tty.c:321:3: note: Taking false branch
  if (getsockname(file, &sa, &len))
  ^
2 warnings generated.

1 warning generated.

/project/git/Utilities/cmlibuv/src/unix/tty.c:324:7: note: Assuming 'type' is not equal to SOCK_DGRAM
  if (type == SOCK_DGRAM)
      ^
/project/git/Utilities/cmlibuv/src/unix/tty.c:324:3: note: Taking false branch
  if (type == SOCK_DGRAM)
  ^
/project/git/Utilities/cmlibuv/src/unix/tty.c:328:7: note: Assuming 'type' is equal to SOCK_STREAM
  if (type == SOCK_STREAM) {
      ^
/project/git/Utilities/cmlibuv/src/unix/tty.c:328:3: note: Taking true branch
  if (type == SOCK_STREAM) {
  ^
/project/git/Utilities/cmlibuv/src/unix/tty.c:338:22: note: The left operand of '==' is a garbage value
    if (sa.sa_family == AF_INET || sa.sa_family == AF_INET6)
                     ^

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpDy1p_r.yaml -p=/project/git /project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_rar.c
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_rar.c:210:8: warning: Excessive padding in 'struct rar' (43 padding bytes, where 3 is optimal). 
Optimal fields order: 
file_crc, 
packed_size, 
unp_size, 
mtime, 
mnsec, 
filename, 
filename_save, 
filename_save_size, 
filename_allocated, 
atime, 
ansec, 
ctime, 
cnsec, 
arctime, 
arcnsec, 
bytes_unconsumed, 
bytes_remaining, 
bytes_uncopied, 
offset, 
offset_outgoing, 
offset_seek, 
unp_buffer, 
crc_calculated, 
dbo, 
filterstart, 
sconv_default, 
opt_sconv, 
sconv_utf8, 
sconv_utf16be, 
bytein, 
lzss, 
br, 
maincode, 
offsetcode, 
lowoffsetcode, 
lengthcode, 
range_dec, 
ppmd7_context, 
main_flags, 
file_flags, 
mode, 
unp_offset, 
unp_buffer_size, 
dictionary_size, 
found_first_header, 
cursor, 
nodes, 
lastlength, 
lastoffset, 
lastlowoffset, 
numlowoffsetrepeats, 
ppmd_escape, 
init_default_conversion, 
has_encrypted_entries, 
oldoffset, 
encryptver, 
compression_method, 
valid, 
start_new_block, 
entry_eof, 
has_endarc_header, 
output_last_match, 
start_new_table, 
ppmd_valid, 
ppmd_eod, 
is_ppmd_block, 
reserved1, 
reserved2, 
salt, 
lengthtable, 
consider reordering the fields or adding explicit padding members [clang-analyzer-optin.performance.Padding]
struct rar
       ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_rar.c:210:8: note: Excessive padding in 'struct rar' (43 padding bytes, where 3 is optimal). Optimal fields order: file_crc, packed_size, unp_size, mtime, mnsec, filename, filename_save, filename_save_size, filename_allocated, atime, ansec, ctime, cnsec, arctime, arcnsec, bytes_unconsumed, bytes_remaining, bytes_uncopied, offset, offset_outgoing, offset_seek, unp_buffer, crc_calculated, dbo, filterstart, sconv_default, opt_sconv, sconv_utf8, sconv_utf16be, bytein, lzss, br, maincode, offsetcode, lowoffsetcode, lengthcode, range_dec, ppmd7_context, main_flags, file_flags, mode, unp_offset, unp_buffer_size, dictionary_size, found_first_header, cursor, nodes, lastlength, lastoffset, lastlowoffset, numlowoffsetrepeats, ppmd_escape, init_default_conversion, has_encrypted_entries, oldoffset, encryptver, compression_method, valid, start_new_block, entry_eof, has_endarc_header, output_last_match, start_new_table, ppmd_valid, ppmd_eod, is_ppmd_block, reserved1, reserved2, salt, lengthtable, consider reordering the fields or adding explicit padding members

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpw5kg2K.yaml -p=/project/git /project/git/Utilities/cmlibuv/src/unix/fs.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpq9LJiY.yaml -p=/project/git /project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_7zip.c
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_7zip.c:759:4: warning: Null pointer passed as an argument to a 'nonnull' parameter [clang-analyzer-core.NonNullParamChecker]
                        memcpy(symname+symsize, buff, size);
                        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_7zip.c:626:6: note: Assuming the condition is false
        if (zip->has_encrypted_entries == ARCHIVE_READ_FORMAT_ENCRYPTION_DONT_KNOW) {
            ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_7zip.c:626:2: note: Taking false branch
        if (zip->has_encrypted_entries == ARCHIVE_READ_FORMAT_ENCRYPTION_DONT_KNOW) {
        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_7zip.c:631:6: note: Assuming the condition is false
        if (a->archive.archive_format_name == NULL)
            ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_7zip.c:631:2: note: Taking false branch
        if (a->archive.archive_format_name == NULL)
        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_7zip.c:634:6: note: Assuming the condition is false
        if (zip->entries == NULL) {
            ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_7zip.c:634:2: note: Taking false branch
        if (zip->entries == NULL) {
        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_7zip.c:649:6: note: Assuming the condition is false
        if (zip->entries_remaining <= 0 || zip_entry == NULL)
            ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_7zip.c:649:6: note: Left side of '||' is false
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_7zip.c:649:37: note: Assuming 'zip_entry' is not equal to NULL
        if (zip->entries_remaining <= 0 || zip_entry == NULL)
                                           ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_7zip.c:649:2: note: Taking false branch
        if (zip->entries_remaining <= 0 || zip_entry == NULL)
        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_7zip.c:658:6: note: Assuming the condition is false
        if (zip->sconv == NULL) {
            ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_7zip.c:658:2: note: Taking false branch
        if (zip->sconv == NULL) {
        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_7zip.c:669:6: note: Left side of '&&' is true
        if (zip_entry && zip_entry->folderIndex < zip->si.ci.numFolders) {
            ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_7zip.c:669:19: note: Assuming the condition is false
        if (zip_entry && zip_entry->folderIndex < zip->si.ci.numFolders) {
                         ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_7zip.c:669:2: note: Taking false branch
        if (zip_entry && zip_entry->folderIndex < zip->si.ci.numFolders) {
        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_7zip.c:687:2: note: Taking false branch
        if (zip->has_encrypted_entries == ARCHIVE_READ_FORMAT_ENCRYPTION_DONT_KNOW) {
        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_7zip.c:691:2: note: Taking false branch
        if (archive_entry_copy_pathname_l(entry,
        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_7zip.c:709:6: note: Assuming the condition is false
        if (zip_entry->flg & MTIME_IS_SET)
            ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_7zip.c:709:2: note: Taking false branch
        if (zip_entry->flg & MTIME_IS_SET)
        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_7zip.c:712:6: note: Assuming the condition is false
        if (zip_entry->flg & CTIME_IS_SET)
            ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_7zip.c:712:2: note: Taking false branch
        if (zip_entry->flg & CTIME_IS_SET)
        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_7zip.c:715:6: note: Assuming the condition is false
        if (zip_entry->flg & ATIME_IS_SET)
            ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_7zip.c:715:2: note: Taking false branch
        if (zip_entry->flg & ATIME_IS_SET)
        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_7zip.c:718:6: note: Assuming the condition is true
        if (zip_entry->ssIndex != (uint32_t)-1) {
            ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_7zip.c:718:2: note: Taking true branch
        if (zip_entry->ssIndex != (uint32_t)-1) {
        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_7zip.c:728:6: note: Assuming the condition is false
        if (zip->entry_bytes_remaining < 1)
            ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_7zip.c:728:2: note: Taking false branch
        if (zip->entry_bytes_remaining < 1)
        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_7zip.c:731:6: note: Assuming the condition is true
        if ((zip_entry->mode & AE_IFMT) == AE_IFLNK) {
            ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_7zip.c:731:2: note: Taking true branch
        if ((zip_entry->mode & AE_IFMT) == AE_IFLNK) {
        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_7zip.c:739:3: note: Loop condition is true.  Entering loop body
                while (zip->entry_bytes_remaining > 0) {
                ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_7zip.c:745:8: note: Calling 'archive_read_format_7zip_read_data'
                        r = archive_read_format_7zip_read_data(a, &buff,
                            ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_7zip.c:794:2: note: Taking false branch
        if (zip->has_encrypted_entries == ARCHIVE_READ_FORMAT_ENCRYPTION_DONT_KNOW) {
        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_7zip.c:798:6: note: Assuming the condition is false
        if (zip->pack_stream_bytes_unconsumed)
            ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_7zip.c:798:2: note: Taking false branch
        if (zip->pack_stream_bytes_unconsumed)
        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_7zip.c:803:2: note: Null pointer value stored to 'buff'
        *buff = NULL;
        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_7zip.c:808:2: note: Taking false branch
        if (zip->end_of_entry)
        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_7zip.c:811:10: note: Calling 'read_stream'
        bytes = read_stream(a, buff,
                ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_7zip.c:3210:6: note: Assuming the condition is true
        if (zip->uncompressed_buffer_bytes_remaining == 0) {
            ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_7zip.c:3210:2: note: Taking true branch
        if (zip->uncompressed_buffer_bytes_remaining == 0) {
        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_7zip.c:3211:7: note: Assuming the condition is true
                if (zip->pack_stream_inbytes_remaining > 0) {
                    ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_7zip.c:3211:3: note: Taking true branch
                if (zip->pack_stream_inbytes_remaining > 0) {
                ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_7zip.c:3213:8: note: Assuming 'r' is < 0
                        if (r < 0)
                            ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_7zip.c:3213:4: note: Taking true branch
                        if (r < 0)
                        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_7zip.c:3214:5: note: Returning without writing to '*buff'
                                return (r);
                                ^
1 warning generated.

/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_7zip.c:811:10: note: Returning from 'read_stream'
        bytes = read_stream(a, buff,
                ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_7zip.c:813:2: note: Taking true branch
        if (bytes < 0)
        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_7zip.c:745:8: note: Returning from 'archive_read_format_7zip_read_data'
                        r = archive_read_format_7zip_read_data(a, &buff,
                            ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_7zip.c:747:8: note: Assuming the condition is false
                        if (r < ARCHIVE_WARN) {
                            ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_7zip.c:747:4: note: Taking false branch
                        if (r < ARCHIVE_WARN) {
                        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_7zip.c:752:8: note: Assuming 'mem' is not equal to NULL
                        if (mem == NULL) {
                            ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_7zip.c:752:4: note: Taking false branch
                        if (mem == NULL) {
                        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_7zip.c:759:4: note: Null pointer passed as an argument to a 'nonnull' parameter
                        memcpy(symname+symsize, buff, size);
                        ^

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpoQqQ_F.yaml -p=/project/git /project/git/Utilities/cmlibuv/src/unix/linux-syscalls.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpYbyUXW.yaml -p=/project/git /project/git/Utilities/cmlibuv/src/unix/procfs-exepath.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpGT6QQI.yaml -p=/project/git /project/git/Utilities/cmlibuv/src/unix/proctitle.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpSX9UWb.yaml -p=/project/git /project/git/Utilities/cmlibuv/src/unix/sysinfo-loadavg.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmptGMNih.yaml -p=/project/git /project/git/Utilities/cmlibuv/src/unix/sysinfo-memory.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpNbzwGr.yaml -p=/project/git /project/git/Utilities/cmlibuv/src/unix/process.c
/project/git/Utilities/cmlibuv/src/unix/process.c:324:14: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]
    close_fd = pipes[fd][0];
             ^
/project/git/Utilities/cmlibuv/src/unix/process.c:470:7: note: Assuming the condition is false
  if (options->cpumask != NULL) {
      ^
/project/git/Utilities/cmlibuv/src/unix/process.c:470:3: note: Taking false branch
  if (options->cpumask != NULL) {
  ^
/project/git/Utilities/cmlibuv/src/unix/process.c:495:7: note: Assuming 'stdio_count' is < 3
  if (stdio_count < 3)
      ^
/project/git/Utilities/cmlibuv/src/unix/process.c:495:3: note: Taking true branch
  if (stdio_count < 3)
  ^
/project/git/Utilities/cmlibuv/src/unix/process.c:500:3: note: Taking false branch
  if (stdio_count > (int) ARRAY_SIZE(pipes_storage))
  ^
/project/git/Utilities/cmlibuv/src/unix/process.c:503:3: note: Taking false branch
  if (pipes == NULL)
  ^
/project/git/Utilities/cmlibuv/src/unix/process.c:506:3: note: Loop condition is true.  Entering loop body
  for (i = 0; i < stdio_count; i++) {
  ^
/project/git/Utilities/cmlibuv/src/unix/process.c:506:3: note: Loop condition is true.  Entering loop body
/project/git/Utilities/cmlibuv/src/unix/process.c:506:3: note: Loop condition is true.  Entering loop body
/project/git/Utilities/cmlibuv/src/unix/process.c:506:3: note: Loop condition is false. Execution continues on line 511
/project/git/Utilities/cmlibuv/src/unix/process.c:511:15: note: Assuming the condition is false
  for (i = 0; i < options->stdio_count; i++) {
              ^
/project/git/Utilities/cmlibuv/src/unix/process.c:511:3: note: Loop condition is false. Execution continues on line 537
  for (i = 0; i < options->stdio_count; i++) {
  ^
/project/git/Utilities/cmlibuv/src/unix/process.c:538:7: note: Assuming 'err' is 0
  if (err)
      ^
/project/git/Utilities/cmlibuv/src/unix/process.c:538:3: note: Taking false branch
  if (err)
  ^
/project/git/Utilities/cmlibuv/src/unix/process.c:547:7: note: Assuming the condition is false
  if (pid == -1) {
      ^
/project/git/Utilities/cmlibuv/src/unix/process.c:547:3: note: Taking false branch
  if (pid == -1) {
  ^
/project/git/Utilities/cmlibuv/src/unix/process.c:555:7: note: Assuming 'pid' is equal to 0
  if (pid == 0) {
      ^
/project/git/Utilities/cmlibuv/src/unix/process.c:555:3: note: Taking true branch
  if (pid == 0) {
  ^
/project/git/Utilities/cmlibuv/src/unix/process.c:556:5: note: Calling 'uv__process_child_init'
    uv__process_child_init(options, stdio_count, pipes, signal_pipe[1]);
    ^
/project/git/Utilities/cmlibuv/src/unix/process.c:305:7: note: Assuming the condition is false
  if (options->flags & UV_PROCESS_DETACHED)
      ^
/project/git/Utilities/cmlibuv/src/unix/process.c:305:3: note: Taking false branch
  if (options->flags & UV_PROCESS_DETACHED)
  ^
/project/git/Utilities/cmlibuv/src/unix/process.c:312:3: note: Loop condition is true.  Entering loop body
  for (fd = 0; fd < stdio_count; fd++) {
  ^
/project/git/Utilities/cmlibuv/src/unix/process.c:314:20: note: Left side of '||' is true
    if (use_fd < 0 || use_fd >= fd)
                   ^
/project/git/Utilities/cmlibuv/src/unix/process.c:315:7: note:  Execution continues on line 312
      continue;
      ^
/project/git/Utilities/cmlibuv/src/unix/process.c:312:3: note: Loop condition is true.  Entering loop body
  for (fd = 0; fd < stdio_count; fd++) {
  ^
/project/git/Utilities/cmlibuv/src/unix/process.c:314:20: note: Left side of '||' is true
    if (use_fd < 0 || use_fd >= fd)
                   ^
/project/git/Utilities/cmlibuv/src/unix/process.c:315:7: note:  Execution continues on line 312
      continue;
      ^
/project/git/Utilities/cmlibuv/src/unix/process.c:312:3: note: Loop condition is true.  Entering loop body
  for (fd = 0; fd < stdio_count; fd++) {
  ^
/project/git/Utilities/cmlibuv/src/unix/process.c:314:20: note: Left side of '||' is true
    if (use_fd < 0 || use_fd >= fd)
                   ^
/project/git/Utilities/cmlibuv/src/unix/process.c:315:7: note:  Execution continues on line 312
      continue;
      ^
/project/git/Utilities/cmlibuv/src/unix/process.c:312:3: note: Loop condition is false. Execution continues on line 323
  for (fd = 0; fd < stdio_count; fd++) {
  ^
/project/git/Utilities/cmlibuv/src/unix/process.c:323:3: note: Loop condition is true.  Entering loop body
  for (fd = 0; fd < stdio_count; fd++) {
  ^
/project/git/Utilities/cmlibuv/src/unix/process.c:327:5: note: Taking true branch
    if (use_fd < 0) {
    ^
/project/git/Utilities/cmlibuv/src/unix/process.c:328:7: note: Taking false branch
      if (fd >= 3)
      ^
/project/git/Utilities/cmlibuv/src/unix/process.c:334:36: note: '?' condition is true
        use_fd = open("/dev/null", fd == 0 ? O_RDONLY : O_RDWR);
                                   ^
/project/git/Utilities/cmlibuv/src/unix/process.c:337:13: note: Assuming the condition is false
        if (use_fd == -1) {
            ^
/project/git/Utilities/cmlibuv/src/unix/process.c:337:9: note: Taking false branch
        if (use_fd == -1) {
        ^
/project/git/Utilities/cmlibuv/src/unix/process.c:344:9: note: Assuming 'fd' is not equal to 'use_fd'
    if (fd == use_fd)
        ^
/project/git/Utilities/cmlibuv/src/unix/process.c:344:5: note: Taking false branch
    if (fd == use_fd)
    ^
/project/git/Utilities/cmlibuv/src/unix/process.c:349:9: note: Assuming the condition is false
    if (fd == -1) {
        ^
1 warning generated.

/project/git/Utilities/cmlibuv/src/unix/process.c:349:5: note: Taking false branch
    if (fd == -1) {
    ^
/project/git/Utilities/cmlibuv/src/unix/process.c:354:9: note: Assuming 'fd' is > 2
    if (fd <= 2)
        ^
/project/git/Utilities/cmlibuv/src/unix/process.c:354:5: note: Taking false branch
    if (fd <= 2)
    ^
/project/git/Utilities/cmlibuv/src/unix/process.c:357:9: note: Assuming 'close_fd' is < 'stdio_count'
    if (close_fd >= stdio_count)
        ^
/project/git/Utilities/cmlibuv/src/unix/process.c:357:5: note: Taking false branch
    if (close_fd >= stdio_count)
    ^
/project/git/Utilities/cmlibuv/src/unix/process.c:323:16: note: Assuming 'fd' is < 'stdio_count'
  for (fd = 0; fd < stdio_count; fd++) {
               ^
/project/git/Utilities/cmlibuv/src/unix/process.c:323:3: note: Loop condition is true.  Entering loop body
  for (fd = 0; fd < stdio_count; fd++) {
  ^
/project/git/Utilities/cmlibuv/src/unix/process.c:327:9: note: Assuming 'use_fd' is < 0
    if (use_fd < 0) {
        ^
/project/git/Utilities/cmlibuv/src/unix/process.c:327:5: note: Taking true branch
    if (use_fd < 0) {
    ^
/project/git/Utilities/cmlibuv/src/unix/process.c:328:7: note: Taking false branch
      if (fd >= 3)
      ^
/project/git/Utilities/cmlibuv/src/unix/process.c:334:36: note: '?' condition is false
        use_fd = open("/dev/null", fd == 0 ? O_RDONLY : O_RDWR);
                                   ^
/project/git/Utilities/cmlibuv/src/unix/process.c:337:13: note: Assuming the condition is false
        if (use_fd == -1) {
            ^
/project/git/Utilities/cmlibuv/src/unix/process.c:337:9: note: Taking false branch
        if (use_fd == -1) {
        ^
/project/git/Utilities/cmlibuv/src/unix/process.c:344:9: note: Assuming 'fd' is equal to 'use_fd'
    if (fd == use_fd)
        ^
/project/git/Utilities/cmlibuv/src/unix/process.c:344:5: note: Taking true branch
    if (fd == use_fd)
    ^
/project/git/Utilities/cmlibuv/src/unix/process.c:349:5: note: Taking false branch
    if (fd == -1) {
    ^
/project/git/Utilities/cmlibuv/src/unix/process.c:354:5: note: Taking true branch
    if (fd <= 2)
    ^
/project/git/Utilities/cmlibuv/src/unix/process.c:357:5: note: Taking false branch
    if (close_fd >= stdio_count)
    ^
/project/git/Utilities/cmlibuv/src/unix/process.c:323:3: note: Loop condition is true.  Entering loop body
  for (fd = 0; fd < stdio_count; fd++) {
  ^
/project/git/Utilities/cmlibuv/src/unix/process.c:324:14: note: Assigned value is garbage or undefined
    close_fd = pipes[fd][0];
             ^

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpG6imej.yaml -p=/project/git /project/git/Utilities/cmlibarchive/libarchive/archive_write_set_format_zip.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmprm_vtf.yaml -p=/project/git /project/git/Utilities/cmlibuv/src/unix/udp.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmp3Jrq8s.yaml -p=/project/git /project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_cab.c
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_cab.c:1315:27: warning: Access to field 'compressed_size' results in a dereference of a null pointer (loaded from variable 'cfdata') [clang-analyzer-core.NullDereference]
                cfdata->compressed_size = 0;
                                        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_cab.c:1965:6: note: Assuming the condition is false
        if (cab->end_of_archive)
            ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_cab.c:1965:2: note: Taking false branch
        if (cab->end_of_archive)
        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_cab.c:1968:6: note: Assuming the condition is false
        if (!cab->read_data_invoked) {
            ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_cab.c:1968:2: note: Taking false branch
        if (!cab->read_data_invoked) {
        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_cab.c:1976:6: note: Assuming the condition is true
        if (cab->entry_unconsumed) {
            ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_cab.c:1976:2: note: Taking true branch
        if (cab->entry_unconsumed) {
        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_cab.c:1978:12: note: Calling 'cab_consume_cfdata'
                r = (int)cab_consume_cfdata(a, cab->entry_unconsumed);
                         ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_cab.c:1769:6: note: Assuming 'rbytes' is >= 0
        if (rbytes < 0)
            ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_cab.c:1769:2: note: Taking false branch
        if (rbytes < 0)
        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_cab.c:1773:2: note: Loop condition is true.  Entering loop body
        while (rbytes > 0) {
        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_cab.c:1776:7: note: Assuming the condition is false
                if (cfdata->compressed_size == 0) {
                    ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_cab.c:1776:3: note: Taking false branch
                if (cfdata->compressed_size == 0) {
                ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_cab.c:1783:7: note: Assuming 'cbytes' is <= 'rbytes'
                if (cbytes > rbytes)
                    ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_cab.c:1783:3: note: Taking false branch
                if (cbytes > rbytes)
                ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_cab.c:1787:7: note: Assuming the condition is true
                if (cfdata->uncompressed_avail == 0 &&
                    ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_cab.c:1787:7: note: Left side of '&&' is true
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_cab.c:1788:7: note: Assuming the condition is true
                   (cab->entry_cffile->folder == iFoldCONTINUED_PREV_AND_NEXT ||
                    ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_cab.c:1788:65: note: Left side of '||' is true
                   (cab->entry_cffile->folder == iFoldCONTINUED_PREV_AND_NEXT ||
                                                                              ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_cab.c:1791:4: note: Taking true branch
                        if (cbytes == cfdata->uncompressed_bytes_remaining) {
                        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_cab.c:1798:11: note: Calling 'cab_next_cfdata'
                                err = cab_next_cfdata(a);
                                      ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_cab.c:1191:2: note: 'cfdata' initialized here
        struct cfdata *cfdata = cab->entry_cfdata;
        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_cab.c:1194:6: note: Assuming 'cfdata' is equal to NULL
        if (cfdata != NULL && cfdata->uncompressed_bytes_remaining > 0)
            ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_cab.c:1194:21: note: Left side of '&&' is false
        if (cfdata != NULL && cfdata->uncompressed_bytes_remaining > 0)
                           ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_cab.c:1197:2: note: Taking true branch
        if (cfdata == NULL) {
        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_cab.c:1205:7: note: Assuming 'skip' is >= 0
                if (skip < 0) {
                    ^
1 warning generated.

/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_cab.c:1205:3: note: Taking false branch
                if (skip < 0) {
                ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_cab.c:1226:7: note: Assuming 'skip' is > 0
                if (skip > 0) {
                    ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_cab.c:1226:3: note: Taking true branch
                if (skip > 0) {
                ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_cab.c:1227:8: note: Assuming the condition is false
                        if (__archive_read_consume(a, skip) < 0)
                            ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_cab.c:1227:4: note: Taking false branch
                        if (__archive_read_consume(a, skip) < 0)
                        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_cab.c:1237:6: note: Assuming the condition is false
        if (cab->entry_cffolder->cfdata_index <
            ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_cab.c:1237:2: note: Taking false branch
        if (cab->entry_cffolder->cfdata_index <
        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_cab.c:1313:13: note: Assuming the condition is true
        } else if (cab->entry_cffolder->cfdata_count > 0) {
                   ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_cab.c:1313:9: note: Taking true branch
        } else if (cab->entry_cffolder->cfdata_count > 0) {
               ^
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_cab.c:1315:27: note: Access to field 'compressed_size' results in a dereference of a null pointer (loaded from variable 'cfdata')
                cfdata->compressed_size = 0;
                                        ^

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmp_vFKrK.yaml -p=/project/git /project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_zip.c
/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_zip.c:134:8: warning: Excessive padding in 'struct zip' (36 padding bytes, where 4 is optimal). 
Optimal fields order: 
central_directory_offset, 
central_directory_entries_total, 
central_directory_entries_on_this_disk, 
zip_entries, 
unconsumed, 
entry, 
entry_bytes_remaining, 
entry_compressed_bytes_read, 
entry_uncompressed_bytes_read, 
entry_crc32, 
crc32func, 
uncompressed_buffer, 
uncompressed_buffer_size, 
sconv, 
sconv_default, 
sconv_utf8, 
decrypted_buffer, 
decrypted_ptr, 
decrypted_buffer_size, 
decrypted_bytes_remaining, 
decrypted_unconsumed_bytes, 
iv, 
erd, 
v_data, 
tree, 
tree_rsrc, 
format_name, 
stream, 
has_encrypted_entries, 
init_default_conversion, 
process_mac_extensions, 
cctx, 
hctx, 
iv_size, 
alg_id, 
bit_len, 
flags, 
erd_size, 
v_size, 
v_crc32, 
tctx, 
ignore_crc32, 
decompress_init, 
end_of_entry, 
stream_valid, 
init_decryption, 
tctx_valid, 
cctx_valid, 
hctx_valid, 
consider reordering the fields or adding explicit padding members [clang-analyzer-optin.performance.Padding]
struct zip {
       ^
1 warning generated.

1 warning generated.

1 warning generated.

/project/git/Utilities/cmlibarchive/libarchive/archive_read_support_format_zip.c:134:8: note: Excessive padding in 'struct zip' (36 padding bytes, where 4 is optimal). Optimal fields order: central_directory_offset, central_directory_entries_total, central_directory_entries_on_this_disk, zip_entries, unconsumed, entry, entry_bytes_remaining, entry_compressed_bytes_read, entry_uncompressed_bytes_read, entry_crc32, crc32func, uncompressed_buffer, uncompressed_buffer_size, sconv, sconv_default, sconv_utf8, decrypted_buffer, decrypted_ptr, decrypted_buffer_size, decrypted_bytes_remaining, decrypted_unconsumed_bytes, iv, erd, v_data, tree, tree_rsrc, format_name, stream, has_encrypted_entries, init_default_conversion, process_mac_extensions, cctx, hctx, iv_size, alg_id, bit_len, flags, erd_size, v_size, v_crc32, tctx, ignore_crc32, decompress_init, end_of_entry, stream_valid, init_decryption, tctx_valid, cctx_valid, hctx_valid, consider reordering the fields or adding explicit padding members

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpZvNFOj.yaml -p=/project/git /project/git/Utilities/cmlibuv/src/unix/timer.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmp8B0WlP.yaml -p=/project/git /project/git/Source/CTest/cmProcess.cxx
/project/git/Source/cmCTest.h:32:7: warning: Excessive padding in 'class cmCTest' (46 padding bytes, where 6 is optimal). 
Optimal fields order: 
StopTime, 
TimeOut, 
GlobalTimeout, 
TestLoad, 
StreamOut, 
StreamErr, 
OutputLogFile, 
InitialCommandLineArguments, 
ConfigType, 
ScheduleType, 
CurrentTag, 
SpecificTrack, 
BinaryDir, 
NotesFiles, 
BuildID, 
TestingHandlers, 
CTestConfiguration, 
CTestConfigurationOverwrites, 
PartMap, 
Definitions, 
Parts, 
RepeatTests, 
TestModel, 
MaxTestNameWidth, 
ParallelLevel, 
CompatibilityMode, 
DartVersion, 
SubmitIndex, 
OutputLogFileLastTag, 
RepeatUntilFail, 
TestProgressOutput, 
Verbose, 
ExtraVerbose, 
ProduceXML, 
LabelSummary, 
SubprojectSummary, 
UseHTTP10, 
PrintLabels, 
Failover, 
FlushTestProgressLine, 
ForceNewCTestProcess, 
RunConfigurationScript, 
ShowOnly, 
TomorrowTag, 
ParallelLevelSetInCli, 
InteractiveDebugMode, 
ShortDateFormat, 
CompressXMLFiles, 
CompressTestOutput, 
SuppressUpdatingCTestConfiguration, 
Debug, 
ShowLineNumbers, 
Quiet, 
DropSiteCDash, 
OutputTestOutputOnTestFailure, 
consider reordering the fields or adding explicit padding members [clang-analyzer-optin.performance.Padding]
class cmCTest
      ^
/project/git/Source/cmCTest.h:32:7: note: Excessive padding in 'class cmCTest' (46 padding bytes, where 6 is optimal). Optimal fields order: StopTime, TimeOut, GlobalTimeout, TestLoad, StreamOut, StreamErr, OutputLogFile, InitialCommandLineArguments, ConfigType, ScheduleType, CurrentTag, SpecificTrack, BinaryDir, NotesFiles, BuildID, TestingHandlers, CTestConfiguration, CTestConfigurationOverwrites, PartMap, Definitions, Parts, RepeatTests, TestModel, MaxTestNameWidth, ParallelLevel, CompatibilityMode, DartVersion, SubmitIndex, OutputLogFileLastTag, RepeatUntilFail, TestProgressOutput, Verbose, ExtraVerbose, ProduceXML, LabelSummary, SubprojectSummary, UseHTTP10, PrintLabels, Failover, FlushTestProgressLine, ForceNewCTestProcess, RunConfigurationScript, ShowOnly, TomorrowTag, ParallelLevelSetInCli, InteractiveDebugMode, ShortDateFormat, CompressXMLFiles, CompressTestOutput, SuppressUpdatingCTestConfiguration, Debug, ShowLineNumbers, Quiet, DropSiteCDash, OutputTestOutputOnTestFailure, consider reordering the fields or adding explicit padding members

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmp4dFfRU.yaml -p=/project/git /project/git/Utilities/cmlibuv/src/unix/linux-core.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpFHVgGG.yaml -p=/project/git /project/git/Utilities/cmlibuv/src/unix/stream.c
/project/git/Utilities/cmlibuv/src/unix/stream.c:888:9: warning: Value stored to 'n' is never read [clang-analyzer-deadcode.DeadStores]
        n = 0;
        ^
/project/git/Utilities/cmlibuv/src/unix/stream.c:888:9: note: Value stored to 'n' is never read

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpGzzNRk.yaml -p=/project/git /project/git/Utilities/cmjsoncpp/src/lib_json/json_value.cpp

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpqc3Xxb.yaml -p=/project/git /project/git/Utilities/cmlibarchive/libarchive/archive_string.c
/project/git/Utilities/cmlibarchive/libarchive/archive_string.c:4057:43: warning: Null pointer passed as an argument to a 'nonnull' parameter [clang-analyzer-core.NonNullParamChecker]
  archive_strncpy(&(aes->aes_utf8), utf8, strlen(utf8));
1 warning generated.

1 warning generated.

                                          ^
/project/git/Utilities/cmlibarchive/libarchive/archive_string.c:4051:7: note: Assuming 'utf8' is equal to NULL
  if (utf8 == NULL) {
      ^
/project/git/Utilities/cmlibarchive/libarchive/archive_string.c:4051:3: note: Taking true branch
  if (utf8 == NULL) {
  ^
/project/git/Utilities/cmlibarchive/libarchive/archive_string.c:4057:43: note: Null pointer passed as an argument to a 'nonnull' parameter
  archive_strncpy(&(aes->aes_utf8), utf8, strlen(utf8));
                                          ^
/project/git/Utilities/cmlibarchive/libarchive/archive_string.h:176:47: note: expanded from macro 'archive_strncpy'
        ((as)->length=0, archive_strncat((as), (p), (l)))
                                                     ^

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpLyyeoQ.yaml -p=/project/git /project/git/Source/CTest/cmCTestCoverageCommand.cxx
/project/git/Source/cmCTest.h:32:7: warning: Excessive padding in 'class cmCTest' (46 padding bytes, where 6 is optimal). 
Optimal fields order: 
StopTime, 
TimeOut, 
GlobalTimeout, 
TestLoad, 
StreamOut, 
StreamErr, 
OutputLogFile, 
InitialCommandLineArguments, 
ConfigType, 
ScheduleType, 
CurrentTag, 
SpecificTrack, 
BinaryDir, 
NotesFiles, 
BuildID, 
TestingHandlers, 
CTestConfiguration, 
CTestConfigurationOverwrites, 
PartMap, 
Definitions, 
Parts, 
RepeatTests, 
TestModel, 
MaxTestNameWidth, 
ParallelLevel, 
CompatibilityMode, 
DartVersion, 
SubmitIndex, 
OutputLogFileLastTag, 
RepeatUntilFail, 
TestProgressOutput, 
Verbose, 
ExtraVerbose, 
ProduceXML, 
LabelSummary, 
SubprojectSummary, 
UseHTTP10, 
PrintLabels, 
Failover, 
FlushTestProgressLine, 
ForceNewCTestProcess, 
RunConfigurationScript, 
ShowOnly, 
TomorrowTag, 
ParallelLevelSetInCli, 
InteractiveDebugMode, 
ShortDateFormat, 
CompressXMLFiles, 
CompressTestOutput, 
SuppressUpdatingCTestConfiguration, 
Debug, 
ShowLineNumbers, 
Quiet, 
DropSiteCDash, 
OutputTestOutputOnTestFailure, 
consider reordering the fields or adding explicit padding members [clang-analyzer-optin.performance.Padding]
class cmCTest
      ^
/project/git/Source/cmCTest.h:32:7: note: Excessive padding in 'class cmCTest' (46 padding bytes, where 6 is optimal). Optimal fields order: StopTime, TimeOut, GlobalTimeout, TestLoad, StreamOut, StreamErr, OutputLogFile, InitialCommandLineArguments, ConfigType, ScheduleType, CurrentTag, SpecificTrack, BinaryDir, NotesFiles, BuildID, TestingHandlers, CTestConfiguration, CTestConfigurationOverwrites, PartMap, Definitions, Parts, RepeatTests, TestModel, MaxTestNameWidth, ParallelLevel, CompatibilityMode, DartVersion, SubmitIndex, OutputLogFileLastTag, RepeatUntilFail, TestProgressOutput, Verbose, ExtraVerbose, ProduceXML, LabelSummary, SubprojectSummary, UseHTTP10, PrintLabels, Failover, FlushTestProgressLine, ForceNewCTestProcess, RunConfigurationScript, ShowOnly, TomorrowTag, ParallelLevelSetInCli, InteractiveDebugMode, ShortDateFormat, CompressXMLFiles, CompressTestOutput, SuppressUpdatingCTestConfiguration, Debug, ShowLineNumbers, Quiet, DropSiteCDash, OutputTestOutputOnTestFailure, consider reordering the fields or adding explicit padding members

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpIGhwdH.yaml -p=/project/git /project/git/Source/CTest/cmCTestConfigureCommand.cxx
/project/git/Source/cmCTest.h:32:7: warning: Excessive padding in 'class cmCTest' (46 padding bytes, where 6 is optimal). 
Optimal fields order: 
StopTime, 
TimeOut, 
GlobalTimeout, 
TestLoad, 
StreamOut, 
StreamErr, 
OutputLogFile, 
InitialCommandLineArguments, 
ConfigType, 
ScheduleType, 
CurrentTag, 
SpecificTrack, 
BinaryDir, 
NotesFiles, 
BuildID, 
TestingHandlers, 
CTestConfiguration, 
CTestConfigurationOverwrites, 
PartMap, 
Definitions, 
Parts, 
RepeatTests, 
TestModel, 
MaxTestNameWidth, 
ParallelLevel, 
CompatibilityMode, 
DartVersion, 
SubmitIndex, 
OutputLogFileLastTag, 
RepeatUntilFail, 
TestProgressOutput, 
Verbose, 
ExtraVerbose, 
ProduceXML, 
LabelSummary, 
SubprojectSummary, 
UseHTTP10, 
PrintLabels, 
1 warning generated.

Failover, 
FlushTestProgressLine, 
ForceNewCTestProcess, 
RunConfigurationScript, 
ShowOnly, 
TomorrowTag, 
ParallelLevelSetInCli, 
InteractiveDebugMode, 
ShortDateFormat, 
CompressXMLFiles, 
CompressTestOutput, 
SuppressUpdatingCTestConfiguration, 
Debug, 
ShowLineNumbers, 
Quiet, 
DropSiteCDash, 
OutputTestOutputOnTestFailure, 
consider reordering the fields or adding explicit padding members [clang-analyzer-optin.performance.Padding]
class cmCTest
      ^
/project/git/Source/cmCTest.h:32:7: note: Excessive padding in 'class cmCTest' (46 padding bytes, where 6 is optimal). Optimal fields order: StopTime, TimeOut, GlobalTimeout, TestLoad, StreamOut, StreamErr, OutputLogFile, InitialCommandLineArguments, ConfigType, ScheduleType, CurrentTag, SpecificTrack, BinaryDir, NotesFiles, BuildID, TestingHandlers, CTestConfiguration, CTestConfigurationOverwrites, PartMap, Definitions, Parts, RepeatTests, TestModel, MaxTestNameWidth, ParallelLevel, CompatibilityMode, DartVersion, SubmitIndex, OutputLogFileLastTag, RepeatUntilFail, TestProgressOutput, Verbose, ExtraVerbose, ProduceXML, LabelSummary, SubprojectSummary, UseHTTP10, PrintLabels, Failover, FlushTestProgressLine, ForceNewCTestProcess, RunConfigurationScript, ShowOnly, TomorrowTag, ParallelLevelSetInCli, InteractiveDebugMode, ShortDateFormat, CompressXMLFiles, CompressTestOutput, SuppressUpdatingCTestConfiguration, Debug, ShowLineNumbers, Quiet, DropSiteCDash, OutputTestOutputOnTestFailure, consider reordering the fields or adding explicit padding members

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpmAiR9h.yaml -p=/project/git /project/git/Source/CPack/cpack.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpI1_PVp.yaml -p=/project/git /project/git/Source/CTest/cmCTestBuildCommand.cxx
/project/git/Source/cmCTest.h:32:7: warning: Excessive padding in 'class cmCTest' (46 padding bytes, where 6 is optimal). 
Optimal fields order: 
StopTime, 
TimeOut, 
GlobalTimeout, 
TestLoad, 
StreamOut, 
StreamErr, 
OutputLogFile, 
InitialCommandLineArguments, 
ConfigType, 
ScheduleType, 
CurrentTag, 
SpecificTrack, 
BinaryDir, 
NotesFiles, 
BuildID, 
TestingHandlers, 
CTestConfiguration, 
CTestConfigurationOverwrites, 
PartMap, 
Definitions, 
Parts, 
RepeatTests, 
TestModel, 
MaxTestNameWidth, 
ParallelLevel, 
CompatibilityMode, 
DartVersion, 
SubmitIndex, 
OutputLogFileLastTag, 
RepeatUntilFail, 
TestProgressOutput, 
Verbose, 
ExtraVerbose, 
ProduceXML, 
LabelSummary, 
SubprojectSummary, 
UseHTTP10, 
PrintLabels, 
Failover, 
FlushTestProgressLine, 
ForceNewCTestProcess, 
RunConfigurationScript, 
ShowOnly, 
TomorrowTag, 
ParallelLevelSetInCli, 
InteractiveDebugMode, 
ShortDateFormat, 
CompressXMLFiles, 
CompressTestOutput, 
SuppressUpdatingCTestConfiguration, 
Debug, 
ShowLineNumbers, 
Quiet, 
DropSiteCDash, 
OutputTestOutputOnTestFailure, 
consider reordering the fields or adding explicit padding members [clang-analyzer-optin.performance.Padding]
class cmCTest
      ^
1 warning generated.

1 warning generated.

1 warning generated.

1 warning generated.

/project/git/Source/cmCTest.h:32:7: note: Excessive padding in 'class cmCTest' (46 padding bytes, where 6 is optimal). Optimal fields order: StopTime, TimeOut, GlobalTimeout, TestLoad, StreamOut, StreamErr, OutputLogFile, InitialCommandLineArguments, ConfigType, ScheduleType, CurrentTag, SpecificTrack, BinaryDir, NotesFiles, BuildID, TestingHandlers, CTestConfiguration, CTestConfigurationOverwrites, PartMap, Definitions, Parts, RepeatTests, TestModel, MaxTestNameWidth, ParallelLevel, CompatibilityMode, DartVersion, SubmitIndex, OutputLogFileLastTag, RepeatUntilFail, TestProgressOutput, Verbose, ExtraVerbose, ProduceXML, LabelSummary, SubprojectSummary, UseHTTP10, PrintLabels, Failover, FlushTestProgressLine, ForceNewCTestProcess, RunConfigurationScript, ShowOnly, TomorrowTag, ParallelLevelSetInCli, InteractiveDebugMode, ShortDateFormat, CompressXMLFiles, CompressTestOutput, SuppressUpdatingCTestConfiguration, Debug, ShowLineNumbers, Quiet, DropSiteCDash, OutputTestOutputOnTestFailure, consider reordering the fields or adding explicit padding members

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpSrQ55s.yaml -p=/project/git /project/git/Utilities/cmlibuv/src/unix/signal.c
/project/git/Utilities/cmlibuv/src/unix/signal.c:555:7: warning: Value stored to 'ret' is never read [clang-analyzer-deadcode.DeadStores]
      ret = uv__signal_register_handler(handle->signum, 1);
      ^
/project/git/Utilities/cmlibuv/src/unix/signal.c:555:7: note: Value stored to 'ret' is never read

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpreeSv0.yaml -p=/project/git /project/git/Source/CTest/cmCTestConfigureHandler.cxx
/project/git/Source/cmCTest.h:32:7: warning: Excessive padding in 'class cmCTest' (46 padding bytes, where 6 is optimal). 
Optimal fields order: 
StopTime, 
TimeOut, 
GlobalTimeout, 
TestLoad, 
StreamOut, 
StreamErr, 
OutputLogFile, 
InitialCommandLineArguments, 
ConfigType, 
ScheduleType, 
CurrentTag, 
SpecificTrack, 
BinaryDir, 
NotesFiles, 
BuildID, 
TestingHandlers, 
CTestConfiguration, 
CTestConfigurationOverwrites, 
PartMap, 
Definitions, 
Parts, 
RepeatTests, 
TestModel, 
MaxTestNameWidth, 
ParallelLevel, 
CompatibilityMode, 
DartVersion, 
SubmitIndex, 
OutputLogFileLastTag, 
RepeatUntilFail, 
TestProgressOutput, 
Verbose, 
ExtraVerbose, 
ProduceXML, 
LabelSummary, 
SubprojectSummary, 
UseHTTP10, 
PrintLabels, 
Failover, 
FlushTestProgressLine, 
ForceNewCTestProcess, 
RunConfigurationScript, 
ShowOnly, 
TomorrowTag, 
ParallelLevelSetInCli, 
InteractiveDebugMode, 
ShortDateFormat, 
CompressXMLFiles, 
CompressTestOutput, 
SuppressUpdatingCTestConfiguration, 
Debug, 
ShowLineNumbers, 
Quiet, 
DropSiteCDash, 
OutputTestOutputOnTestFailure, 
consider reordering the fields or adding explicit padding members [clang-analyzer-optin.performance.Padding]
class cmCTest
      ^
/project/git/Source/cmCTest.h:32:7: note: Excessive padding in 'class cmCTest' (46 padding bytes, where 6 is optimal). Optimal fields order: StopTime, TimeOut, GlobalTimeout, TestLoad, StreamOut, StreamErr, OutputLogFile, InitialCommandLineArguments, ConfigType, ScheduleType, CurrentTag, SpecificTrack, BinaryDir, NotesFiles, BuildID, TestingHandlers, CTestConfiguration, CTestConfigurationOverwrites, PartMap, Definitions, Parts, RepeatTests, TestModel, MaxTestNameWidth, ParallelLevel, CompatibilityMode, DartVersion, SubmitIndex, OutputLogFileLastTag, RepeatUntilFail, TestProgressOutput, Verbose, ExtraVerbose, ProduceXML, LabelSummary, SubprojectSummary, UseHTTP10, PrintLabels, Failover, FlushTestProgressLine, ForceNewCTestProcess, RunConfigurationScript, ShowOnly, TomorrowTag, ParallelLevelSetInCli, InteractiveDebugMode, ShortDateFormat, CompressXMLFiles, CompressTestOutput, SuppressUpdatingCTestConfiguration, Debug, ShowLineNumbers, Quiet, DropSiteCDash, OutputTestOutputOnTestFailure, consider reordering the fields or adding explicit padding members

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpUrYxEG.yaml -p=/project/git /project/git/Utilities/cmlibuv/src/unix/linux-inotify.c
/project/git/Utilities/cmlibuv/src/unix/linux-inotify.c:314:13: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
  w->path = strcpy((char*)(w + 1), path);
            ^
/project/git/Utilities/cmlibuv/src/unix/linux-inotify.c:314:13: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpajceLo.yaml -p=/project/git /project/git/Source/CTest/cmCTestBuildHandler.cxx
1 warning generated.

/project/git/Source/cmCTest.h:32:7: warning: Excessive padding in 'class cmCTest' (46 padding bytes, where 6 is optimal). 
Optimal fields order: 
StopTime, 
TimeOut, 
GlobalTimeout, 
TestLoad, 
StreamOut, 
StreamErr, 
OutputLogFile, 
InitialCommandLineArguments, 
ConfigType, 
ScheduleType, 
CurrentTag, 
SpecificTrack, 
BinaryDir, 
NotesFiles, 
BuildID, 
TestingHandlers, 
CTestConfiguration, 
CTestConfigurationOverwrites, 
PartMap, 
Definitions, 
Parts, 
RepeatTests, 
TestModel, 
MaxTestNameWidth, 
ParallelLevel, 
CompatibilityMode, 
DartVersion, 
SubmitIndex, 
OutputLogFileLastTag, 
RepeatUntilFail, 
TestProgressOutput, 
Verbose, 
ExtraVerbose, 
ProduceXML, 
LabelSummary, 
SubprojectSummary, 
UseHTTP10, 
PrintLabels, 
Failover, 
FlushTestProgressLine, 
ForceNewCTestProcess, 
RunConfigurationScript, 
ShowOnly, 
TomorrowTag, 
ParallelLevelSetInCli, 
InteractiveDebugMode, 
ShortDateFormat, 
CompressXMLFiles, 
CompressTestOutput, 
SuppressUpdatingCTestConfiguration, 
Debug, 
ShowLineNumbers, 
Quiet, 
DropSiteCDash, 
OutputTestOutputOnTestFailure, 
consider reordering the fields or adding explicit padding members [clang-analyzer-optin.performance.Padding]
class cmCTest
      ^
/project/git/Source/cmCTest.h:32:7: note: Excessive padding in 'class cmCTest' (46 padding bytes, where 6 is optimal). Optimal fields order: StopTime, TimeOut, GlobalTimeout, TestLoad, StreamOut, StreamErr, OutputLogFile, InitialCommandLineArguments, ConfigType, ScheduleType, CurrentTag, SpecificTrack, BinaryDir, NotesFiles, BuildID, TestingHandlers, CTestConfiguration, CTestConfigurationOverwrites, PartMap, Definitions, Parts, RepeatTests, TestModel, MaxTestNameWidth, ParallelLevel, CompatibilityMode, DartVersion, SubmitIndex, OutputLogFileLastTag, RepeatUntilFail, TestProgressOutput, Verbose, ExtraVerbose, ProduceXML, LabelSummary, SubprojectSummary, UseHTTP10, PrintLabels, Failover, FlushTestProgressLine, ForceNewCTestProcess, RunConfigurationScript, ShowOnly, TomorrowTag, ParallelLevelSetInCli, InteractiveDebugMode, ShortDateFormat, CompressXMLFiles, CompressTestOutput, SuppressUpdatingCTestConfiguration, Debug, ShowLineNumbers, Quiet, DropSiteCDash, OutputTestOutputOnTestFailure, consider reordering the fields or adding explicit padding members

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpTog_1T.yaml -p=/project/git /project/git/Source/CTest/cmParseMumpsCoverage.cxx
/project/git/Source/cmCTest.h:32:7: warning: Excessive padding in 'class cmCTest' (46 padding bytes, where 6 is optimal). 
Optimal fields order: 
StopTime, 
TimeOut, 
GlobalTimeout, 
TestLoad, 
StreamOut, 
StreamErr, 
OutputLogFile, 
InitialCommandLineArguments, 
ConfigType, 
ScheduleType, 
CurrentTag, 
SpecificTrack, 
BinaryDir, 
NotesFiles, 
BuildID, 
TestingHandlers, 
CTestConfiguration, 
CTestConfigurationOverwrites, 
PartMap, 
Definitions, 
Parts, 
RepeatTests, 
TestModel, 
MaxTestNameWidth, 
ParallelLevel, 
CompatibilityMode, 
DartVersion, 
SubmitIndex, 
OutputLogFileLastTag, 
RepeatUntilFail, 
TestProgressOutput, 
Verbose, 
ExtraVerbose, 
ProduceXML, 
LabelSummary, 
SubprojectSummary, 
UseHTTP10, 
PrintLabels, 
Failover, 
FlushTestProgressLine, 
ForceNewCTestProcess, 
RunConfigurationScript, 
ShowOnly, 
TomorrowTag, 
ParallelLevelSetInCli, 
InteractiveDebugMode, 
ShortDateFormat, 
CompressXMLFiles, 
CompressTestOutput, 
SuppressUpdatingCTestConfiguration, 
Debug, 
ShowLineNumbers, 
Quiet, 
DropSiteCDash, 
OutputTestOutputOnTestFailure, 
consider reordering the fields or adding explicit padding members [clang-analyzer-optin.performance.Padding]
class cmCTest
      ^
1 warning generated.

1 warning generated.

/project/git/Source/cmCTest.h:32:7: note: Excessive padding in 'class cmCTest' (46 padding bytes, where 6 is optimal). Optimal fields order: StopTime, TimeOut, GlobalTimeout, TestLoad, StreamOut, StreamErr, OutputLogFile, InitialCommandLineArguments, ConfigType, ScheduleType, CurrentTag, SpecificTrack, BinaryDir, NotesFiles, BuildID, TestingHandlers, CTestConfiguration, CTestConfigurationOverwrites, PartMap, Definitions, Parts, RepeatTests, TestModel, MaxTestNameWidth, ParallelLevel, CompatibilityMode, DartVersion, SubmitIndex, OutputLogFileLastTag, RepeatUntilFail, TestProgressOutput, Verbose, ExtraVerbose, ProduceXML, LabelSummary, SubprojectSummary, UseHTTP10, PrintLabels, Failover, FlushTestProgressLine, ForceNewCTestProcess, RunConfigurationScript, ShowOnly, TomorrowTag, ParallelLevelSetInCli, InteractiveDebugMode, ShortDateFormat, CompressXMLFiles, CompressTestOutput, SuppressUpdatingCTestConfiguration, Debug, ShowLineNumbers, Quiet, DropSiteCDash, OutputTestOutputOnTestFailure, consider reordering the fields or adding explicit padding members

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmp7n5EAv.yaml -p=/project/git /project/git/Source/CTest/cmCTestBuildAndTestHandler.cxx
/project/git/Source/cmCTest.h:32:7: warning: Excessive padding in 'class cmCTest' (46 padding bytes, where 6 is optimal). 
Optimal fields order: 
StopTime, 
TimeOut, 
GlobalTimeout, 
TestLoad, 
StreamOut, 
StreamErr, 
OutputLogFile, 
InitialCommandLineArguments, 
ConfigType, 
ScheduleType, 
CurrentTag, 
SpecificTrack, 
BinaryDir, 
NotesFiles, 
BuildID, 
TestingHandlers, 
CTestConfiguration, 
CTestConfigurationOverwrites, 
PartMap, 
Definitions, 
Parts, 
RepeatTests, 
TestModel, 
MaxTestNameWidth, 
ParallelLevel, 
CompatibilityMode, 
DartVersion, 
SubmitIndex, 
OutputLogFileLastTag, 
RepeatUntilFail, 
TestProgressOutput, 
Verbose, 
ExtraVerbose, 
ProduceXML, 
LabelSummary, 
SubprojectSummary, 
UseHTTP10, 
PrintLabels, 
Failover, 
FlushTestProgressLine, 
ForceNewCTestProcess, 
RunConfigurationScript, 
ShowOnly, 
TomorrowTag, 
ParallelLevelSetInCli, 
InteractiveDebugMode, 
ShortDateFormat, 
CompressXMLFiles, 
CompressTestOutput, 
SuppressUpdatingCTestConfiguration, 
Debug, 
ShowLineNumbers, 
Quiet, 
DropSiteCDash, 
OutputTestOutputOnTestFailure, 
consider reordering the fields or adding explicit padding members [clang-analyzer-optin.performance.Padding]
class cmCTest
      ^
/project/git/Source/cmCTest.h:32:7: note: Excessive padding in 'class cmCTest' (46 padding bytes, where 6 is optimal). Optimal fields order: StopTime, TimeOut, GlobalTimeout, TestLoad, StreamOut, StreamErr, OutputLogFile, InitialCommandLineArguments, ConfigType, ScheduleType, CurrentTag, SpecificTrack, BinaryDir, NotesFiles, BuildID, TestingHandlers, CTestConfiguration, CTestConfigurationOverwrites, PartMap, Definitions, Parts, RepeatTests, TestModel, MaxTestNameWidth, ParallelLevel, CompatibilityMode, DartVersion, SubmitIndex, OutputLogFileLastTag, RepeatUntilFail, TestProgressOutput, Verbose, ExtraVerbose, ProduceXML, LabelSummary, SubprojectSummary, UseHTTP10, PrintLabels, Failover, FlushTestProgressLine, ForceNewCTestProcess, RunConfigurationScript, ShowOnly, TomorrowTag, ParallelLevelSetInCli, InteractiveDebugMode, ShortDateFormat, CompressXMLFiles, CompressTestOutput, SuppressUpdatingCTestConfiguration, Debug, ShowLineNumbers, Quiet, DropSiteCDash, OutputTestOutputOnTestFailure, consider reordering the fields or adding explicit padding members

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpAaB6AD.yaml -p=/project/git /project/git/Source/CTest/cmCTestEmptyBinaryDirectoryCommand.cxx
/project/git/Source/cmCTest.h:32:7: warning: Excessive padding in 'class cmCTest' (46 padding bytes, where 6 is optimal). 
Optimal fields order: 
StopTime, 
TimeOut, 
GlobalTimeout, 
TestLoad, 
StreamOut, 
StreamErr, 
OutputLogFile, 
InitialCommandLineArguments, 
ConfigType, 
ScheduleType, 
CurrentTag, 
SpecificTrack, 
BinaryDir, 
NotesFiles, 
BuildID, 
TestingHandlers, 
CTestConfiguration, 
CTestConfigurationOverwrites, 
PartMap, 
Definitions, 
Parts, 
RepeatTests, 
TestModel, 
MaxTestNameWidth, 
ParallelLevel, 
CompatibilityMode, 
DartVersion, 
SubmitIndex, 
OutputLogFileLastTag, 
RepeatUntilFail, 
TestProgressOutput, 
Verbose, 
ExtraVerbose, 
ProduceXML, 
LabelSummary, 
SubprojectSummary, 
UseHTTP10, 
PrintLabels, 
Failover, 
FlushTestProgressLine, 
ForceNewCTestProcess, 
RunConfigurationScript, 
ShowOnly, 
TomorrowTag, 
ParallelLevelSetInCli, 
InteractiveDebugMode, 
ShortDateFormat, 
CompressXMLFiles, 
CompressTestOutput, 
1 warning generated.

1 warning generated.

SuppressUpdatingCTestConfiguration, 
Debug, 
ShowLineNumbers, 
Quiet, 
DropSiteCDash, 
OutputTestOutputOnTestFailure, 
consider reordering the fields or adding explicit padding members [clang-analyzer-optin.performance.Padding]
class cmCTest
      ^
/project/git/Source/cmCTest.h:32:7: note: Excessive padding in 'class cmCTest' (46 padding bytes, where 6 is optimal). Optimal fields order: StopTime, TimeOut, GlobalTimeout, TestLoad, StreamOut, StreamErr, OutputLogFile, InitialCommandLineArguments, ConfigType, ScheduleType, CurrentTag, SpecificTrack, BinaryDir, NotesFiles, BuildID, TestingHandlers, CTestConfiguration, CTestConfigurationOverwrites, PartMap, Definitions, Parts, RepeatTests, TestModel, MaxTestNameWidth, ParallelLevel, CompatibilityMode, DartVersion, SubmitIndex, OutputLogFileLastTag, RepeatUntilFail, TestProgressOutput, Verbose, ExtraVerbose, ProduceXML, LabelSummary, SubprojectSummary, UseHTTP10, PrintLabels, Failover, FlushTestProgressLine, ForceNewCTestProcess, RunConfigurationScript, ShowOnly, TomorrowTag, ParallelLevelSetInCli, InteractiveDebugMode, ShortDateFormat, CompressXMLFiles, CompressTestOutput, SuppressUpdatingCTestConfiguration, Debug, ShowLineNumbers, Quiet, DropSiteCDash, OutputTestOutputOnTestFailure, consider reordering the fields or adding explicit padding members

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpmFpAoT.yaml -p=/project/git /project/git/Source/CTest/cmParseJacocoCoverage.cxx
/project/git/Source/cmCTest.h:32:7: warning: Excessive padding in 'class cmCTest' (46 padding bytes, where 6 is optimal). 
Optimal fields order: 
StopTime, 
TimeOut, 
GlobalTimeout, 
TestLoad, 
StreamOut, 
StreamErr, 
OutputLogFile, 
InitialCommandLineArguments, 
ConfigType, 
ScheduleType, 
CurrentTag, 
SpecificTrack, 
BinaryDir, 
NotesFiles, 
BuildID, 
TestingHandlers, 
CTestConfiguration, 
CTestConfigurationOverwrites, 
PartMap, 
Definitions, 
Parts, 
RepeatTests, 
TestModel, 
MaxTestNameWidth, 
ParallelLevel, 
CompatibilityMode, 
DartVersion, 
SubmitIndex, 
OutputLogFileLastTag, 
RepeatUntilFail, 
TestProgressOutput, 
Verbose, 
ExtraVerbose, 
ProduceXML, 
LabelSummary, 
SubprojectSummary, 
UseHTTP10, 
PrintLabels, 
Failover, 
FlushTestProgressLine, 
ForceNewCTestProcess, 
RunConfigurationScript, 
ShowOnly, 
TomorrowTag, 
ParallelLevelSetInCli, 
InteractiveDebugMode, 
ShortDateFormat, 
CompressXMLFiles, 
CompressTestOutput, 
SuppressUpdatingCTestConfiguration, 
Debug, 
ShowLineNumbers, 
Quiet, 
DropSiteCDash, 
OutputTestOutputOnTestFailure, 
consider reordering the fields or adding explicit padding members [clang-analyzer-optin.performance.Padding]
class cmCTest
      ^
/project/git/Source/cmCTest.h:32:7: note: Excessive padding in 'class cmCTest' (46 padding bytes, where 6 is optimal). Optimal fields order: StopTime, TimeOut, GlobalTimeout, TestLoad, StreamOut, StreamErr, OutputLogFile, InitialCommandLineArguments, ConfigType, ScheduleType, CurrentTag, SpecificTrack, BinaryDir, NotesFiles, BuildID, TestingHandlers, CTestConfiguration, CTestConfigurationOverwrites, PartMap, Definitions, Parts, RepeatTests, TestModel, MaxTestNameWidth, ParallelLevel, CompatibilityMode, DartVersion, SubmitIndex, OutputLogFileLastTag, RepeatUntilFail, TestProgressOutput, Verbose, ExtraVerbose, ProduceXML, LabelSummary, SubprojectSummary, UseHTTP10, PrintLabels, Failover, FlushTestProgressLine, ForceNewCTestProcess, RunConfigurationScript, ShowOnly, TomorrowTag, ParallelLevelSetInCli, InteractiveDebugMode, ShortDateFormat, CompressXMLFiles, CompressTestOutput, SuppressUpdatingCTestConfiguration, Debug, ShowLineNumbers, Quiet, DropSiteCDash, OutputTestOutputOnTestFailure, consider reordering the fields or adding explicit padding members

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmp8v63an.yaml -p=/project/git /project/git/Source/CTest/cmCTestGenericHandler.cxx
/project/git/Source/cmCTest.h:32:7: warning: Excessive padding in 'class cmCTest' (46 padding bytes, where 6 is optimal). 
Optimal fields order: 
StopTime, 
TimeOut, 
1 warning generated.

GlobalTimeout, 
TestLoad, 
StreamOut, 
StreamErr, 
OutputLogFile, 
InitialCommandLineArguments, 
ConfigType, 
ScheduleType, 
CurrentTag, 
SpecificTrack, 
BinaryDir, 
NotesFiles, 
BuildID, 
TestingHandlers, 
CTestConfiguration, 
CTestConfigurationOverwrites, 
PartMap, 
Definitions, 
Parts, 
RepeatTests, 
TestModel, 
MaxTestNameWidth, 
ParallelLevel, 
CompatibilityMode, 
DartVersion, 
SubmitIndex, 
OutputLogFileLastTag, 
RepeatUntilFail, 
TestProgressOutput, 
Verbose, 
ExtraVerbose, 
ProduceXML, 
LabelSummary, 
SubprojectSummary, 
UseHTTP10, 
PrintLabels, 
Failover, 
FlushTestProgressLine, 
ForceNewCTestProcess, 
RunConfigurationScript, 
ShowOnly, 
TomorrowTag, 
ParallelLevelSetInCli, 
InteractiveDebugMode, 
ShortDateFormat, 
CompressXMLFiles, 
CompressTestOutput, 
SuppressUpdatingCTestConfiguration, 
Debug, 
ShowLineNumbers, 
Quiet, 
DropSiteCDash, 
OutputTestOutputOnTestFailure, 
consider reordering the fields or adding explicit padding members [clang-analyzer-optin.performance.Padding]
class cmCTest
      ^
/project/git/Source/cmCTest.h:32:7: note: Excessive padding in 'class cmCTest' (46 padding bytes, where 6 is optimal). Optimal fields order: StopTime, TimeOut, GlobalTimeout, TestLoad, StreamOut, StreamErr, OutputLogFile, InitialCommandLineArguments, ConfigType, ScheduleType, CurrentTag, SpecificTrack, BinaryDir, NotesFiles, BuildID, TestingHandlers, CTestConfiguration, CTestConfigurationOverwrites, PartMap, Definitions, Parts, RepeatTests, TestModel, MaxTestNameWidth, ParallelLevel, CompatibilityMode, DartVersion, SubmitIndex, OutputLogFileLastTag, RepeatUntilFail, TestProgressOutput, Verbose, ExtraVerbose, ProduceXML, LabelSummary, SubprojectSummary, UseHTTP10, PrintLabels, Failover, FlushTestProgressLine, ForceNewCTestProcess, RunConfigurationScript, ShowOnly, TomorrowTag, ParallelLevelSetInCli, InteractiveDebugMode, ShortDateFormat, CompressXMLFiles, CompressTestOutput, SuppressUpdatingCTestConfiguration, Debug, ShowLineNumbers, Quiet, DropSiteCDash, OutputTestOutputOnTestFailure, consider reordering the fields or adding explicit padding members

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpxdOZgv.yaml -p=/project/git /project/git/Source/CTest/cmParseGTMCoverage.cxx
/project/git/Source/cmCTest.h:32:7: warning: Excessive padding in 'class cmCTest' (46 padding bytes, where 6 is optimal). 
Optimal fields order: 
StopTime, 
TimeOut, 
GlobalTimeout, 
TestLoad, 
StreamOut, 
StreamErr, 
OutputLogFile, 
InitialCommandLineArguments, 
ConfigType, 
ScheduleType, 
CurrentTag, 
SpecificTrack, 
BinaryDir, 
NotesFiles, 
BuildID, 
TestingHandlers, 
CTestConfiguration, 
CTestConfigurationOverwrites, 
PartMap, 
Definitions, 
Parts, 
RepeatTests, 
TestModel, 
MaxTestNameWidth, 
ParallelLevel, 
CompatibilityMode, 
DartVersion, 
SubmitIndex, 
OutputLogFileLastTag, 
RepeatUntilFail, 
TestProgressOutput, 
Verbose, 
ExtraVerbose, 
ProduceXML, 
LabelSummary, 
SubprojectSummary, 
UseHTTP10, 
PrintLabels, 
Failover, 
FlushTestProgressLine, 
ForceNewCTestProcess, 
RunConfigurationScript, 
ShowOnly, 
TomorrowTag, 
ParallelLevelSetInCli, 
InteractiveDebugMode, 
ShortDateFormat, 
CompressXMLFiles, 
CompressTestOutput, 
SuppressUpdatingCTestConfiguration, 
Debug, 
ShowLineNumbers, 
Quiet, 
DropSiteCDash, 
OutputTestOutputOnTestFailure, 
consider reordering the fields or adding explicit padding members [clang-analyzer-optin.performance.Padding]
class cmCTest
      ^
1 warning generated.

1 warning generated.

/project/git/Source/cmCTest.h:32:7: note: Excessive padding in 'class cmCTest' (46 padding bytes, where 6 is optimal). Optimal fields order: StopTime, TimeOut, GlobalTimeout, TestLoad, StreamOut, StreamErr, OutputLogFile, InitialCommandLineArguments, ConfigType, ScheduleType, CurrentTag, SpecificTrack, BinaryDir, NotesFiles, BuildID, TestingHandlers, CTestConfiguration, CTestConfigurationOverwrites, PartMap, Definitions, Parts, RepeatTests, TestModel, MaxTestNameWidth, ParallelLevel, CompatibilityMode, DartVersion, SubmitIndex, OutputLogFileLastTag, RepeatUntilFail, TestProgressOutput, Verbose, ExtraVerbose, ProduceXML, LabelSummary, SubprojectSummary, UseHTTP10, PrintLabels, Failover, FlushTestProgressLine, ForceNewCTestProcess, RunConfigurationScript, ShowOnly, TomorrowTag, ParallelLevelSetInCli, InteractiveDebugMode, ShortDateFormat, CompressXMLFiles, CompressTestOutput, SuppressUpdatingCTestConfiguration, Debug, ShowLineNumbers, Quiet, DropSiteCDash, OutputTestOutputOnTestFailure, consider reordering the fields or adding explicit padding members

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpNyzg0a.yaml -p=/project/git /project/git/Source/CTest/cmParseBlanketJSCoverage.cxx
/project/git/Source/cmCTest.h:32:7: warning: Excessive padding in 'class cmCTest' (46 padding bytes, where 6 is optimal). 
Optimal fields order: 
StopTime, 
TimeOut, 
GlobalTimeout, 
TestLoad, 
StreamOut, 
StreamErr, 
OutputLogFile, 
InitialCommandLineArguments, 
ConfigType, 
ScheduleType, 
CurrentTag, 
SpecificTrack, 
BinaryDir, 
NotesFiles, 
BuildID, 
TestingHandlers, 
CTestConfiguration, 
CTestConfigurationOverwrites, 
PartMap, 
Definitions, 
Parts, 
RepeatTests, 
TestModel, 
MaxTestNameWidth, 
ParallelLevel, 
CompatibilityMode, 
DartVersion, 
SubmitIndex, 
OutputLogFileLastTag, 
RepeatUntilFail, 
TestProgressOutput, 
Verbose, 
ExtraVerbose, 
ProduceXML, 
LabelSummary, 
SubprojectSummary, 
UseHTTP10, 
PrintLabels, 
Failover, 
FlushTestProgressLine, 
ForceNewCTestProcess, 
RunConfigurationScript, 
ShowOnly, 
TomorrowTag, 
ParallelLevelSetInCli, 
InteractiveDebugMode, 
ShortDateFormat, 
CompressXMLFiles, 
CompressTestOutput, 
SuppressUpdatingCTestConfiguration, 
Debug, 
ShowLineNumbers, 
Quiet, 
DropSiteCDash, 
OutputTestOutputOnTestFailure, 
consider reordering the fields or adding explicit padding members [clang-analyzer-optin.performance.Padding]
class cmCTest
      ^
/project/git/Source/cmCTest.h:32:7: note: Excessive padding in 'class cmCTest' (46 padding bytes, where 6 is optimal). Optimal fields order: StopTime, TimeOut, GlobalTimeout, TestLoad, StreamOut, StreamErr, OutputLogFile, InitialCommandLineArguments, ConfigType, ScheduleType, CurrentTag, SpecificTrack, BinaryDir, NotesFiles, BuildID, TestingHandlers, CTestConfiguration, CTestConfigurationOverwrites, PartMap, Definitions, Parts, RepeatTests, TestModel, MaxTestNameWidth, ParallelLevel, CompatibilityMode, DartVersion, SubmitIndex, OutputLogFileLastTag, RepeatUntilFail, TestProgressOutput, Verbose, ExtraVerbose, ProduceXML, LabelSummary, SubprojectSummary, UseHTTP10, PrintLabels, Failover, FlushTestProgressLine, ForceNewCTestProcess, RunConfigurationScript, ShowOnly, TomorrowTag, ParallelLevelSetInCli, InteractiveDebugMode, ShortDateFormat, CompressXMLFiles, CompressTestOutput, SuppressUpdatingCTestConfiguration, Debug, ShowLineNumbers, Quiet, DropSiteCDash, OutputTestOutputOnTestFailure, consider reordering the fields or adding explicit padding members

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpJ_fvqo.yaml -p=/project/git /project/git/Source/CTest/cmCTestReadCustomFilesCommand.cxx
/project/git/Source/cmCTest.h:32:7: warning: Excessive padding in 'class cmCTest' (46 padding bytes, where 6 is optimal). 
Optimal fields order: 
StopTime, 
TimeOut, 
GlobalTimeout, 
TestLoad, 
StreamOut, 
StreamErr, 
OutputLogFile, 
InitialCommandLineArguments, 
ConfigType, 
ScheduleType, 
CurrentTag, 
SpecificTrack, 
BinaryDir, 
NotesFiles, 
BuildID, 
TestingHandlers, 
CTestConfiguration, 
CTestConfigurationOverwrites, 
PartMap, 
Definitions, 
Parts, 
RepeatTests, 
TestModel, 
MaxTestNameWidth, 
ParallelLevel, 
CompatibilityMode, 
DartVersion, 
SubmitIndex, 
OutputLogFileLastTag, 
RepeatUntilFail, 
TestProgressOutput, 
Verbose, 
ExtraVerbose, 
ProduceXML, 
LabelSummary, 
SubprojectSummary, 
UseHTTP10, 
PrintLabels, 
Failover, 
FlushTestProgressLine, 
ForceNewCTestProcess, 
RunConfigurationScript, 
ShowOnly, 
TomorrowTag, 
ParallelLevelSetInCli, 
InteractiveDebugMode, 
ShortDateFormat, 
CompressXMLFiles, 
CompressTestOutput, 
SuppressUpdatingCTestConfiguration, 
Debug, 
ShowLineNumbers, 
Quiet, 
DropSiteCDash, 
1 warning generated.

1 warning generated.

OutputTestOutputOnTestFailure, 
consider reordering the fields or adding explicit padding members [clang-analyzer-optin.performance.Padding]
class cmCTest
      ^
/project/git/Source/cmCTest.h:32:7: note: Excessive padding in 'class cmCTest' (46 padding bytes, where 6 is optimal). Optimal fields order: StopTime, TimeOut, GlobalTimeout, TestLoad, StreamOut, StreamErr, OutputLogFile, InitialCommandLineArguments, ConfigType, ScheduleType, CurrentTag, SpecificTrack, BinaryDir, NotesFiles, BuildID, TestingHandlers, CTestConfiguration, CTestConfigurationOverwrites, PartMap, Definitions, Parts, RepeatTests, TestModel, MaxTestNameWidth, ParallelLevel, CompatibilityMode, DartVersion, SubmitIndex, OutputLogFileLastTag, RepeatUntilFail, TestProgressOutput, Verbose, ExtraVerbose, ProduceXML, LabelSummary, SubprojectSummary, UseHTTP10, PrintLabels, Failover, FlushTestProgressLine, ForceNewCTestProcess, RunConfigurationScript, ShowOnly, TomorrowTag, ParallelLevelSetInCli, InteractiveDebugMode, ShortDateFormat, CompressXMLFiles, CompressTestOutput, SuppressUpdatingCTestConfiguration, Debug, ShowLineNumbers, Quiet, DropSiteCDash, OutputTestOutputOnTestFailure, consider reordering the fields or adding explicit padding members

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpwYz6OC.yaml -p=/project/git /project/git/Source/CTest/cmParseCacheCoverage.cxx
/project/git/Source/cmCTest.h:32:7: warning: Excessive padding in 'class cmCTest' (46 padding bytes, where 6 is optimal). 
Optimal fields order: 
StopTime, 
TimeOut, 
GlobalTimeout, 
TestLoad, 
StreamOut, 
StreamErr, 
OutputLogFile, 
InitialCommandLineArguments, 
ConfigType, 
ScheduleType, 
CurrentTag, 
SpecificTrack, 
BinaryDir, 
NotesFiles, 
BuildID, 
TestingHandlers, 
CTestConfiguration, 
CTestConfigurationOverwrites, 
PartMap, 
Definitions, 
Parts, 
RepeatTests, 
TestModel, 
MaxTestNameWidth, 
ParallelLevel, 
CompatibilityMode, 
DartVersion, 
SubmitIndex, 
OutputLogFileLastTag, 
RepeatUntilFail, 
TestProgressOutput, 
Verbose, 
ExtraVerbose, 
ProduceXML, 
LabelSummary, 
SubprojectSummary, 
UseHTTP10, 
PrintLabels, 
Failover, 
FlushTestProgressLine, 
ForceNewCTestProcess, 
RunConfigurationScript, 
ShowOnly, 
TomorrowTag, 
ParallelLevelSetInCli, 
InteractiveDebugMode, 
ShortDateFormat, 
CompressXMLFiles, 
CompressTestOutput, 
SuppressUpdatingCTestConfiguration, 
Debug, 
ShowLineNumbers, 
Quiet, 
DropSiteCDash, 
OutputTestOutputOnTestFailure, 
consider reordering the fields or adding explicit padding members [clang-analyzer-optin.performance.Padding]
class cmCTest
      ^
/project/git/Source/cmCTest.h:32:7: note: Excessive padding in 'class cmCTest' (46 padding bytes, where 6 is optimal). Optimal fields order: StopTime, TimeOut, GlobalTimeout, TestLoad, StreamOut, StreamErr, OutputLogFile, InitialCommandLineArguments, ConfigType, ScheduleType, CurrentTag, SpecificTrack, BinaryDir, NotesFiles, BuildID, TestingHandlers, CTestConfiguration, CTestConfigurationOverwrites, PartMap, Definitions, Parts, RepeatTests, TestModel, MaxTestNameWidth, ParallelLevel, CompatibilityMode, DartVersion, SubmitIndex, OutputLogFileLastTag, RepeatUntilFail, TestProgressOutput, Verbose, ExtraVerbose, ProduceXML, LabelSummary, SubprojectSummary, UseHTTP10, PrintLabels, Failover, FlushTestProgressLine, ForceNewCTestProcess, RunConfigurationScript, ShowOnly, TomorrowTag, ParallelLevelSetInCli, InteractiveDebugMode, ShortDateFormat, CompressXMLFiles, CompressTestOutput, SuppressUpdatingCTestConfiguration, Debug, ShowLineNumbers, Quiet, DropSiteCDash, OutputTestOutputOnTestFailure, consider reordering the fields or adding explicit padding members

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpLfhfdj.yaml -p=/project/git /project/git/Utilities/cmjsoncpp/src/lib_json/json_writer.cpp
4 warnings generated.

1 warning generated.

/project/git/Utilities/cmjsoncpp/src/lib_json/json_writer.cpp:191:7: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
      strcat(buffer, ".0");
      ^
/project/git/Utilities/cmjsoncpp/src/lib_json/json_writer.cpp:191:7: note: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119
/project/git/Utilities/cmjsoncpp/src/lib_json/json_writer.cpp:197:7: warning: Value stored to 'len' is never read [clang-analyzer-deadcode.DeadStores]
      len = snprintf(buffer, sizeof(buffer), useSpecialFloats ? "NaN" : "null");
      ^
/project/git/Utilities/cmjsoncpp/src/lib_json/json_writer.cpp:197:7: note: Value stored to 'len' is never read
/project/git/Utilities/cmjsoncpp/src/lib_json/json_writer.cpp:199:7: warning: Value stored to 'len' is never read [clang-analyzer-deadcode.DeadStores]
      len = snprintf(buffer, sizeof(buffer), useSpecialFloats ? "-Infinity" : "-1e+9999");
      ^
/project/git/Utilities/cmjsoncpp/src/lib_json/json_writer.cpp:199:7: note: Value stored to 'len' is never read
/project/git/Utilities/cmjsoncpp/src/lib_json/json_writer.cpp:201:7: warning: Value stored to 'len' is never read [clang-analyzer-deadcode.DeadStores]
      len = snprintf(buffer, sizeof(buffer), useSpecialFloats ? "Infinity" : "1e+9999");
      ^
/project/git/Utilities/cmjsoncpp/src/lib_json/json_writer.cpp:201:7: note: Value stored to 'len' is never read

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpMNm0ym.yaml -p=/project/git /project/git/Source/CTest/cmCTestMemCheckCommand.cxx
/project/git/Source/cmCTest.h:32:7: warning: Excessive padding in 'class cmCTest' (46 padding bytes, where 6 is optimal). 
Optimal fields order: 
StopTime, 
TimeOut, 
GlobalTimeout, 
TestLoad, 
StreamOut, 
StreamErr, 
OutputLogFile, 
InitialCommandLineArguments, 
ConfigType, 
ScheduleType, 
CurrentTag, 
SpecificTrack, 
BinaryDir, 
NotesFiles, 
BuildID, 
TestingHandlers, 
CTestConfiguration, 
CTestConfigurationOverwrites, 
PartMap, 
Definitions, 
Parts, 
RepeatTests, 
TestModel, 
MaxTestNameWidth, 
ParallelLevel, 
CompatibilityMode, 
DartVersion, 
SubmitIndex, 
OutputLogFileLastTag, 
RepeatUntilFail, 
TestProgressOutput, 
Verbose, 
ExtraVerbose, 
ProduceXML, 
LabelSummary, 
SubprojectSummary, 
UseHTTP10, 
PrintLabels, 
Failover, 
FlushTestProgressLine, 
ForceNewCTestProcess, 
RunConfigurationScript, 
ShowOnly, 
TomorrowTag, 
ParallelLevelSetInCli, 
InteractiveDebugMode, 
ShortDateFormat, 
CompressXMLFiles, 
CompressTestOutput, 
SuppressUpdatingCTestConfiguration, 
Debug, 
ShowLineNumbers, 
Quiet, 
DropSiteCDash, 
OutputTestOutputOnTestFailure, 
consider reordering the fields or adding explicit padding members [clang-analyzer-optin.performance.Padding]
class cmCTest
      ^
/project/git/Source/cmCTest.h:32:7: note: Excessive padding in 'class cmCTest' (46 padding bytes, where 6 is optimal). Optimal fields order: StopTime, TimeOut, GlobalTimeout, TestLoad, StreamOut, StreamErr, OutputLogFile, InitialCommandLineArguments, ConfigType, ScheduleType, CurrentTag, SpecificTrack, BinaryDir, NotesFiles, BuildID, TestingHandlers, CTestConfiguration, CTestConfigurationOverwrites, PartMap, Definitions, Parts, RepeatTests, TestModel, MaxTestNameWidth, ParallelLevel, CompatibilityMode, DartVersion, SubmitIndex, OutputLogFileLastTag, RepeatUntilFail, TestProgressOutput, Verbose, ExtraVerbose, ProduceXML, LabelSummary, SubprojectSummary, UseHTTP10, PrintLabels, Failover, FlushTestProgressLine, ForceNewCTestProcess, RunConfigurationScript, ShowOnly, TomorrowTag, ParallelLevelSetInCli, InteractiveDebugMode, ShortDateFormat, CompressXMLFiles, CompressTestOutput, SuppressUpdatingCTestConfiguration, Debug, ShowLineNumbers, Quiet, DropSiteCDash, OutputTestOutputOnTestFailure, consider reordering the fields or adding explicit padding members

1 warning generated.

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmp4i00Qz.yaml -p=/project/git /project/git/Source/CTest/cmParseCoberturaCoverage.cxx
/project/git/Source/cmCTest.h:32:7: warning: Excessive padding in 'class cmCTest' (46 padding bytes, where 6 is optimal). 
Optimal fields order: 
StopTime, 
TimeOut, 
GlobalTimeout, 
TestLoad, 
StreamOut, 
StreamErr, 
OutputLogFile, 
InitialCommandLineArguments, 
ConfigType, 
ScheduleType, 
CurrentTag, 
SpecificTrack, 
BinaryDir, 
NotesFiles, 
BuildID, 
TestingHandlers, 
CTestConfiguration, 
CTestConfigurationOverwrites, 
PartMap, 
Definitions, 
Parts, 
RepeatTests, 
TestModel, 
MaxTestNameWidth, 
ParallelLevel, 
CompatibilityMode, 
DartVersion, 
SubmitIndex, 
OutputLogFileLastTag, 
RepeatUntilFail, 
TestProgressOutput, 
Verbose, 
ExtraVerbose, 
ProduceXML, 
LabelSummary, 
SubprojectSummary, 
UseHTTP10, 
PrintLabels, 
Failover, 
FlushTestProgressLine, 
ForceNewCTestProcess, 
RunConfigurationScript, 
ShowOnly, 
TomorrowTag, 
ParallelLevelSetInCli, 
InteractiveDebugMode, 
ShortDateFormat, 
CompressXMLFiles, 
CompressTestOutput, 
SuppressUpdatingCTestConfiguration, 
Debug, 
ShowLineNumbers, 
Quiet, 
DropSiteCDash, 
OutputTestOutputOnTestFailure, 
consider reordering the fields or adding explicit padding members [clang-analyzer-optin.performance.Padding]
class cmCTest
      ^
/project/git/Source/cmCTest.h:32:7: note: Excessive padding in 'class cmCTest' (46 padding bytes, where 6 is optimal). Optimal fields order: StopTime, TimeOut, GlobalTimeout, TestLoad, StreamOut, StreamErr, OutputLogFile, InitialCommandLineArguments, ConfigType, ScheduleType, CurrentTag, SpecificTrack, BinaryDir, NotesFiles, BuildID, TestingHandlers, CTestConfiguration, CTestConfigurationOverwrites, PartMap, Definitions, Parts, RepeatTests, TestModel, MaxTestNameWidth, ParallelLevel, CompatibilityMode, DartVersion, SubmitIndex, OutputLogFileLastTag, RepeatUntilFail, TestProgressOutput, Verbose, ExtraVerbose, ProduceXML, LabelSummary, SubprojectSummary, UseHTTP10, PrintLabels, Failover, FlushTestProgressLine, ForceNewCTestProcess, RunConfigurationScript, ShowOnly, TomorrowTag, ParallelLevelSetInCli, InteractiveDebugMode, ShortDateFormat, CompressXMLFiles, CompressTestOutput, SuppressUpdatingCTestConfiguration, Debug, ShowLineNumbers, Quiet, DropSiteCDash, OutputTestOutputOnTestFailure, consider reordering the fields or adding explicit padding members

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpHM_4db.yaml -p=/project/git /project/git/Source/CTest/cmParsePHPCoverage.cxx
/project/git/Source/cmCTest.h:32:7: warning: Excessive padding in 'class cmCTest' (46 padding bytes, where 6 is optimal). 
Optimal fields order: 
StopTime, 
TimeOut, 
GlobalTimeout, 
TestLoad, 
StreamOut, 
StreamErr, 
OutputLogFile, 
InitialCommandLineArguments, 
ConfigType, 
ScheduleType, 
CurrentTag, 
SpecificTrack, 
BinaryDir, 
NotesFiles, 
BuildID, 
TestingHandlers, 
CTestConfiguration, 
CTestConfigurationOverwrites, 
PartMap, 
Definitions, 
Parts, 
RepeatTests, 
TestModel, 
MaxTestNameWidth, 
ParallelLevel, 
CompatibilityMode, 
DartVersion, 
SubmitIndex, 
OutputLogFileLastTag, 
RepeatUntilFail, 
TestProgressOutput, 
Verbose, 
ExtraVerbose, 
ProduceXML, 
LabelSummary, 
SubprojectSummary, 
UseHTTP10, 
PrintLabels, 
Failover, 
FlushTestProgressLine, 
ForceNewCTestProcess, 
RunConfigurationScript, 
ShowOnly, 
TomorrowTag, 
ParallelLevelSetInCli, 
InteractiveDebugMode, 
ShortDateFormat, 
CompressXMLFiles, 
CompressTestOutput, 
SuppressUpdatingCTestConfiguration, 
Debug, 
ShowLineNumbers, 
Quiet, 
DropSiteCDash, 
OutputTestOutputOnTestFailure, 
consider reordering the fields or adding explicit padding members [clang-analyzer-optin.performance.Padding]
class cmCTest
      ^
1 warning generated.

1 warning generated.

/project/git/Source/cmCTest.h:32:7: note: Excessive padding in 'class cmCTest' (46 padding bytes, where 6 is optimal). Optimal fields order: StopTime, TimeOut, GlobalTimeout, TestLoad, StreamOut, StreamErr, OutputLogFile, InitialCommandLineArguments, ConfigType, ScheduleType, CurrentTag, SpecificTrack, BinaryDir, NotesFiles, BuildID, TestingHandlers, CTestConfiguration, CTestConfigurationOverwrites, PartMap, Definitions, Parts, RepeatTests, TestModel, MaxTestNameWidth, ParallelLevel, CompatibilityMode, DartVersion, SubmitIndex, OutputLogFileLastTag, RepeatUntilFail, TestProgressOutput, Verbose, ExtraVerbose, ProduceXML, LabelSummary, SubprojectSummary, UseHTTP10, PrintLabels, Failover, FlushTestProgressLine, ForceNewCTestProcess, RunConfigurationScript, ShowOnly, TomorrowTag, ParallelLevelSetInCli, InteractiveDebugMode, ShortDateFormat, CompressXMLFiles, CompressTestOutput, SuppressUpdatingCTestConfiguration, Debug, ShowLineNumbers, Quiet, DropSiteCDash, OutputTestOutputOnTestFailure, consider reordering the fields or adding explicit padding members

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpormujV.yaml -p=/project/git /project/git/Source/CTest/cmCTestCurl.cxx
/project/git/Source/cmCTest.h:32:7: warning: Excessive padding in 'class cmCTest' (46 padding bytes, where 6 is optimal). 
Optimal fields order: 
StopTime, 
TimeOut, 
GlobalTimeout, 
TestLoad, 
StreamOut, 
StreamErr, 
OutputLogFile, 
InitialCommandLineArguments, 
ConfigType, 
ScheduleType, 
CurrentTag, 
SpecificTrack, 
BinaryDir, 
NotesFiles, 
BuildID, 
TestingHandlers, 
CTestConfiguration, 
CTestConfigurationOverwrites, 
PartMap, 
Definitions, 
Parts, 
RepeatTests, 
TestModel, 
MaxTestNameWidth, 
ParallelLevel, 
CompatibilityMode, 
DartVersion, 
SubmitIndex, 
OutputLogFileLastTag, 
RepeatUntilFail, 
TestProgressOutput, 
Verbose, 
ExtraVerbose, 
ProduceXML, 
LabelSummary, 
SubprojectSummary, 
UseHTTP10, 
PrintLabels, 
Failover, 
FlushTestProgressLine, 
ForceNewCTestProcess, 
RunConfigurationScript, 
ShowOnly, 
TomorrowTag, 
ParallelLevelSetInCli, 
InteractiveDebugMode, 
ShortDateFormat, 
CompressXMLFiles, 
CompressTestOutput, 
SuppressUpdatingCTestConfiguration, 
Debug, 
ShowLineNumbers, 
Quiet, 
DropSiteCDash, 
OutputTestOutputOnTestFailure, 
consider reordering the fields or adding explicit padding members [clang-analyzer-optin.performance.Padding]
class cmCTest
      ^
/project/git/Source/cmCTest.h:32:7: note: Excessive padding in 'class cmCTest' (46 padding bytes, where 6 is optimal). Optimal fields order: StopTime, TimeOut, GlobalTimeout, TestLoad, StreamOut, StreamErr, OutputLogFile, InitialCommandLineArguments, ConfigType, ScheduleType, CurrentTag, SpecificTrack, BinaryDir, NotesFiles, BuildID, TestingHandlers, CTestConfiguration, CTestConfigurationOverwrites, PartMap, Definitions, Parts, RepeatTests, TestModel, MaxTestNameWidth, ParallelLevel, CompatibilityMode, DartVersion, SubmitIndex, OutputLogFileLastTag, RepeatUntilFail, TestProgressOutput, Verbose, ExtraVerbose, ProduceXML, LabelSummary, SubprojectSummary, UseHTTP10, PrintLabels, Failover, FlushTestProgressLine, ForceNewCTestProcess, RunConfigurationScript, ShowOnly, TomorrowTag, ParallelLevelSetInCli, InteractiveDebugMode, ShortDateFormat, CompressXMLFiles, CompressTestOutput, SuppressUpdatingCTestConfiguration, Debug, ShowLineNumbers, Quiet, DropSiteCDash, OutputTestOutputOnTestFailure, consider reordering the fields or adding explicit padding members

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpKyZevW.yaml -p=/project/git /project/git/Source/CTest/cmCTestSleepCommand.cxx
/project/git/Source/cmCTest.h:32:7: warning: Excessive padding in 'class cmCTest' (46 padding bytes, where 6 is optimal). 
Optimal fields order: 
StopTime, 
TimeOut, 
GlobalTimeout, 
TestLoad, 
StreamOut, 
StreamErr, 
OutputLogFile, 
InitialCommandLineArguments, 
ConfigType, 
ScheduleType, 
CurrentTag, 
SpecificTrack, 
BinaryDir, 
NotesFiles, 
BuildID, 
TestingHandlers, 
CTestConfiguration, 
CTestConfigurationOverwrites, 
PartMap, 
Definitions, 
Parts, 
RepeatTests, 
TestModel, 
MaxTestNameWidth, 
ParallelLevel, 
CompatibilityMode, 
DartVersion, 
SubmitIndex, 
OutputLogFileLastTag, 
RepeatUntilFail, 
TestProgressOutput, 
Verbose, 
ExtraVerbose, 
ProduceXML, 
LabelSummary, 
SubprojectSummary, 
UseHTTP10, 
PrintLabels, 
Failover, 
FlushTestProgressLine, 
ForceNewCTestProcess, 
RunConfigurationScript, 
ShowOnly, 
TomorrowTag, 
ParallelLevelSetInCli, 
1 warning generated.

1 warning generated.

InteractiveDebugMode, 
ShortDateFormat, 
CompressXMLFiles, 
CompressTestOutput, 
SuppressUpdatingCTestConfiguration, 
Debug, 
ShowLineNumbers, 
Quiet, 
DropSiteCDash, 
OutputTestOutputOnTestFailure, 
consider reordering the fields or adding explicit padding members [clang-analyzer-optin.performance.Padding]
class cmCTest
      ^
/project/git/Source/cmCTest.h:32:7: note: Excessive padding in 'class cmCTest' (46 padding bytes, where 6 is optimal). Optimal fields order: StopTime, TimeOut, GlobalTimeout, TestLoad, StreamOut, StreamErr, OutputLogFile, InitialCommandLineArguments, ConfigType, ScheduleType, CurrentTag, SpecificTrack, BinaryDir, NotesFiles, BuildID, TestingHandlers, CTestConfiguration, CTestConfigurationOverwrites, PartMap, Definitions, Parts, RepeatTests, TestModel, MaxTestNameWidth, ParallelLevel, CompatibilityMode, DartVersion, SubmitIndex, OutputLogFileLastTag, RepeatUntilFail, TestProgressOutput, Verbose, ExtraVerbose, ProduceXML, LabelSummary, SubprojectSummary, UseHTTP10, PrintLabels, Failover, FlushTestProgressLine, ForceNewCTestProcess, RunConfigurationScript, ShowOnly, TomorrowTag, ParallelLevelSetInCli, InteractiveDebugMode, ShortDateFormat, CompressXMLFiles, CompressTestOutput, SuppressUpdatingCTestConfiguration, Debug, ShowLineNumbers, Quiet, DropSiteCDash, OutputTestOutputOnTestFailure, consider reordering the fields or adding explicit padding members

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpZN4fts.yaml -p=/project/git /project/git/Source/CTest/cmCTestRunScriptCommand.cxx
/project/git/Source/cmCTest.h:32:7: warning: Excessive padding in 'class cmCTest' (46 padding bytes, where 6 is optimal). 
Optimal fields order: 
StopTime, 
TimeOut, 
GlobalTimeout, 
TestLoad, 
StreamOut, 
StreamErr, 
OutputLogFile, 
InitialCommandLineArguments, 
ConfigType, 
ScheduleType, 
CurrentTag, 
SpecificTrack, 
BinaryDir, 
NotesFiles, 
BuildID, 
TestingHandlers, 
CTestConfiguration, 
CTestConfigurationOverwrites, 
PartMap, 
Definitions, 
Parts, 
RepeatTests, 
TestModel, 
MaxTestNameWidth, 
ParallelLevel, 
CompatibilityMode, 
DartVersion, 
SubmitIndex, 
OutputLogFileLastTag, 
RepeatUntilFail, 
TestProgressOutput, 
Verbose, 
ExtraVerbose, 
ProduceXML, 
LabelSummary, 
SubprojectSummary, 
UseHTTP10, 
PrintLabels, 
Failover, 
FlushTestProgressLine, 
ForceNewCTestProcess, 
RunConfigurationScript, 
ShowOnly, 
TomorrowTag, 
ParallelLevelSetInCli, 
InteractiveDebugMode, 
ShortDateFormat, 
CompressXMLFiles, 
CompressTestOutput, 
SuppressUpdatingCTestConfiguration, 
Debug, 
ShowLineNumbers, 
Quiet, 
DropSiteCDash, 
OutputTestOutputOnTestFailure, 
consider reordering the fields or adding explicit padding members [clang-analyzer-optin.performance.Padding]
class cmCTest
      ^
/project/git/Source/cmCTest.h:32:7: note: Excessive padding in 'class cmCTest' (46 padding bytes, where 6 is optimal). Optimal fields order: StopTime, TimeOut, GlobalTimeout, TestLoad, StreamOut, StreamErr, OutputLogFile, InitialCommandLineArguments, ConfigType, ScheduleType, CurrentTag, SpecificTrack, BinaryDir, NotesFiles, BuildID, TestingHandlers, CTestConfiguration, CTestConfigurationOverwrites, PartMap, Definitions, Parts, RepeatTests, TestModel, MaxTestNameWidth, ParallelLevel, CompatibilityMode, DartVersion, SubmitIndex, OutputLogFileLastTag, RepeatUntilFail, TestProgressOutput, Verbose, ExtraVerbose, ProduceXML, LabelSummary, SubprojectSummary, UseHTTP10, PrintLabels, Failover, FlushTestProgressLine, ForceNewCTestProcess, RunConfigurationScript, ShowOnly, TomorrowTag, ParallelLevelSetInCli, InteractiveDebugMode, ShortDateFormat, CompressXMLFiles, CompressTestOutput, SuppressUpdatingCTestConfiguration, Debug, ShowLineNumbers, Quiet, DropSiteCDash, OutputTestOutputOnTestFailure, consider reordering the fields or adding explicit padding members

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpcN397c.yaml -p=/project/git /project/git/Source/CTest/cmParseDelphiCoverage.cxx
1 warning generated.

/project/git/Source/cmCTest.h:32:7: warning: Excessive padding in 'class cmCTest' (46 padding bytes, where 6 is optimal). 
Optimal fields order: 
StopTime, 
TimeOut, 
GlobalTimeout, 
TestLoad, 
StreamOut, 
StreamErr, 
OutputLogFile, 
InitialCommandLineArguments, 
ConfigType, 
ScheduleType, 
CurrentTag, 
SpecificTrack, 
BinaryDir, 
NotesFiles, 
BuildID, 
TestingHandlers, 
CTestConfiguration, 
CTestConfigurationOverwrites, 
PartMap, 
Definitions, 
Parts, 
RepeatTests, 
TestModel, 
MaxTestNameWidth, 
ParallelLevel, 
CompatibilityMode, 
DartVersion, 
SubmitIndex, 
OutputLogFileLastTag, 
RepeatUntilFail, 
TestProgressOutput, 
Verbose, 
ExtraVerbose, 
ProduceXML, 
LabelSummary, 
SubprojectSummary, 
UseHTTP10, 
PrintLabels, 
Failover, 
FlushTestProgressLine, 
ForceNewCTestProcess, 
RunConfigurationScript, 
ShowOnly, 
TomorrowTag, 
ParallelLevelSetInCli, 
InteractiveDebugMode, 
ShortDateFormat, 
CompressXMLFiles, 
CompressTestOutput, 
SuppressUpdatingCTestConfiguration, 
Debug, 
ShowLineNumbers, 
Quiet, 
DropSiteCDash, 
OutputTestOutputOnTestFailure, 
consider reordering the fields or adding explicit padding members [clang-analyzer-optin.performance.Padding]
class cmCTest
      ^
/project/git/Source/cmCTest.h:32:7: note: Excessive padding in 'class cmCTest' (46 padding bytes, where 6 is optimal). Optimal fields order: StopTime, TimeOut, GlobalTimeout, TestLoad, StreamOut, StreamErr, OutputLogFile, InitialCommandLineArguments, ConfigType, ScheduleType, CurrentTag, SpecificTrack, BinaryDir, NotesFiles, BuildID, TestingHandlers, CTestConfiguration, CTestConfigurationOverwrites, PartMap, Definitions, Parts, RepeatTests, TestModel, MaxTestNameWidth, ParallelLevel, CompatibilityMode, DartVersion, SubmitIndex, OutputLogFileLastTag, RepeatUntilFail, TestProgressOutput, Verbose, ExtraVerbose, ProduceXML, LabelSummary, SubprojectSummary, UseHTTP10, PrintLabels, Failover, FlushTestProgressLine, ForceNewCTestProcess, RunConfigurationScript, ShowOnly, TomorrowTag, ParallelLevelSetInCli, InteractiveDebugMode, ShortDateFormat, CompressXMLFiles, CompressTestOutput, SuppressUpdatingCTestConfiguration, Debug, ShowLineNumbers, Quiet, DropSiteCDash, OutputTestOutputOnTestFailure, consider reordering the fields or adding explicit padding members

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmptL9CBC.yaml -p=/project/git /project/git/Source/CTest/cmCTestSubmitCommand.cxx
/project/git/Source/cmCTest.h:32:7: warning: Excessive padding in 'class cmCTest' (46 padding bytes, where 6 is optimal). 
Optimal fields order: 
StopTime, 
TimeOut, 
GlobalTimeout, 
TestLoad, 
StreamOut, 
StreamErr, 
OutputLogFile, 
InitialCommandLineArguments, 
ConfigType, 
ScheduleType, 
CurrentTag, 
SpecificTrack, 
BinaryDir, 
NotesFiles, 
BuildID, 
TestingHandlers, 
CTestConfiguration, 
CTestConfigurationOverwrites, 
PartMap, 
Definitions, 
Parts, 
RepeatTests, 
TestModel, 
MaxTestNameWidth, 
ParallelLevel, 
CompatibilityMode, 
DartVersion, 
SubmitIndex, 
OutputLogFileLastTag, 
RepeatUntilFail, 
TestProgressOutput, 
Verbose, 
ExtraVerbose, 
ProduceXML, 
LabelSummary, 
SubprojectSummary, 
UseHTTP10, 
PrintLabels, 
Failover, 
FlushTestProgressLine, 
ForceNewCTestProcess, 
RunConfigurationScript, 
ShowOnly, 
TomorrowTag, 
ParallelLevelSetInCli, 
InteractiveDebugMode, 
ShortDateFormat, 
CompressXMLFiles, 
CompressTestOutput, 
SuppressUpdatingCTestConfiguration, 
Debug, 
ShowLineNumbers, 
Quiet, 
DropSiteCDash, 
OutputTestOutputOnTestFailure, 
consider reordering the fields or adding explicit padding members [clang-analyzer-optin.performance.Padding]
class cmCTest
      ^
1 warning generated.

1 warning generated.

/project/git/Source/cmCTest.h:32:7: note: Excessive padding in 'class cmCTest' (46 padding bytes, where 6 is optimal). Optimal fields order: StopTime, TimeOut, GlobalTimeout, TestLoad, StreamOut, StreamErr, OutputLogFile, InitialCommandLineArguments, ConfigType, ScheduleType, CurrentTag, SpecificTrack, BinaryDir, NotesFiles, BuildID, TestingHandlers, CTestConfiguration, CTestConfigurationOverwrites, PartMap, Definitions, Parts, RepeatTests, TestModel, MaxTestNameWidth, ParallelLevel, CompatibilityMode, DartVersion, SubmitIndex, OutputLogFileLastTag, RepeatUntilFail, TestProgressOutput, Verbose, ExtraVerbose, ProduceXML, LabelSummary, SubprojectSummary, UseHTTP10, PrintLabels, Failover, FlushTestProgressLine, ForceNewCTestProcess, RunConfigurationScript, ShowOnly, TomorrowTag, ParallelLevelSetInCli, InteractiveDebugMode, ShortDateFormat, CompressXMLFiles, CompressTestOutput, SuppressUpdatingCTestConfiguration, Debug, ShowLineNumbers, Quiet, DropSiteCDash, OutputTestOutputOnTestFailure, consider reordering the fields or adding explicit padding members

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpRildY3.yaml -p=/project/git /project/git/Source/CTest/cmCTestHandlerCommand.cxx
/project/git/Source/cmCTest.h:32:7: warning: Excessive padding in 'class cmCTest' (46 padding bytes, where 6 is optimal). 
Optimal fields order: 
StopTime, 
TimeOut, 
GlobalTimeout, 
TestLoad, 
StreamOut, 
StreamErr, 
OutputLogFile, 
InitialCommandLineArguments, 
ConfigType, 
ScheduleType, 
CurrentTag, 
SpecificTrack, 
BinaryDir, 
NotesFiles, 
BuildID, 
TestingHandlers, 
CTestConfiguration, 
CTestConfigurationOverwrites, 
PartMap, 
Definitions, 
Parts, 
RepeatTests, 
TestModel, 
MaxTestNameWidth, 
ParallelLevel, 
CompatibilityMode, 
DartVersion, 
SubmitIndex, 
OutputLogFileLastTag, 
RepeatUntilFail, 
TestProgressOutput, 
Verbose, 
ExtraVerbose, 
ProduceXML, 
LabelSummary, 
SubprojectSummary, 
UseHTTP10, 
PrintLabels, 
Failover, 
FlushTestProgressLine, 
ForceNewCTestProcess, 
RunConfigurationScript, 
ShowOnly, 
TomorrowTag, 
ParallelLevelSetInCli, 
InteractiveDebugMode, 
ShortDateFormat, 
CompressXMLFiles, 
CompressTestOutput, 
SuppressUpdatingCTestConfiguration, 
Debug, 
ShowLineNumbers, 
Quiet, 
DropSiteCDash, 
OutputTestOutputOnTestFailure, 
consider reordering the fields or adding explicit padding members [clang-analyzer-optin.performance.Padding]
class cmCTest
      ^
/project/git/Source/cmCTest.h:32:7: note: Excessive padding in 'class cmCTest' (46 padding bytes, where 6 is optimal). Optimal fields order: StopTime, TimeOut, GlobalTimeout, TestLoad, StreamOut, StreamErr, OutputLogFile, InitialCommandLineArguments, ConfigType, ScheduleType, CurrentTag, SpecificTrack, BinaryDir, NotesFiles, BuildID, TestingHandlers, CTestConfiguration, CTestConfigurationOverwrites, PartMap, Definitions, Parts, RepeatTests, TestModel, MaxTestNameWidth, ParallelLevel, CompatibilityMode, DartVersion, SubmitIndex, OutputLogFileLastTag, RepeatUntilFail, TestProgressOutput, Verbose, ExtraVerbose, ProduceXML, LabelSummary, SubprojectSummary, UseHTTP10, PrintLabels, Failover, FlushTestProgressLine, ForceNewCTestProcess, RunConfigurationScript, ShowOnly, TomorrowTag, ParallelLevelSetInCli, InteractiveDebugMode, ShortDateFormat, CompressXMLFiles, CompressTestOutput, SuppressUpdatingCTestConfiguration, Debug, ShowLineNumbers, Quiet, DropSiteCDash, OutputTestOutputOnTestFailure, consider reordering the fields or adding explicit padding members

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpNjPRz7.yaml -p=/project/git /project/git/Source/CTest/cmCTestUpdateCommand.cxx
/project/git/Source/cmCTest.h:32:7: warning: Excessive padding in 'class cmCTest' (46 padding bytes, where 6 is optimal). 
Optimal fields order: 
StopTime, 
TimeOut, 
GlobalTimeout, 
TestLoad, 
StreamOut, 
StreamErr, 
OutputLogFile, 
InitialCommandLineArguments, 
ConfigType, 
ScheduleType, 
CurrentTag, 
SpecificTrack, 
BinaryDir, 
NotesFiles, 
BuildID, 
TestingHandlers, 
CTestConfiguration, 
CTestConfigurationOverwrites, 
PartMap, 
Definitions, 
Parts, 
RepeatTests, 
TestModel, 
MaxTestNameWidth, 
ParallelLevel, 
CompatibilityMode, 
DartVersion, 
SubmitIndex, 
OutputLogFileLastTag, 
RepeatUntilFail, 
TestProgressOutput, 
Verbose, 
ExtraVerbose, 
ProduceXML, 
LabelSummary, 
SubprojectSummary, 
UseHTTP10, 
PrintLabels, 
Failover, 
FlushTestProgressLine, 
ForceNewCTestProcess, 
RunConfigurationScript, 
ShowOnly, 
TomorrowTag, 
ParallelLevelSetInCli, 
InteractiveDebugMode, 
ShortDateFormat, 
CompressXMLFiles, 
CompressTestOutput, 
1 warning generated.

1 warning generated.

SuppressUpdatingCTestConfiguration, 
Debug, 
ShowLineNumbers, 
Quiet, 
DropSiteCDash, 
OutputTestOutputOnTestFailure, 
consider reordering the fields or adding explicit padding members [clang-analyzer-optin.performance.Padding]
class cmCTest
      ^
/project/git/Source/cmCTest.h:32:7: note: Excessive padding in 'class cmCTest' (46 padding bytes, where 6 is optimal). Optimal fields order: StopTime, TimeOut, GlobalTimeout, TestLoad, StreamOut, StreamErr, OutputLogFile, InitialCommandLineArguments, ConfigType, ScheduleType, CurrentTag, SpecificTrack, BinaryDir, NotesFiles, BuildID, TestingHandlers, CTestConfiguration, CTestConfigurationOverwrites, PartMap, Definitions, Parts, RepeatTests, TestModel, MaxTestNameWidth, ParallelLevel, CompatibilityMode, DartVersion, SubmitIndex, OutputLogFileLastTag, RepeatUntilFail, TestProgressOutput, Verbose, ExtraVerbose, ProduceXML, LabelSummary, SubprojectSummary, UseHTTP10, PrintLabels, Failover, FlushTestProgressLine, ForceNewCTestProcess, RunConfigurationScript, ShowOnly, TomorrowTag, ParallelLevelSetInCli, InteractiveDebugMode, ShortDateFormat, CompressXMLFiles, CompressTestOutput, SuppressUpdatingCTestConfiguration, Debug, ShowLineNumbers, Quiet, DropSiteCDash, OutputTestOutputOnTestFailure, consider reordering the fields or adding explicit padding members

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmp0XbmVi.yaml -p=/project/git /project/git/Source/CTest/cmCTestLaunch.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpIzTUAB.yaml -p=/project/git /project/git/Source/CTest/cmCTestUploadCommand.cxx
/project/git/Source/cmCTest.h:32:7: warning: Excessive padding in 'class cmCTest' (46 padding bytes, where 6 is optimal). 
Optimal fields order: 
StopTime, 
TimeOut, 
GlobalTimeout, 
TestLoad, 
StreamOut, 
StreamErr, 
OutputLogFile, 
InitialCommandLineArguments, 
ConfigType, 
ScheduleType, 
CurrentTag, 
SpecificTrack, 
BinaryDir, 
NotesFiles, 
BuildID, 
TestingHandlers, 
CTestConfiguration, 
CTestConfigurationOverwrites, 
PartMap, 
Definitions, 
Parts, 
RepeatTests, 
TestModel, 
MaxTestNameWidth, 
ParallelLevel, 
CompatibilityMode, 
DartVersion, 
SubmitIndex, 
OutputLogFileLastTag, 
RepeatUntilFail, 
TestProgressOutput, 
Verbose, 
ExtraVerbose, 
ProduceXML, 
LabelSummary, 
SubprojectSummary, 
UseHTTP10, 
PrintLabels, 
Failover, 
FlushTestProgressLine, 
ForceNewCTestProcess, 
RunConfigurationScript, 
ShowOnly, 
TomorrowTag, 
ParallelLevelSetInCli, 
InteractiveDebugMode, 
ShortDateFormat, 
CompressXMLFiles, 
CompressTestOutput, 
SuppressUpdatingCTestConfiguration, 
Debug, 
ShowLineNumbers, 
Quiet, 
DropSiteCDash, 
OutputTestOutputOnTestFailure, 
consider reordering the fields or adding explicit padding members [clang-analyzer-optin.performance.Padding]
class cmCTest
      ^
/project/git/Source/cmCTest.h:32:7: note: Excessive padding in 'class cmCTest' (46 padding bytes, where 6 is optimal). Optimal fields order: StopTime, TimeOut, GlobalTimeout, TestLoad, StreamOut, StreamErr, OutputLogFile, InitialCommandLineArguments, ConfigType, ScheduleType, CurrentTag, SpecificTrack, BinaryDir, NotesFiles, BuildID, TestingHandlers, CTestConfiguration, CTestConfigurationOverwrites, PartMap, Definitions, Parts, RepeatTests, TestModel, MaxTestNameWidth, ParallelLevel, CompatibilityMode, DartVersion, SubmitIndex, OutputLogFileLastTag, RepeatUntilFail, TestProgressOutput, Verbose, ExtraVerbose, ProduceXML, LabelSummary, SubprojectSummary, UseHTTP10, PrintLabels, Failover, FlushTestProgressLine, ForceNewCTestProcess, RunConfigurationScript, ShowOnly, TomorrowTag, ParallelLevelSetInCli, InteractiveDebugMode, ShortDateFormat, CompressXMLFiles, CompressTestOutput, SuppressUpdatingCTestConfiguration, Debug, ShowLineNumbers, Quiet, DropSiteCDash, OutputTestOutputOnTestFailure, consider reordering the fields or adding explicit padding members

1 warning generated.

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmphp1Ngq.yaml -p=/project/git /project/git/Source/CTest/cmCTestVC.cxx
/project/git/Source/cmCTest.h:32:7: warning: Excessive padding in 'class cmCTest' (46 padding bytes, where 6 is optimal). 
Optimal fields order: 
StopTime, 
TimeOut, 
GlobalTimeout, 
TestLoad, 
StreamOut, 
StreamErr, 
OutputLogFile, 
InitialCommandLineArguments, 
ConfigType, 
ScheduleType, 
CurrentTag, 
SpecificTrack, 
BinaryDir, 
NotesFiles, 
BuildID, 
TestingHandlers, 
CTestConfiguration, 
CTestConfigurationOverwrites, 
PartMap, 
Definitions, 
Parts, 
RepeatTests, 
TestModel, 
MaxTestNameWidth, 
ParallelLevel, 
CompatibilityMode, 
DartVersion, 
SubmitIndex, 
OutputLogFileLastTag, 
RepeatUntilFail, 
TestProgressOutput, 
Verbose, 
ExtraVerbose, 
ProduceXML, 
LabelSummary, 
SubprojectSummary, 
UseHTTP10, 
PrintLabels, 
Failover, 
FlushTestProgressLine, 
ForceNewCTestProcess, 
RunConfigurationScript, 
ShowOnly, 
TomorrowTag, 
ParallelLevelSetInCli, 
InteractiveDebugMode, 
ShortDateFormat, 
CompressXMLFiles, 
CompressTestOutput, 
SuppressUpdatingCTestConfiguration, 
Debug, 
ShowLineNumbers, 
Quiet, 
DropSiteCDash, 
OutputTestOutputOnTestFailure, 
consider reordering the fields or adding explicit padding members [clang-analyzer-optin.performance.Padding]
class cmCTest
      ^
/project/git/Source/cmCTest.h:32:7: note: Excessive padding in 'class cmCTest' (46 padding bytes, where 6 is optimal). Optimal fields order: StopTime, TimeOut, GlobalTimeout, TestLoad, StreamOut, StreamErr, OutputLogFile, InitialCommandLineArguments, ConfigType, ScheduleType, CurrentTag, SpecificTrack, BinaryDir, NotesFiles, BuildID, TestingHandlers, CTestConfiguration, CTestConfigurationOverwrites, PartMap, Definitions, Parts, RepeatTests, TestModel, MaxTestNameWidth, ParallelLevel, CompatibilityMode, DartVersion, SubmitIndex, OutputLogFileLastTag, RepeatUntilFail, TestProgressOutput, Verbose, ExtraVerbose, ProduceXML, LabelSummary, SubprojectSummary, UseHTTP10, PrintLabels, Failover, FlushTestProgressLine, ForceNewCTestProcess, RunConfigurationScript, ShowOnly, TomorrowTag, ParallelLevelSetInCli, InteractiveDebugMode, ShortDateFormat, CompressXMLFiles, CompressTestOutput, SuppressUpdatingCTestConfiguration, Debug, ShowLineNumbers, Quiet, DropSiteCDash, OutputTestOutputOnTestFailure, consider reordering the fields or adding explicit padding members

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpWqOf7E.yaml -p=/project/git /project/git/Source/CTest/cmCTestStartCommand.cxx
/project/git/Source/cmCTest.h:32:7: warning: Excessive padding in 'class cmCTest' (46 padding bytes, where 6 is optimal). 
Optimal fields order: 
StopTime, 
TimeOut, 
GlobalTimeout, 
TestLoad, 
StreamOut, 
StreamErr, 
OutputLogFile, 
InitialCommandLineArguments, 
ConfigType, 
ScheduleType, 
CurrentTag, 
SpecificTrack, 
BinaryDir, 
NotesFiles, 
BuildID, 
TestingHandlers, 
CTestConfiguration, 
CTestConfigurationOverwrites, 
PartMap, 
Definitions, 
Parts, 
RepeatTests, 
TestModel, 
MaxTestNameWidth, 
ParallelLevel, 
CompatibilityMode, 
DartVersion, 
SubmitIndex, 
OutputLogFileLastTag, 
RepeatUntilFail, 
TestProgressOutput, 
Verbose, 
ExtraVerbose, 
ProduceXML, 
LabelSummary, 
SubprojectSummary, 
UseHTTP10, 
PrintLabels, 
Failover, 
FlushTestProgressLine, 
ForceNewCTestProcess, 
RunConfigurationScript, 
ShowOnly, 
TomorrowTag, 
ParallelLevelSetInCli, 
InteractiveDebugMode, 
ShortDateFormat, 
CompressXMLFiles, 
CompressTestOutput, 
SuppressUpdatingCTestConfiguration, 
Debug, 
ShowLineNumbers, 
Quiet, 
DropSiteCDash, 
OutputTestOutputOnTestFailure, 
consider reordering the fields or adding explicit padding members [clang-analyzer-optin.performance.Padding]
class cmCTest
      ^
1 warning generated.

1 warning generated.

/project/git/Source/cmCTest.h:32:7: note: Excessive padding in 'class cmCTest' (46 padding bytes, where 6 is optimal). Optimal fields order: StopTime, TimeOut, GlobalTimeout, TestLoad, StreamOut, StreamErr, OutputLogFile, InitialCommandLineArguments, ConfigType, ScheduleType, CurrentTag, SpecificTrack, BinaryDir, NotesFiles, BuildID, TestingHandlers, CTestConfiguration, CTestConfigurationOverwrites, PartMap, Definitions, Parts, RepeatTests, TestModel, MaxTestNameWidth, ParallelLevel, CompatibilityMode, DartVersion, SubmitIndex, OutputLogFileLastTag, RepeatUntilFail, TestProgressOutput, Verbose, ExtraVerbose, ProduceXML, LabelSummary, SubprojectSummary, UseHTTP10, PrintLabels, Failover, FlushTestProgressLine, ForceNewCTestProcess, RunConfigurationScript, ShowOnly, TomorrowTag, ParallelLevelSetInCli, InteractiveDebugMode, ShortDateFormat, CompressXMLFiles, CompressTestOutput, SuppressUpdatingCTestConfiguration, Debug, ShowLineNumbers, Quiet, DropSiteCDash, OutputTestOutputOnTestFailure, consider reordering the fields or adding explicit padding members

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmplaxyFe.yaml -p=/project/git /project/git/Source/CTest/cmCTestGlobalVC.cxx
/project/git/Source/cmCTest.h:32:7: warning: Excessive padding in 'class cmCTest' (46 padding bytes, where 6 is optimal). 
Optimal fields order: 
StopTime, 
TimeOut, 
GlobalTimeout, 
TestLoad, 
StreamOut, 
StreamErr, 
OutputLogFile, 
InitialCommandLineArguments, 
ConfigType, 
ScheduleType, 
CurrentTag, 
SpecificTrack, 
BinaryDir, 
NotesFiles, 
BuildID, 
TestingHandlers, 
CTestConfiguration, 
CTestConfigurationOverwrites, 
PartMap, 
Definitions, 
Parts, 
RepeatTests, 
TestModel, 
MaxTestNameWidth, 
ParallelLevel, 
CompatibilityMode, 
DartVersion, 
SubmitIndex, 
OutputLogFileLastTag, 
RepeatUntilFail, 
TestProgressOutput, 
Verbose, 
ExtraVerbose, 
ProduceXML, 
LabelSummary, 
SubprojectSummary, 
UseHTTP10, 
PrintLabels, 
Failover, 
FlushTestProgressLine, 
ForceNewCTestProcess, 
RunConfigurationScript, 
ShowOnly, 
TomorrowTag, 
ParallelLevelSetInCli, 
InteractiveDebugMode, 
ShortDateFormat, 
CompressXMLFiles, 
CompressTestOutput, 
SuppressUpdatingCTestConfiguration, 
Debug, 
ShowLineNumbers, 
Quiet, 
DropSiteCDash, 
OutputTestOutputOnTestFailure, 
consider reordering the fields or adding explicit padding members [clang-analyzer-optin.performance.Padding]
class cmCTest
      ^
/project/git/Source/cmCTest.h:32:7: note: Excessive padding in 'class cmCTest' (46 padding bytes, where 6 is optimal). Optimal fields order: StopTime, TimeOut, GlobalTimeout, TestLoad, StreamOut, StreamErr, OutputLogFile, InitialCommandLineArguments, ConfigType, ScheduleType, CurrentTag, SpecificTrack, BinaryDir, NotesFiles, BuildID, TestingHandlers, CTestConfiguration, CTestConfigurationOverwrites, PartMap, Definitions, Parts, RepeatTests, TestModel, MaxTestNameWidth, ParallelLevel, CompatibilityMode, DartVersion, SubmitIndex, OutputLogFileLastTag, RepeatUntilFail, TestProgressOutput, Verbose, ExtraVerbose, ProduceXML, LabelSummary, SubprojectSummary, UseHTTP10, PrintLabels, Failover, FlushTestProgressLine, ForceNewCTestProcess, RunConfigurationScript, ShowOnly, TomorrowTag, ParallelLevelSetInCli, InteractiveDebugMode, ShortDateFormat, CompressXMLFiles, CompressTestOutput, SuppressUpdatingCTestConfiguration, Debug, ShowLineNumbers, Quiet, DropSiteCDash, OutputTestOutputOnTestFailure, consider reordering the fields or adding explicit padding members

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpHrJl3F.yaml -p=/project/git /project/git/Source/CTest/cmCTestTestCommand.cxx
/project/git/Source/cmCTest.h:32:7: warning: Excessive padding in 'class cmCTest' (46 padding bytes, where 6 is optimal). 
Optimal fields order: 
StopTime, 
TimeOut, 
GlobalTimeout, 
TestLoad, 
StreamOut, 
StreamErr, 
OutputLogFile, 
InitialCommandLineArguments, 
ConfigType, 
ScheduleType, 
CurrentTag, 
SpecificTrack, 
BinaryDir, 
NotesFiles, 
BuildID, 
TestingHandlers, 
CTestConfiguration, 
CTestConfigurationOverwrites, 
PartMap, 
Definitions, 
Parts, 
RepeatTests, 
TestModel, 
MaxTestNameWidth, 
ParallelLevel, 
CompatibilityMode, 
DartVersion, 
SubmitIndex, 
OutputLogFileLastTag, 
RepeatUntilFail, 
TestProgressOutput, 
Verbose, 
ExtraVerbose, 
ProduceXML, 
LabelSummary, 
SubprojectSummary, 
UseHTTP10, 
PrintLabels, 
Failover, 
FlushTestProgressLine, 
ForceNewCTestProcess, 
RunConfigurationScript, 
ShowOnly, 
TomorrowTag, 
ParallelLevelSetInCli, 
1 warning generated.

InteractiveDebugMode, 
ShortDateFormat, 
CompressXMLFiles, 
CompressTestOutput, 
SuppressUpdatingCTestConfiguration, 
Debug, 
ShowLineNumbers, 
Quiet, 
DropSiteCDash, 
OutputTestOutputOnTestFailure, 
consider reordering the fields or adding explicit padding members [clang-analyzer-optin.performance.Padding]
class cmCTest
      ^
/project/git/Source/cmCTest.h:32:7: note: Excessive padding in 'class cmCTest' (46 padding bytes, where 6 is optimal). Optimal fields order: StopTime, TimeOut, GlobalTimeout, TestLoad, StreamOut, StreamErr, OutputLogFile, InitialCommandLineArguments, ConfigType, ScheduleType, CurrentTag, SpecificTrack, BinaryDir, NotesFiles, BuildID, TestingHandlers, CTestConfiguration, CTestConfigurationOverwrites, PartMap, Definitions, Parts, RepeatTests, TestModel, MaxTestNameWidth, ParallelLevel, CompatibilityMode, DartVersion, SubmitIndex, OutputLogFileLastTag, RepeatUntilFail, TestProgressOutput, Verbose, ExtraVerbose, ProduceXML, LabelSummary, SubprojectSummary, UseHTTP10, PrintLabels, Failover, FlushTestProgressLine, ForceNewCTestProcess, RunConfigurationScript, ShowOnly, TomorrowTag, ParallelLevelSetInCli, InteractiveDebugMode, ShortDateFormat, CompressXMLFiles, CompressTestOutput, SuppressUpdatingCTestConfiguration, Debug, ShowLineNumbers, Quiet, DropSiteCDash, OutputTestOutputOnTestFailure, consider reordering the fields or adding explicit padding members

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmplR66Z1.yaml -p=/project/git /project/git/Utilities/cmjsoncpp/src/lib_json/json_reader.cpp

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpUvEM9x.yaml -p=/project/git /project/git/Source/CTest/cmCTestUploadHandler.cxx
/project/git/Source/CTest/cmCTestUploadHandler.cxx:14:3: warning: Call to virtual function during construction [clang-analyzer-optin.cplusplus.VirtualCall]
  this->Initialize();
  ^
/project/git/Source/CTest/cmCTestUploadHandler.cxx:14:3: note: This constructor of an object of type 'cmCTestUploadHandler' has not returned when the virtual method was called
/project/git/Source/CTest/cmCTestUploadHandler.cxx:14:3: note: Call to virtual function during construction
/project/git/Source/cmCTest.h:32:7: warning: Excessive padding in 'class cmCTest' (46 padding bytes, where 6 is optimal). 
Optimal fields order: 
StopTime, 
TimeOut, 
GlobalTimeout, 
TestLoad, 
StreamOut, 
StreamErr, 
OutputLogFile, 
InitialCommandLineArguments, 
ConfigType, 
ScheduleType, 
CurrentTag, 
SpecificTrack, 
BinaryDir, 
NotesFiles, 
BuildID, 
TestingHandlers, 
CTestConfiguration, 
CTestConfigurationOverwrites, 
PartMap, 
Definitions, 
Parts, 
RepeatTests, 
TestModel, 
MaxTestNameWidth, 
ParallelLevel, 
CompatibilityMode, 
DartVersion, 
SubmitIndex, 
OutputLogFileLastTag, 
RepeatUntilFail, 
TestProgressOutput, 
Verbose, 
ExtraVerbose, 
ProduceXML, 
LabelSummary, 
SubprojectSummary, 
UseHTTP10, 
PrintLabels, 
Failover, 
FlushTestProgressLine, 
ForceNewCTestProcess, 
RunConfigurationScript, 
ShowOnly, 
TomorrowTag, 
ParallelLevelSetInCli, 
InteractiveDebugMode, 
ShortDateFormat, 
CompressXMLFiles, 
CompressTestOutput, 
SuppressUpdatingCTestConfiguration, 
Debug, 
ShowLineNumbers, 
Quiet, 
DropSiteCDash, 
OutputTestOutputOnTestFailure, 
consider reordering the fields or adding explicit padding members [clang-analyzer-optin.performance.Padding]
class cmCTest
      ^
2 warnings generated.

1 warning generated.

/project/git/Source/cmCTest.h:32:7: note: Excessive padding in 'class cmCTest' (46 padding bytes, where 6 is optimal). Optimal fields order: StopTime, TimeOut, GlobalTimeout, TestLoad, StreamOut, StreamErr, OutputLogFile, InitialCommandLineArguments, ConfigType, ScheduleType, CurrentTag, SpecificTrack, BinaryDir, NotesFiles, BuildID, TestingHandlers, CTestConfiguration, CTestConfigurationOverwrites, PartMap, Definitions, Parts, RepeatTests, TestModel, MaxTestNameWidth, ParallelLevel, CompatibilityMode, DartVersion, SubmitIndex, OutputLogFileLastTag, RepeatUntilFail, TestProgressOutput, Verbose, ExtraVerbose, ProduceXML, LabelSummary, SubprojectSummary, UseHTTP10, PrintLabels, Failover, FlushTestProgressLine, ForceNewCTestProcess, RunConfigurationScript, ShowOnly, TomorrowTag, ParallelLevelSetInCli, InteractiveDebugMode, ShortDateFormat, CompressXMLFiles, CompressTestOutput, SuppressUpdatingCTestConfiguration, Debug, ShowLineNumbers, Quiet, DropSiteCDash, OutputTestOutputOnTestFailure, consider reordering the fields or adding explicit padding members

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmp2A5tXj.yaml -p=/project/git /project/git/Source/CTest/cmCTestCVS.cxx
/project/git/Source/cmCTest.h:32:7: warning: Excessive padding in 'class cmCTest' (46 padding bytes, where 6 is optimal). 
Optimal fields order: 
StopTime, 
TimeOut, 
GlobalTimeout, 
TestLoad, 
StreamOut, 
StreamErr, 
OutputLogFile, 
InitialCommandLineArguments, 
ConfigType, 
ScheduleType, 
CurrentTag, 
SpecificTrack, 
BinaryDir, 
NotesFiles, 
BuildID, 
TestingHandlers, 
CTestConfiguration, 
CTestConfigurationOverwrites, 
PartMap, 
Definitions, 
Parts, 
RepeatTests, 
TestModel, 
MaxTestNameWidth, 
ParallelLevel, 
CompatibilityMode, 
DartVersion, 
SubmitIndex, 
OutputLogFileLastTag, 
RepeatUntilFail, 
TestProgressOutput, 
Verbose, 
ExtraVerbose, 
ProduceXML, 
LabelSummary, 
SubprojectSummary, 
UseHTTP10, 
PrintLabels, 
Failover, 
FlushTestProgressLine, 
ForceNewCTestProcess, 
RunConfigurationScript, 
ShowOnly, 
TomorrowTag, 
ParallelLevelSetInCli, 
InteractiveDebugMode, 
ShortDateFormat, 
CompressXMLFiles, 
CompressTestOutput, 
SuppressUpdatingCTestConfiguration, 
Debug, 
ShowLineNumbers, 
Quiet, 
DropSiteCDash, 
OutputTestOutputOnTestFailure, 
consider reordering the fields or adding explicit padding members [clang-analyzer-optin.performance.Padding]
class cmCTest
      ^
/project/git/Source/cmCTest.h:32:7: note: Excessive padding in 'class cmCTest' (46 padding bytes, where 6 is optimal). Optimal fields order: StopTime, TimeOut, GlobalTimeout, TestLoad, StreamOut, StreamErr, OutputLogFile, InitialCommandLineArguments, ConfigType, ScheduleType, CurrentTag, SpecificTrack, BinaryDir, NotesFiles, BuildID, TestingHandlers, CTestConfiguration, CTestConfigurationOverwrites, PartMap, Definitions, Parts, RepeatTests, TestModel, MaxTestNameWidth, ParallelLevel, CompatibilityMode, DartVersion, SubmitIndex, OutputLogFileLastTag, RepeatUntilFail, TestProgressOutput, Verbose, ExtraVerbose, ProduceXML, LabelSummary, SubprojectSummary, UseHTTP10, PrintLabels, Failover, FlushTestProgressLine, ForceNewCTestProcess, RunConfigurationScript, ShowOnly, TomorrowTag, ParallelLevelSetInCli, InteractiveDebugMode, ShortDateFormat, CompressXMLFiles, CompressTestOutput, SuppressUpdatingCTestConfiguration, Debug, ShowLineNumbers, Quiet, DropSiteCDash, OutputTestOutputOnTestFailure, consider reordering the fields or adding explicit padding members

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpSJ2wOd.yaml -p=/project/git /project/git/Utilities/cmlibarchive/libarchive/archive_write_set_format_iso9660.c
/project/git/Utilities/cmlibarchive/libarchive/archive_write_set_format_iso9660.c:4902:5: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
                                strcpy(p, p+1);
                                ^
/project/git/Utilities/cmlibarchive/libarchive/archive_write_set_format_iso9660.c:4902:5: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
/project/git/Utilities/cmlibarchive/libarchive/archive_write_set_format_iso9660.c:4905:5: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
                                strcpy(p, p+2);
                                ^
/project/git/Utilities/cmlibarchive/libarchive/archive_write_set_format_iso9660.c:4905:5: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
/project/git/Utilities/cmlibarchive/libarchive/archive_write_set_format_iso9660.c:4917:6: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
                                        strcpy(rp, p+3);
                                        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_write_set_format_iso9660.c:4917:6: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
/project/git/Utilities/cmlibarchive/libarchive/archive_write_set_format_iso9660.c:4920:6: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
                                        strcpy(dirname, p+4);
                                        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_write_set_format_iso9660.c:4920:6: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
/project/git/Utilities/cmlibarchive/libarchive/archive_write_set_format_iso9660.c:6529:13: warning: Call to 'malloc' has an allocation size of 0 bytes [clang-analyzer-unix.API]
        children = malloc(isoent->children.cnt * sizeof(struct isoent *));
                   ^
/project/git/Utilities/cmlibarchive/libarchive/archive_write_set_format_iso9660.c:1862:2: note: Taking false branch
        if (wb_remaining(a) > 0) {
        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_write_set_format_iso9660.c:1879:6: note: Assuming the condition is false
        if (iso9660->opt.boot) {
            ^
/project/git/Utilities/cmlibarchive/libarchive/archive_write_set_format_iso9660.c:1879:2: note: Taking false branch
        if (iso9660->opt.boot) {
        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_write_set_format_iso9660.c:1904:6: note: Assuming the condition is true
        if (iso9660->opt.joliet) {
            ^
/project/git/Utilities/cmlibarchive/libarchive/archive_write_set_format_iso9660.c:1904:2: note: Taking true branch
        if (iso9660->opt.joliet) {
        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_write_set_format_iso9660.c:1908:3: note: Taking false branch
                if (ret < 0)
                ^
/project/git/Utilities/cmlibarchive/libarchive/archive_write_set_format_iso9660.c:1913:7: note: Assuming the condition is false
                if (iso9660->sconv_to_utf16be == NULL) {
                    ^
/project/git/Utilities/cmlibarchive/libarchive/archive_write_set_format_iso9660.c:1913:3: note: Taking false branch
                if (iso9660->sconv_to_utf16be == NULL) {
                ^
/project/git/Utilities/cmlibarchive/libarchive/archive_write_set_format_iso9660.c:1932:8: note: Calling 'isoent_make_path_table'
        ret = isoent_make_path_table(a);
              ^
/project/git/Utilities/cmlibarchive/libarchive/archive_write_set_format_iso9660.c:6996:6: note: Assuming the condition is true
        if (iso9660->dircnt_max >= MAX_DEPTH &&
            ^
/project/git/Utilities/cmlibarchive/libarchive/archive_write_set_format_iso9660.c:6996:6: note: Left side of '&&' is true
/project/git/Utilities/cmlibarchive/libarchive/archive_write_set_format_iso9660.c:6997:7: note: Assuming the condition is true
            (!iso9660->opt.limit_depth || iso9660->opt.iso_level == 4))
             ^
/project/git/Utilities/cmlibarchive/libarchive/archive_write_set_format_iso9660.c:6997:33: note: Left side of '||' is true
            (!iso9660->opt.limit_depth || iso9660->opt.iso_level == 4))
                                       ^
/project/git/Utilities/cmlibarchive/libarchive/archive_write_set_format_iso9660.c:7005:2: note: Taking false branch
        if (r < 0)
        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_write_set_format_iso9660.c:7007:2: note: Taking true branch
        if (iso9660->opt.joliet) {
        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_write_set_format_iso9660.c:7010:7: note: Assuming 'r' is >= 0
                if (r < 0)
                    ^
/project/git/Utilities/cmlibarchive/libarchive/archive_write_set_format_iso9660.c:7010:3: note: Taking false branch
                if (r < 0)
                ^
/project/git/Utilities/cmlibarchive/libarchive/archive_write_set_format_iso9660.c:7018:6: note: Assuming the condition is false
        if (iso9660->opt.joliet)
            ^
/project/git/Utilities/cmlibarchive/libarchive/archive_write_set_format_iso9660.c:7018:2: note: Taking false branch
        if (iso9660->opt.joliet)
        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_write_set_format_iso9660.c:7023:6: note: Assuming the condition is false
        if (iso9660->opt.rr) {
            ^
/project/git/Utilities/cmlibarchive/libarchive/archive_write_set_format_iso9660.c:7023:2: note: Taking false branch
        if (iso9660->opt.rr) {
        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_write_set_format_iso9660.c:7038:6: note: Calling 'isoent_traverse_tree'
        r = isoent_traverse_tree(a, &(iso9660->primary));
            ^
/project/git/Utilities/cmlibarchive/libarchive/archive_write_set_format_iso9660.c:6561:2: note: Taking true branch
        if (vdd->vdd_type == VDD_JOLIET)
        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_write_set_format_iso9660.c:6566:7: note: Assuming the condition is false
                if (np->virtual &&
                    ^
/project/git/Utilities/cmlibarchive/libarchive/archive_write_set_format_iso9660.c:6566:19: note: Left side of '&&' is false
                if (np->virtual &&
                                ^
/project/git/Utilities/cmlibarchive/libarchive/archive_write_set_format_iso9660.c:6576:7: note: Assuming the condition is true
                if (np->children.first != NULL) {
                    ^
/project/git/Utilities/cmlibarchive/libarchive/archive_write_set_format_iso9660.c:6576:3: note: Taking true branch
                if (np->children.first != NULL) {
                ^
/project/git/Utilities/cmlibarchive/libarchive/archive_write_set_format_iso9660.c:6577:36: note: Left side of '&&' is false
                        if (vdd->vdd_type != VDD_JOLIET &&
                                                        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_write_set_format_iso9660.c:6584:5: note: Taking false branch
                                if (r < 0)
                                ^
/project/git/Utilities/cmlibarchive/libarchive/archive_write_set_format_iso9660.c:6586:9: note: Calling 'isoent_make_sorted_files'
                                r = isoent_make_sorted_files(a, np, &idr);
                                    ^
/project/git/Utilities/cmlibarchive/libarchive/archive_write_set_format_iso9660.c:6529:13: note: Call to 'malloc' has an allocation size of 0 bytes
        children = malloc(isoent->children.cnt * sizeof(struct isoent *));
                   ^
/project/git/Utilities/cmlibarchive/libarchive/archive_write_set_format_iso9660.c:6891:17: warning: Dereference of undefined pointer value [clang-analyzer-core.NullDereference]
        *pathtbl->last = ent;
                       ^
/project/git/Utilities/cmlibarchive/libarchive/archive_write_set_format_iso9660.c:1862:2: note: Taking false branch
        if (wb_remaining(a) > 0) {
        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_write_set_format_iso9660.c:1879:6: note: Assuming the condition is false
        if (iso9660->opt.boot) {
            ^
/project/git/Utilities/cmlibarchive/libarchive/archive_write_set_format_iso9660.c:1879:2: note: Taking false branch
        if (iso9660->opt.boot) {
        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_write_set_format_iso9660.c:1904:6: note: Assuming the condition is false
        if (iso9660->opt.joliet) {
            ^
/project/git/Utilities/cmlibarchive/libarchive/archive_write_set_format_iso9660.c:1904:2: note: Taking false branch
        if (iso9660->opt.joliet) {
        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_write_set_format_iso9660.c:1932:8: note: Calling 'isoent_make_path_table'
        ret = isoent_make_path_table(a);
              ^
/project/git/Utilities/cmlibarchive/libarchive/archive_write_set_format_iso9660.c:6996:6: note: Assuming the condition is true
        if (iso9660->dircnt_max >= MAX_DEPTH &&
            ^
/project/git/Utilities/cmlibarchive/libarchive/archive_write_set_format_iso9660.c:6996:6: note: Left side of '&&' is true
/project/git/Utilities/cmlibarchive/libarchive/archive_write_set_format_iso9660.c:6997:7: note: Assuming the condition is true
            (!iso9660->opt.limit_depth || iso9660->opt.iso_level == 4))
             ^
/project/git/Utilities/cmlibarchive/libarchive/archive_write_set_format_iso9660.c:6997:33: note: Left side of '||' is true
            (!iso9660->opt.limit_depth || iso9660->opt.iso_level == 4))
                                       ^
/project/git/Utilities/cmlibarchive/libarchive/archive_write_set_format_iso9660.c:6998:7: note: Calling 'isoent_alloc_path_table'
                r = isoent_alloc_path_table(a, &(iso9660->primary),
                    ^
/project/git/Utilities/cmlibarchive/libarchive/archive_write_set_format_iso9660.c:6968:17: note: Uninitialized value stored to field 'last'
        vdd->pathtbl = malloc(sizeof(*vdd->pathtbl) * vdd->max_depth);
                       ^
/project/git/Utilities/cmlibarchive/libarchive/archive_write_set_format_iso9660.c:6969:6: note: Assuming the condition is false
        if (vdd->pathtbl == NULL) {
            ^
/project/git/Utilities/cmlibarchive/libarchive/archive_write_set_format_iso9660.c:6969:2: note: Taking false branch
        if (vdd->pathtbl == NULL) {
        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_write_set_format_iso9660.c:6974:14: note: Assuming the condition is false
        for (i = 0; i < vdd->max_depth; i++) {
                    ^
/project/git/Utilities/cmlibarchive/libarchive/archive_write_set_format_iso9660.c:6974:2: note: Loop condition is false. Execution continues on line 6980
        for (i = 0; i < vdd->max_depth; i++) {
        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_write_set_format_iso9660.c:6998:7: note: Returning from 'isoent_alloc_path_table'
                r = isoent_alloc_path_table(a, &(iso9660->primary),
                    ^
/project/git/Utilities/cmlibarchive/libarchive/archive_write_set_format_iso9660.c:7005:2: note: Taking false branch
        if (r < 0)
        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_write_set_format_iso9660.c:7007:2: note: Taking false branch
        if (iso9660->opt.joliet) {
        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_write_set_format_iso9660.c:7017:2: note: Calling 'isoent_collect_dirs'
        isoent_collect_dirs(&(iso9660->primary), NULL, 0);
        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_write_set_format_iso9660.c:6626:2: note: Taking true branch
        if (rootent == NULL)
        ^
/project/git/Utilities/cmlibarchive/libarchive/archive_write_set_format_iso9660.c:6631:3: note: Calling 'path_table_add_entry'
                path_table_add_entry(&(vdd->pathtbl[depth]), np);
                ^
6 warnings generated.

1 warning generated.

/project/git/Utilities/cmlibarchive/libarchive/archive_write_set_format_iso9660.c:6891:17: note: Dereference of undefined pointer value
        *pathtbl->last = ent;
                       ^

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpCn20eX.yaml -p=/project/git /project/git/Source/CTest/cmCTestHG.cxx
/project/git/Source/cmCTest.h:32:7: warning: Excessive padding in 'class cmCTest' (46 padding bytes, where 6 is optimal). 
Optimal fields order: 
StopTime, 
TimeOut, 
GlobalTimeout, 
TestLoad, 
StreamOut, 
StreamErr, 
OutputLogFile, 
InitialCommandLineArguments, 
ConfigType, 
ScheduleType, 
CurrentTag, 
SpecificTrack, 
BinaryDir, 
NotesFiles, 
BuildID, 
TestingHandlers, 
CTestConfiguration, 
CTestConfigurationOverwrites, 
PartMap, 
Definitions, 
Parts, 
RepeatTests, 
TestModel, 
MaxTestNameWidth, 
ParallelLevel, 
CompatibilityMode, 
DartVersion, 
SubmitIndex, 
OutputLogFileLastTag, 
RepeatUntilFail, 
TestProgressOutput, 
Verbose, 
ExtraVerbose, 
ProduceXML, 
LabelSummary, 
SubprojectSummary, 
UseHTTP10, 
PrintLabels, 
Failover, 
FlushTestProgressLine, 
ForceNewCTestProcess, 
RunConfigurationScript, 
ShowOnly, 
TomorrowTag, 
ParallelLevelSetInCli, 
InteractiveDebugMode, 
ShortDateFormat, 
CompressXMLFiles, 
CompressTestOutput, 
SuppressUpdatingCTestConfiguration, 
Debug, 
ShowLineNumbers, 
Quiet, 
DropSiteCDash, 
OutputTestOutputOnTestFailure, 
consider reordering the fields or adding explicit padding members [clang-analyzer-optin.performance.Padding]
class cmCTest
      ^
/project/git/Source/cmCTest.h:32:7: note: Excessive padding in 'class cmCTest' (46 padding bytes, where 6 is optimal). Optimal fields order: StopTime, TimeOut, GlobalTimeout, TestLoad, StreamOut, StreamErr, OutputLogFile, InitialCommandLineArguments, ConfigType, ScheduleType, CurrentTag, SpecificTrack, BinaryDir, NotesFiles, BuildID, TestingHandlers, CTestConfiguration, CTestConfigurationOverwrites, PartMap, Definitions, Parts, RepeatTests, TestModel, MaxTestNameWidth, ParallelLevel, CompatibilityMode, DartVersion, SubmitIndex, OutputLogFileLastTag, RepeatUntilFail, TestProgressOutput, Verbose, ExtraVerbose, ProduceXML, LabelSummary, SubprojectSummary, UseHTTP10, PrintLabels, Failover, FlushTestProgressLine, ForceNewCTestProcess, RunConfigurationScript, ShowOnly, TomorrowTag, ParallelLevelSetInCli, InteractiveDebugMode, ShortDateFormat, CompressXMLFiles, CompressTestOutput, SuppressUpdatingCTestConfiguration, Debug, ShowLineNumbers, Quiet, DropSiteCDash, OutputTestOutputOnTestFailure, consider reordering the fields or adding explicit padding members

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpj1hNCq.yaml -p=/project/git /project/git/Source/CTest/cmCTestUpdateHandler.cxx
/project/git/Source/cmCTest.h:32:7: warning: Excessive padding in 'class cmCTest' (46 padding bytes, where 6 is optimal). 
Optimal fields order: 
StopTime, 
TimeOut, 
GlobalTimeout, 
TestLoad, 
StreamOut, 
StreamErr, 
OutputLogFile, 
InitialCommandLineArguments, 
ConfigType, 
ScheduleType, 
CurrentTag, 
SpecificTrack, 
BinaryDir, 
NotesFiles, 
BuildID, 
TestingHandlers, 
CTestConfiguration, 
CTestConfigurationOverwrites, 
PartMap, 
Definitions, 
Parts, 
RepeatTests, 
TestModel, 
MaxTestNameWidth, 
ParallelLevel, 
CompatibilityMode, 
DartVersion, 
SubmitIndex, 
OutputLogFileLastTag, 
RepeatUntilFail, 
TestProgressOutput, 
Verbose, 
ExtraVerbose, 
ProduceXML, 
LabelSummary, 
SubprojectSummary, 
UseHTTP10, 
PrintLabels, 
Failover, 
FlushTestProgressLine, 
ForceNewCTestProcess, 
RunConfigurationScript, 
ShowOnly, 
TomorrowTag, 
ParallelLevelSetInCli, 
InteractiveDebugMode, 
ShortDateFormat, 
CompressXMLFiles, 
CompressTestOutput, 
SuppressUpdatingCTestConfiguration, 
Debug, 
ShowLineNumbers, 
Quiet, 
DropSiteCDash, 
OutputTestOutputOnTestFailure, 
consider reordering the fields or adding explicit padding members [clang-analyzer-optin.performance.Padding]
class cmCTest
      ^
1 warning generated.

1 warning generated.

/project/git/Source/cmCTest.h:32:7: note: Excessive padding in 'class cmCTest' (46 padding bytes, where 6 is optimal). Optimal fields order: StopTime, TimeOut, GlobalTimeout, TestLoad, StreamOut, StreamErr, OutputLogFile, InitialCommandLineArguments, ConfigType, ScheduleType, CurrentTag, SpecificTrack, BinaryDir, NotesFiles, BuildID, TestingHandlers, CTestConfiguration, CTestConfigurationOverwrites, PartMap, Definitions, Parts, RepeatTests, TestModel, MaxTestNameWidth, ParallelLevel, CompatibilityMode, DartVersion, SubmitIndex, OutputLogFileLastTag, RepeatUntilFail, TestProgressOutput, Verbose, ExtraVerbose, ProduceXML, LabelSummary, SubprojectSummary, UseHTTP10, PrintLabels, Failover, FlushTestProgressLine, ForceNewCTestProcess, RunConfigurationScript, ShowOnly, TomorrowTag, ParallelLevelSetInCli, InteractiveDebugMode, ShortDateFormat, CompressXMLFiles, CompressTestOutput, SuppressUpdatingCTestConfiguration, Debug, ShowLineNumbers, Quiet, DropSiteCDash, OutputTestOutputOnTestFailure, consider reordering the fields or adding explicit padding members

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmphRuZUx.yaml -p=/project/git /project/git/Source/LexerParser/cmCommandArgumentParser.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmp9bAINe.yaml -p=/project/git /project/git/Source/CTest/cmCTestP4.cxx
/project/git/Source/cmCTest.h:32:7: warning: Excessive padding in 'class cmCTest' (46 padding bytes, where 6 is optimal). 
Optimal fields order: 
StopTime, 
TimeOut, 
GlobalTimeout, 
TestLoad, 
StreamOut, 
StreamErr, 
OutputLogFile, 
InitialCommandLineArguments, 
ConfigType, 
ScheduleType, 
CurrentTag, 
SpecificTrack, 
BinaryDir, 
NotesFiles, 
BuildID, 
TestingHandlers, 
CTestConfiguration, 
CTestConfigurationOverwrites, 
PartMap, 
Definitions, 
Parts, 
RepeatTests, 
TestModel, 
MaxTestNameWidth, 
ParallelLevel, 
CompatibilityMode, 
DartVersion, 
SubmitIndex, 
OutputLogFileLastTag, 
RepeatUntilFail, 
TestProgressOutput, 
Verbose, 
ExtraVerbose, 
ProduceXML, 
LabelSummary, 
SubprojectSummary, 
UseHTTP10, 
PrintLabels, 
Failover, 
FlushTestProgressLine, 
ForceNewCTestProcess, 
RunConfigurationScript, 
ShowOnly, 
TomorrowTag, 
ParallelLevelSetInCli, 
InteractiveDebugMode, 
ShortDateFormat, 
CompressXMLFiles, 
CompressTestOutput, 
SuppressUpdatingCTestConfiguration, 
Debug, 
ShowLineNumbers, 
Quiet, 
DropSiteCDash, 
OutputTestOutputOnTestFailure, 
consider reordering the fields or adding explicit padding members [clang-analyzer-optin.performance.Padding]
class cmCTest
      ^
/project/git/Source/cmCTest.h:32:7: note: Excessive padding in 'class cmCTest' (46 padding bytes, where 6 is optimal). Optimal fields order: StopTime, TimeOut, GlobalTimeout, TestLoad, StreamOut, StreamErr, OutputLogFile, InitialCommandLineArguments, ConfigType, ScheduleType, CurrentTag, SpecificTrack, BinaryDir, NotesFiles, BuildID, TestingHandlers, CTestConfiguration, CTestConfigurationOverwrites, PartMap, Definitions, Parts, RepeatTests, TestModel, MaxTestNameWidth, ParallelLevel, CompatibilityMode, DartVersion, SubmitIndex, OutputLogFileLastTag, RepeatUntilFail, TestProgressOutput, Verbose, ExtraVerbose, ProduceXML, LabelSummary, SubprojectSummary, UseHTTP10, PrintLabels, Failover, FlushTestProgressLine, ForceNewCTestProcess, RunConfigurationScript, ShowOnly, TomorrowTag, ParallelLevelSetInCli, InteractiveDebugMode, ShortDateFormat, CompressXMLFiles, CompressTestOutput, SuppressUpdatingCTestConfiguration, Debug, ShowLineNumbers, Quiet, DropSiteCDash, OutputTestOutputOnTestFailure, consider reordering the fields or adding explicit padding members

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpx0xmGo.yaml -p=/project/git /project/git/Source/CTest/cmCTestSVN.cxx
/project/git/Source/cmCTest.h:32:7: warning: Excessive padding in 'class cmCTest' (46 padding bytes, where 6 is optimal). 
Optimal fields order: 
StopTime, 
TimeOut, 
GlobalTimeout, 
TestLoad, 
StreamOut, 
StreamErr, 
OutputLogFile, 
InitialCommandLineArguments, 
ConfigType, 
ScheduleType, 
CurrentTag, 
SpecificTrack, 
BinaryDir, 
NotesFiles, 
BuildID, 
TestingHandlers, 
CTestConfiguration, 
CTestConfigurationOverwrites, 
PartMap, 
1 warning generated.

Definitions, 
Parts, 
RepeatTests, 
TestModel, 
MaxTestNameWidth, 
ParallelLevel, 
CompatibilityMode, 
DartVersion, 
SubmitIndex, 
OutputLogFileLastTag, 
RepeatUntilFail, 
TestProgressOutput, 
Verbose, 
ExtraVerbose, 
ProduceXML, 
LabelSummary, 
SubprojectSummary, 
UseHTTP10, 
PrintLabels, 
Failover, 
FlushTestProgressLine, 
ForceNewCTestProcess, 
RunConfigurationScript, 
ShowOnly, 
TomorrowTag, 
ParallelLevelSetInCli, 
InteractiveDebugMode, 
ShortDateFormat, 
CompressXMLFiles, 
CompressTestOutput, 
SuppressUpdatingCTestConfiguration, 
Debug, 
ShowLineNumbers, 
Quiet, 
DropSiteCDash, 
OutputTestOutputOnTestFailure, 
consider reordering the fields or adding explicit padding members [clang-analyzer-optin.performance.Padding]
class cmCTest
      ^
/project/git/Source/cmCTest.h:32:7: note: Excessive padding in 'class cmCTest' (46 padding bytes, where 6 is optimal). Optimal fields order: StopTime, TimeOut, GlobalTimeout, TestLoad, StreamOut, StreamErr, OutputLogFile, InitialCommandLineArguments, ConfigType, ScheduleType, CurrentTag, SpecificTrack, BinaryDir, NotesFiles, BuildID, TestingHandlers, CTestConfiguration, CTestConfigurationOverwrites, PartMap, Definitions, Parts, RepeatTests, TestModel, MaxTestNameWidth, ParallelLevel, CompatibilityMode, DartVersion, SubmitIndex, OutputLogFileLastTag, RepeatUntilFail, TestProgressOutput, Verbose, ExtraVerbose, ProduceXML, LabelSummary, SubprojectSummary, UseHTTP10, PrintLabels, Failover, FlushTestProgressLine, ForceNewCTestProcess, RunConfigurationScript, ShowOnly, TomorrowTag, ParallelLevelSetInCli, InteractiveDebugMode, ShortDateFormat, CompressXMLFiles, CompressTestOutput, SuppressUpdatingCTestConfiguration, Debug, ShowLineNumbers, Quiet, DropSiteCDash, OutputTestOutputOnTestFailure, consider reordering the fields or adding explicit padding members

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpDmXbzn.yaml -p=/project/git /project/git/Source/LexerParser/cmDependsJavaParser.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpK_znPS.yaml -p=/project/git /project/git/Source/CTest/cmCTestScriptHandler.cxx
/project/git/Source/cmCTest.h:32:7: warning: Excessive padding in 'class cmCTest' (46 padding bytes, where 6 is optimal). 
Optimal fields order: 
StopTime, 
TimeOut, 
GlobalTimeout, 
TestLoad, 
StreamOut, 
StreamErr, 
OutputLogFile, 
InitialCommandLineArguments, 
ConfigType, 
ScheduleType, 
CurrentTag, 
SpecificTrack, 
BinaryDir, 
NotesFiles, 
BuildID, 
TestingHandlers, 
CTestConfiguration, 
CTestConfigurationOverwrites, 
PartMap, 
Definitions, 
Parts, 
RepeatTests, 
TestModel, 
MaxTestNameWidth, 
ParallelLevel, 
CompatibilityMode, 
DartVersion, 
SubmitIndex, 
OutputLogFileLastTag, 
RepeatUntilFail, 
TestProgressOutput, 
Verbose, 
ExtraVerbose, 
ProduceXML, 
LabelSummary, 
SubprojectSummary, 
UseHTTP10, 
PrintLabels, 
Failover, 
FlushTestProgressLine, 
ForceNewCTestProcess, 
RunConfigurationScript, 
ShowOnly, 
TomorrowTag, 
ParallelLevelSetInCli, 
InteractiveDebugMode, 
ShortDateFormat, 
CompressXMLFiles, 
CompressTestOutput, 
SuppressUpdatingCTestConfiguration, 
Debug, 
ShowLineNumbers, 
Quiet, 
DropSiteCDash, 
OutputTestOutputOnTestFailure, 
consider reordering the fields or adding explicit padding members [clang-analyzer-optin.performance.Padding]
class cmCTest
      ^
1 warning generated.

1 warning generated.

/project/git/Source/cmCTest.h:32:7: note: Excessive padding in 'class cmCTest' (46 padding bytes, where 6 is optimal). Optimal fields order: StopTime, TimeOut, GlobalTimeout, TestLoad, StreamOut, StreamErr, OutputLogFile, InitialCommandLineArguments, ConfigType, ScheduleType, CurrentTag, SpecificTrack, BinaryDir, NotesFiles, BuildID, TestingHandlers, CTestConfiguration, CTestConfigurationOverwrites, PartMap, Definitions, Parts, RepeatTests, TestModel, MaxTestNameWidth, ParallelLevel, CompatibilityMode, DartVersion, SubmitIndex, OutputLogFileLastTag, RepeatUntilFail, TestProgressOutput, Verbose, ExtraVerbose, ProduceXML, LabelSummary, SubprojectSummary, UseHTTP10, PrintLabels, Failover, FlushTestProgressLine, ForceNewCTestProcess, RunConfigurationScript, ShowOnly, TomorrowTag, ParallelLevelSetInCli, InteractiveDebugMode, ShortDateFormat, CompressXMLFiles, CompressTestOutput, SuppressUpdatingCTestConfiguration, Debug, ShowLineNumbers, Quiet, DropSiteCDash, OutputTestOutputOnTestFailure, consider reordering the fields or adding explicit padding members

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpiybzS9.yaml -p=/project/git /project/git/Source/LexerParser/cmFortranParser.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpd4C4Pz.yaml -p=/project/git /project/git/Source/LexerParser/cmExprParser.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpzCR1sF.yaml -p=/project/git /project/git/Source/CTest/cmCTestGIT.cxx
/project/git/Source/cmCTest.h:32:7: warning: Excessive padding in 'class cmCTest' (46 padding bytes, where 6 is optimal). 
Optimal fields order: 
StopTime, 
TimeOut, 
GlobalTimeout, 
TestLoad, 
StreamOut, 
StreamErr, 
OutputLogFile, 
InitialCommandLineArguments, 
ConfigType, 
ScheduleType, 
CurrentTag, 
SpecificTrack, 
BinaryDir, 
NotesFiles, 
BuildID, 
TestingHandlers, 
CTestConfiguration, 
CTestConfigurationOverwrites, 
PartMap, 
Definitions, 
Parts, 
RepeatTests, 
TestModel, 
MaxTestNameWidth, 
ParallelLevel, 
CompatibilityMode, 
DartVersion, 
SubmitIndex, 
OutputLogFileLastTag, 
RepeatUntilFail, 
TestProgressOutput, 
Verbose, 
ExtraVerbose, 
ProduceXML, 
LabelSummary, 
SubprojectSummary, 
UseHTTP10, 
PrintLabels, 
Failover, 
FlushTestProgressLine, 
ForceNewCTestProcess, 
RunConfigurationScript, 
ShowOnly, 
TomorrowTag, 
ParallelLevelSetInCli, 
InteractiveDebugMode, 
ShortDateFormat, 
CompressXMLFiles, 
CompressTestOutput, 
SuppressUpdatingCTestConfiguration, 
Debug, 
ShowLineNumbers, 
Quiet, 
DropSiteCDash, 
OutputTestOutputOnTestFailure, 
consider reordering the fields or adding explicit padding members [clang-analyzer-optin.performance.Padding]
class cmCTest
      ^
/project/git/Source/cmCTest.h:32:7: note: Excessive padding in 'class cmCTest' (46 padding bytes, where 6 is optimal). Optimal fields order: StopTime, TimeOut, GlobalTimeout, TestLoad, StreamOut, StreamErr, OutputLogFile, InitialCommandLineArguments, ConfigType, ScheduleType, CurrentTag, SpecificTrack, BinaryDir, NotesFiles, BuildID, TestingHandlers, CTestConfiguration, CTestConfigurationOverwrites, PartMap, Definitions, Parts, RepeatTests, TestModel, MaxTestNameWidth, ParallelLevel, CompatibilityMode, DartVersion, SubmitIndex, OutputLogFileLastTag, RepeatUntilFail, TestProgressOutput, Verbose, ExtraVerbose, ProduceXML, LabelSummary, SubprojectSummary, UseHTTP10, PrintLabels, Failover, FlushTestProgressLine, ForceNewCTestProcess, RunConfigurationScript, ShowOnly, TomorrowTag, ParallelLevelSetInCli, InteractiveDebugMode, ShortDateFormat, CompressXMLFiles, CompressTestOutput, SuppressUpdatingCTestConfiguration, Debug, ShowLineNumbers, Quiet, DropSiteCDash, OutputTestOutputOnTestFailure, consider reordering the fields or adding explicit padding members

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmp59i6Fd.yaml -p=/project/git /project/git/Source/cmAffinity.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpDfOgL3.yaml -p=/project/git /project/git/Source/cmBase32.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpPzRCSZ.yaml -p=/project/git /project/git/Source/CTest/cmCTestRunTest.cxx
/project/git/Source/cmCTest.h:32:7: warning: Excessive padding in 'class cmCTest' (46 padding bytes, where 6 is optimal). 
Optimal fields order: 
StopTime, 
TimeOut, 
GlobalTimeout, 
TestLoad, 
StreamOut, 
StreamErr, 
OutputLogFile, 
InitialCommandLineArguments, 
ConfigType, 
ScheduleType, 
CurrentTag, 
SpecificTrack, 
BinaryDir, 
NotesFiles, 
BuildID, 
TestingHandlers, 
CTestConfiguration, 
CTestConfigurationOverwrites, 
PartMap, 
Definitions, 
1 warning generated.

Parts, 
RepeatTests, 
TestModel, 
MaxTestNameWidth, 
ParallelLevel, 
CompatibilityMode, 
DartVersion, 
SubmitIndex, 
OutputLogFileLastTag, 
RepeatUntilFail, 
TestProgressOutput, 
Verbose, 
ExtraVerbose, 
ProduceXML, 
LabelSummary, 
SubprojectSummary, 
UseHTTP10, 
PrintLabels, 
Failover, 
FlushTestProgressLine, 
ForceNewCTestProcess, 
RunConfigurationScript, 
ShowOnly, 
TomorrowTag, 
ParallelLevelSetInCli, 
InteractiveDebugMode, 
ShortDateFormat, 
CompressXMLFiles, 
CompressTestOutput, 
SuppressUpdatingCTestConfiguration, 
Debug, 
ShowLineNumbers, 
Quiet, 
DropSiteCDash, 
OutputTestOutputOnTestFailure, 
consider reordering the fields or adding explicit padding members [clang-analyzer-optin.performance.Padding]
class cmCTest
      ^
/project/git/Source/cmCTest.h:32:7: note: Excessive padding in 'class cmCTest' (46 padding bytes, where 6 is optimal). Optimal fields order: StopTime, TimeOut, GlobalTimeout, TestLoad, StreamOut, StreamErr, OutputLogFile, InitialCommandLineArguments, ConfigType, ScheduleType, CurrentTag, SpecificTrack, BinaryDir, NotesFiles, BuildID, TestingHandlers, CTestConfiguration, CTestConfigurationOverwrites, PartMap, Definitions, Parts, RepeatTests, TestModel, MaxTestNameWidth, ParallelLevel, CompatibilityMode, DartVersion, SubmitIndex, OutputLogFileLastTag, RepeatUntilFail, TestProgressOutput, Verbose, ExtraVerbose, ProduceXML, LabelSummary, SubprojectSummary, UseHTTP10, PrintLabels, Failover, FlushTestProgressLine, ForceNewCTestProcess, RunConfigurationScript, ShowOnly, TomorrowTag, ParallelLevelSetInCli, InteractiveDebugMode, ShortDateFormat, CompressXMLFiles, CompressTestOutput, SuppressUpdatingCTestConfiguration, Debug, ShowLineNumbers, Quiet, DropSiteCDash, OutputTestOutputOnTestFailure, consider reordering the fields or adding explicit padding members

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpNSfLjO.yaml -p=/project/git /project/git/Source/cmCLocaleEnvironmentScope.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpfZQAFA.yaml -p=/project/git /project/git/Source/LexerParser/cmCommandArgumentLexer.cxx
/project/git/Source/LexerParser/cmCommandArgumentLexer.cxx:2226:9: warning: Call to 'realloc' has an allocation size of 0 bytes [clang-analyzer-unix.API]
        return realloc(ptr, size);
               ^
/project/git/Source/LexerParser/cmCommandArgumentLexer.cxx:909:7: note: Assuming the condition is false
        if ( !yyg->yy_init )
             ^
/project/git/Source/LexerParser/cmCommandArgumentLexer.cxx:909:2: note: Taking false branch
        if ( !yyg->yy_init )
        ^
/project/git/Source/LexerParser/cmCommandArgumentLexer.cxx:937:2: note: Loop condition is true.  Entering loop body
        while ( /*CONSTCOND*/1 )                /* loops until end-of-file is reached */
        ^
/project/git/Source/LexerParser/cmCommandArgumentLexer.cxx:954:4: note: Taking false branch
                        if ( yy_accept[yy_current_state] )
                        ^
/project/git/Source/LexerParser/cmCommandArgumentLexer.cxx:959:4: note: Loop condition is false. Execution continues on line 965
                        while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )
                        ^
/project/git/Source/LexerParser/cmCommandArgumentLexer.cxx:951:3: note: Loop condition is false.  Exiting loop
                do
                ^
/project/git/Source/LexerParser/cmCommandArgumentLexer.cxx:972:8: note: Assuming 'yy_act' is not equal to 0
                if ( yy_act == 0 )
                     ^
/project/git/Source/LexerParser/cmCommandArgumentLexer.cxx:972:3: note: Taking false branch
                if ( yy_act == 0 )
                ^
/project/git/Source/LexerParser/cmCommandArgumentLexer.cxx:983:3: note: Control jumps to 'case 15:'  at line 1111
                switch ( yy_act )
                ^
/project/git/Source/LexerParser/cmCommandArgumentLexer.cxx:1120:3: note: Taking false branch
1 warning generated.

                if ( YY_CURRENT_BUFFER_LVALUE->yy_buffer_status == YY_BUFFER_NEW )
                ^
/project/git/Source/LexerParser/cmCommandArgumentLexer.cxx:1143:3: note: Taking false branch
                if ( yyg->yy_c_buf_p <= &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[yyg->yy_n_chars] )
                ^
/project/git/Source/LexerParser/cmCommandArgumentLexer.cxx:1179:17: note: Calling 'yy_get_next_buffer'
                else switch ( yy_get_next_buffer( yyscanner ) )
                              ^
/project/git/Source/LexerParser/cmCommandArgumentLexer.cxx:1256:2: note: Taking false branch
        if ( yyg->yy_c_buf_p > &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[yyg->yy_n_chars + 1] )
        ^
/project/git/Source/LexerParser/cmCommandArgumentLexer.cxx:1260:2: note: Taking false branch
        if ( YY_CURRENT_BUFFER_LVALUE->yy_fill_buffer == 0 )
        ^
/project/git/Source/LexerParser/cmCommandArgumentLexer.cxx:1284:15: note: Assuming 'i' is >= 'number_to_move'
        for ( i = 0; i < number_to_move; ++i )
                     ^
/project/git/Source/LexerParser/cmCommandArgumentLexer.cxx:1284:2: note: Loop condition is false. Execution continues on line 1287
        for ( i = 0; i < number_to_move; ++i )
        ^
/project/git/Source/LexerParser/cmCommandArgumentLexer.cxx:1287:2: note: Taking true branch
        if ( YY_CURRENT_BUFFER_LVALUE->yy_buffer_status == YY_BUFFER_EOF_PENDING )
        ^
/project/git/Source/LexerParser/cmCommandArgumentLexer.cxx:1346:2: note: Taking true branch
        if ( yyg->yy_n_chars == 0 )
        ^
/project/git/Source/LexerParser/cmCommandArgumentLexer.cxx:1348:8: note: Assuming 'number_to_move' is equal to YY_MORE_ADJ
                if ( number_to_move == YY_MORE_ADJ )
                     ^
/project/git/Source/LexerParser/cmCommandArgumentLexer.cxx:1348:3: note: Taking true branch
                if ( number_to_move == YY_MORE_ADJ )
                ^
/project/git/Source/LexerParser/cmCommandArgumentLexer.cxx:1365:6: note: Assuming the condition is true
        if ((yyg->yy_n_chars + number_to_move) > YY_CURRENT_BUFFER_LVALUE->yy_buf_size) {
            ^
/project/git/Source/LexerParser/cmCommandArgumentLexer.cxx:1365:2: note: Taking true branch
        if ((yyg->yy_n_chars + number_to_move) > YY_CURRENT_BUFFER_LVALUE->yy_buf_size) {
        ^
/project/git/Source/LexerParser/cmCommandArgumentLexer.cxx:1367:3: note: 'new_size' initialized to 0
                int new_size = yyg->yy_n_chars + number_to_move + (yyg->yy_n_chars >> 1);
                ^
/project/git/Source/LexerParser/cmCommandArgumentLexer.cxx:1369:50: note: Passing the value 0 via 2nd parameter 'size'
                        (void *) YY_CURRENT_BUFFER_LVALUE->yy_ch_buf, (yy_size_t) new_size , yyscanner );
                                                                      ^
/project/git/Source/LexerParser/cmCommandArgumentLexer.cxx:1368:50: note: Calling 'cmCommandArgument_yyrealloc'
                YY_CURRENT_BUFFER_LVALUE->yy_ch_buf = (char *) yyrealloc(
                                                               ^
/project/git/Source/LexerParser/cmCommandArgumentLexer.cxx:217:19: note: expanded from macro 'yyrealloc'
#define yyrealloc cmCommandArgument_yyrealloc
                  ^
/project/git/Source/LexerParser/cmCommandArgumentLexer.cxx:2226:9: note: Call to 'realloc' has an allocation size of 0 bytes
        return realloc(ptr, size);
               ^

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpQ8YWF0.yaml -p=/project/git /project/git/Source/CTest/cmCTestBZR.cxx
/project/git/Source/CTest/cmCTestBZR.cxx:186:5: warning: Call to virtual function during construction [clang-analyzer-optin.cplusplus.VirtualCall]
    this->InitializeParser();
    ^
/project/git/Source/CTest/cmCTestBZR.cxx:403:7: note: Assuming the condition is true
  if (atoi(this->OldRevision.c_str()) <= atoi(this->NewRevision.c_str())) {
      ^
/project/git/Source/CTest/cmCTestBZR.cxx:403:3: note: Taking true branch
  if (atoi(this->OldRevision.c_str()) <= atoi(this->NewRevision.c_str())) {
  ^
2 warnings generated.

/project/git/Source/CTest/cmCTestBZR.cxx:416:15: note: Calling constructor for 'LogParser'
    LogParser out(this, "log-out> ");
              ^
/project/git/Source/CTest/cmCTestBZR.cxx:186:5: note: This constructor of an object of type 'LogParser' has not returned when the virtual method was called
    this->InitializeParser();
    ^
/project/git/Source/CTest/cmCTestBZR.cxx:186:5: note: Call to virtual function during construction
/project/git/Source/cmCTest.h:32:7: warning: Excessive padding in 'class cmCTest' (46 padding bytes, where 6 is optimal). 
Optimal fields order: 
StopTime, 
TimeOut, 
GlobalTimeout, 
TestLoad, 
StreamOut, 
StreamErr, 
OutputLogFile, 
InitialCommandLineArguments, 
ConfigType, 
ScheduleType, 
CurrentTag, 
SpecificTrack, 
BinaryDir, 
NotesFiles, 
BuildID, 
TestingHandlers, 
CTestConfiguration, 
CTestConfigurationOverwrites, 
PartMap, 
Definitions, 
Parts, 
RepeatTests, 
TestModel, 
MaxTestNameWidth, 
ParallelLevel, 
CompatibilityMode, 
DartVersion, 
SubmitIndex, 
OutputLogFileLastTag, 
RepeatUntilFail, 
TestProgressOutput, 
Verbose, 
ExtraVerbose, 
ProduceXML, 
LabelSummary, 
SubprojectSummary, 
UseHTTP10, 
PrintLabels, 
Failover, 
FlushTestProgressLine, 
ForceNewCTestProcess, 
RunConfigurationScript, 
ShowOnly, 
TomorrowTag, 
ParallelLevelSetInCli, 
InteractiveDebugMode, 
ShortDateFormat, 
CompressXMLFiles, 
CompressTestOutput, 
SuppressUpdatingCTestConfiguration, 
Debug, 
ShowLineNumbers, 
Quiet, 
DropSiteCDash, 
OutputTestOutputOnTestFailure, 
consider reordering the fields or adding explicit padding members [clang-analyzer-optin.performance.Padding]
class cmCTest
      ^
/project/git/Source/cmCTest.h:32:7: note: Excessive padding in 'class cmCTest' (46 padding bytes, where 6 is optimal). Optimal fields order: StopTime, TimeOut, GlobalTimeout, TestLoad, StreamOut, StreamErr, OutputLogFile, InitialCommandLineArguments, ConfigType, ScheduleType, CurrentTag, SpecificTrack, BinaryDir, NotesFiles, BuildID, TestingHandlers, CTestConfiguration, CTestConfigurationOverwrites, PartMap, Definitions, Parts, RepeatTests, TestModel, MaxTestNameWidth, ParallelLevel, CompatibilityMode, DartVersion, SubmitIndex, OutputLogFileLastTag, RepeatUntilFail, TestProgressOutput, Verbose, ExtraVerbose, ProduceXML, LabelSummary, SubprojectSummary, UseHTTP10, PrintLabels, Failover, FlushTestProgressLine, ForceNewCTestProcess, RunConfigurationScript, ShowOnly, TomorrowTag, ParallelLevelSetInCli, InteractiveDebugMode, ShortDateFormat, CompressXMLFiles, CompressTestOutput, SuppressUpdatingCTestConfiguration, Debug, ShowLineNumbers, Quiet, DropSiteCDash, OutputTestOutputOnTestFailure, consider reordering the fields or adding explicit padding members

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpUR_QHW.yaml -p=/project/git /project/git/Source/LexerParser/cmFortranLexer.cxx
/project/git/Source/LexerParser/cmFortranLexer.cxx:2594:9: warning: Call to 'realloc' has an allocation size of 0 bytes [clang-analyzer-unix.API]
        return realloc(ptr, size);
               ^
/project/git/Source/LexerParser/cmFortranLexer.cxx:1086:7: note: Assuming the condition is false
        if ( !yyg->yy_init )
             ^
/project/git/Source/LexerParser/cmFortranLexer.cxx:1086:2: note: Taking false branch
        if ( !yyg->yy_init )
        ^
/project/git/Source/LexerParser/cmFortranLexer.cxx:1114:2: note: Loop condition is true.  Entering loop body
        while ( /*CONSTCOND*/1 )                /* loops until end-of-file is reached */
        ^
/project/git/Source/LexerParser/cmFortranLexer.cxx:1132:4: note: Taking false branch
                        if ( yy_accept[yy_current_state] )
                        ^
/project/git/Source/LexerParser/cmFortranLexer.cxx:1137:4: note: Loop condition is false. Execution continues on line 1143
                        while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )
                        ^
/project/git/Source/LexerParser/cmFortranLexer.cxx:1129:3: note: Loop condition is false.  Exiting loop
                do
                ^
/project/git/Source/LexerParser/cmFortranLexer.cxx:1150:8: note: Assuming 'yy_act' is not equal to 0
                if ( yy_act == 0 )
                     ^
/project/git/Source/LexerParser/cmFortranLexer.cxx:1150:3: note: Taking false branch
                if ( yy_act == 0 )
                ^
/project/git/Source/LexerParser/cmFortranLexer.cxx:1161:3: note: Control jumps to 'case 55:'  at line 1438
                switch ( yy_act )
                ^
/project/git/Source/LexerParser/cmFortranLexer.cxx:1447:3: note: Taking false branch
                if ( YY_CURRENT_BUFFER_LVALUE->yy_buffer_status == YY_BUFFER_NEW )
                ^
/project/git/Source/LexerParser/cmFortranLexer.cxx:1470:3: note: Taking false branch
                if ( yyg->yy_c_buf_p <= &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[yyg->yy_n_chars] )
                ^
/project/git/Source/LexerParser/cmFortranLexer.cxx:1506:17: note: Calling 'yy_get_next_buffer'
                else switch ( yy_get_next_buffer( yyscanner ) )
                              ^
/project/git/Source/LexerParser/cmFortranLexer.cxx:1583:2: note: Taking false branch
        if ( yyg->yy_c_buf_p > &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[yyg->yy_n_chars + 1] )
        ^
/project/git/Source/LexerParser/cmFortranLexer.cxx:1587:2: note: Taking false branch
        if ( YY_CURRENT_BUFFER_LVALUE->yy_fill_buffer == 0 )
        ^
/project/git/Source/LexerParser/cmFortranLexer.cxx:1611:15: note: Assuming 'i' is >= 'number_to_move'
        for ( i = 0; i < number_to_move; ++i )
                     ^
/project/git/Source/LexerParser/cmFortranLexer.cxx:1611:2: note: Loop condition is false. Execution continues on line 1614
        for ( i = 0; i < number_to_move; ++i )
        ^
/project/git/Source/LexerParser/cmFortranLexer.cxx:1614:2: note: Taking false branch
        if ( YY_CURRENT_BUFFER_LVALUE->yy_buffer_status == YY_BUFFER_EOF_PENDING )
        ^
/project/git/Source/LexerParser/cmFortranLexer.cxx:1625:11: note: Assuming 'num_to_read' is > 0
                while ( num_to_read <= 0 )
                        ^
/project/git/Source/LexerParser/cmFortranLexer.cxx:1625:3: note: Loop condition is false. Execution continues on line 1663
                while ( num_to_read <= 0 )
                ^
/project/git/Source/LexerParser/cmFortranLexer.cxx:1663:8: note: Assuming 'num_to_read' is <= YY_READ_BUF_SIZE
                if ( num_to_read > YY_READ_BUF_SIZE )
                     ^
/project/git/Source/LexerParser/cmFortranLexer.cxx:1663:3: note: Taking false branch
                if ( num_to_read > YY_READ_BUF_SIZE )
                ^
/project/git/Source/LexerParser/cmFortranLexer.cxx:1673:7: note: Assuming the condition is true
        if ( yyg->yy_n_chars == 0 )
             ^
/project/git/Source/LexerParser/cmFortranLexer.cxx:1673:2: note: Taking true branch
        if ( yyg->yy_n_chars == 0 )
        ^
/project/git/Source/LexerParser/cmFortranLexer.cxx:1675:8: note: Assuming 'number_to_move' is equal to YY_MORE_ADJ
                if ( number_to_move == YY_MORE_ADJ )
                     ^
/project/git/Source/LexerParser/cmFortranLexer.cxx:1675:3: note: Taking true branch
                if ( number_to_move == YY_MORE_ADJ )
                ^
/project/git/Source/LexerParser/cmFortranLexer.cxx:1692:6: note: Assuming the condition is true
        if ((yyg->yy_n_chars + number_to_move) > YY_CURRENT_BUFFER_LVALUE->yy_buf_size) {
            ^
/project/git/Source/LexerParser/cmFortranLexer.cxx:1692:2: note: Taking true branch
        if ((yyg->yy_n_chars + number_to_move) > YY_CURRENT_BUFFER_LVALUE->yy_buf_size) {
        ^
/project/git/Source/LexerParser/cmFortranLexer.cxx:1694:3: note: 'new_size' initialized to 0
                int new_size = yyg->yy_n_chars + number_to_move + (yyg->yy_n_chars >> 1);
                ^
/project/git/Source/LexerParser/cmFortranLexer.cxx:1696:50: note: Passing the value 0 via 2nd parameter 'size'
                        (void *) YY_CURRENT_BUFFER_LVALUE->yy_ch_buf, (yy_size_t) new_size , yyscanner );
                                                                      ^
1 warning generated.

/project/git/Source/LexerParser/cmFortranLexer.cxx:1695:50: note: Calling 'cmFortran_yyrealloc'
                YY_CURRENT_BUFFER_LVALUE->yy_ch_buf = (char *) yyrealloc(
                                                               ^
/project/git/Source/LexerParser/cmFortranLexer.cxx:217:19: note: expanded from macro 'yyrealloc'
#define yyrealloc cmFortran_yyrealloc
                  ^
/project/git/Source/LexerParser/cmFortranLexer.cxx:2594:9: note: Call to 'realloc' has an allocation size of 0 bytes
        return realloc(ptr, size);
               ^

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpP5fWNO.yaml -p=/project/git /project/git/Source/LexerParser/cmDependsJavaLexer.cxx
/project/git/Source/LexerParser/cmDependsJavaLexer.cxx:2803:9: warning: Call to 'realloc' has an allocation size of 0 bytes [clang-analyzer-unix.API]
        return realloc(ptr, size);
               ^
/project/git/Source/LexerParser/cmDependsJavaLexer.cxx:1106:7: note: Assuming the condition is false
        if ( !yyg->yy_init )
             ^
/project/git/Source/LexerParser/cmDependsJavaLexer.cxx:1106:2: note: Taking false branch
        if ( !yyg->yy_init )
        ^
/project/git/Source/LexerParser/cmDependsJavaLexer.cxx:1134:2: note: Loop condition is true.  Entering loop body
        while ( /*CONSTCOND*/1 )                /* loops until end-of-file is reached */
        ^
/project/git/Source/LexerParser/cmDependsJavaLexer.cxx:1151:4: note: Taking false branch
                        if ( yy_accept[yy_current_state] )
                        ^
/project/git/Source/LexerParser/cmDependsJavaLexer.cxx:1156:4: note: Loop condition is false. Execution continues on line 1162
                        while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )
                        ^
/project/git/Source/LexerParser/cmDependsJavaLexer.cxx:1148:3: note: Loop condition is false.  Exiting loop
                do
                ^
/project/git/Source/LexerParser/cmDependsJavaLexer.cxx:1169:8: note: Assuming 'yy_act' is not equal to 0
                if ( yy_act == 0 )
                     ^
/project/git/Source/LexerParser/cmDependsJavaLexer.cxx:1169:3: note: Taking false branch
                if ( yy_act == 0 )
                ^
/project/git/Source/LexerParser/cmDependsJavaLexer.cxx:1180:3: note: Control jumps to 'case 112:'  at line 1650
                switch ( yy_act )
                ^
/project/git/Source/LexerParser/cmDependsJavaLexer.cxx:1659:3: note: Taking false branch
                if ( YY_CURRENT_BUFFER_LVALUE->yy_buffer_status == YY_BUFFER_NEW )
                ^
/project/git/Source/LexerParser/cmDependsJavaLexer.cxx:1682:3: note: Taking false branch
                if ( yyg->yy_c_buf_p <= &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[yyg->yy_n_chars] )
                ^
/project/git/Source/LexerParser/cmDependsJavaLexer.cxx:1718:17: note: Calling 'yy_get_next_buffer'
                else switch ( yy_get_next_buffer( yyscanner ) )
                              ^
/project/git/Source/LexerParser/cmDependsJavaLexer.cxx:1795:2: note: Taking false branch
        if ( yyg->yy_c_buf_p > &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[yyg->yy_n_chars + 1] )
        ^
/project/git/Source/LexerParser/cmDependsJavaLexer.cxx:1799:2: note: Taking false branch
        if ( YY_CURRENT_BUFFER_LVALUE->yy_fill_buffer == 0 )
        ^
/project/git/Source/LexerParser/cmDependsJavaLexer.cxx:1823:15: note: Assuming 'i' is >= 'number_to_move'
        for ( i = 0; i < number_to_move; ++i )
                     ^
/project/git/Source/LexerParser/cmDependsJavaLexer.cxx:1823:2: note: Loop condition is false. Execution continues on line 1826
        for ( i = 0; i < number_to_move; ++i )
        ^
/project/git/Source/LexerParser/cmDependsJavaLexer.cxx:1826:2: note: Taking true branch
        if ( YY_CURRENT_BUFFER_LVALUE->yy_buffer_status == YY_BUFFER_EOF_PENDING )
        ^
/project/git/Source/LexerParser/cmDependsJavaLexer.cxx:1885:2: note: Taking true branch
        if ( yyg->yy_n_chars == 0 )
        ^
1 warning generated.

/project/git/Source/LexerParser/cmDependsJavaLexer.cxx:1887:8: note: Assuming 'number_to_move' is equal to YY_MORE_ADJ
                if ( number_to_move == YY_MORE_ADJ )
                     ^
/project/git/Source/LexerParser/cmDependsJavaLexer.cxx:1887:3: note: Taking true branch
                if ( number_to_move == YY_MORE_ADJ )
                ^
/project/git/Source/LexerParser/cmDependsJavaLexer.cxx:1904:6: note: Assuming the condition is true
        if ((yyg->yy_n_chars + number_to_move) > YY_CURRENT_BUFFER_LVALUE->yy_buf_size) {
            ^
/project/git/Source/LexerParser/cmDependsJavaLexer.cxx:1904:2: note: Taking true branch
        if ((yyg->yy_n_chars + number_to_move) > YY_CURRENT_BUFFER_LVALUE->yy_buf_size) {
        ^
/project/git/Source/LexerParser/cmDependsJavaLexer.cxx:1906:3: note: 'new_size' initialized to 0
                int new_size = yyg->yy_n_chars + number_to_move + (yyg->yy_n_chars >> 1);
                ^
/project/git/Source/LexerParser/cmDependsJavaLexer.cxx:1908:50: note: Passing the value 0 via 2nd parameter 'size'
                        (void *) YY_CURRENT_BUFFER_LVALUE->yy_ch_buf, (yy_size_t) new_size , yyscanner );
                                                                      ^
/project/git/Source/LexerParser/cmDependsJavaLexer.cxx:1907:50: note: Calling 'cmDependsJava_yyrealloc'
                YY_CURRENT_BUFFER_LVALUE->yy_ch_buf = (char *) yyrealloc(
                                                               ^
/project/git/Source/LexerParser/cmDependsJavaLexer.cxx:217:19: note: expanded from macro 'yyrealloc'
#define yyrealloc cmDependsJava_yyrealloc
                  ^
/project/git/Source/LexerParser/cmDependsJavaLexer.cxx:2803:9: note: Call to 'realloc' has an allocation size of 0 bytes
        return realloc(ptr, size);
               ^

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpsydcWg.yaml -p=/project/git /project/git/Source/LexerParser/cmExprLexer.cxx
/project/git/Source/LexerParser/cmExprLexer.cxx:2215:9: warning: Call to 'realloc' has an allocation size of 0 bytes [clang-analyzer-unix.API]
        return realloc(ptr, size);
               ^
/project/git/Source/LexerParser/cmExprLexer.cxx:904:7: note: Assuming the condition is false
        if ( !yyg->yy_init )
             ^
/project/git/Source/LexerParser/cmExprLexer.cxx:904:2: note: Taking false branch
        if ( !yyg->yy_init )
        ^
/project/git/Source/LexerParser/cmExprLexer.cxx:932:2: note: Loop condition is true.  Entering loop body
        while ( /*CONSTCOND*/1 )                /* loops until end-of-file is reached */
        ^
/project/git/Source/LexerParser/cmExprLexer.cxx:949:4: note: Taking false branch
                        if ( yy_accept[yy_current_state] )
                        ^
/project/git/Source/LexerParser/cmExprLexer.cxx:954:4: note: Loop condition is false. Execution continues on line 960
                        while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )
                        ^
/project/git/Source/LexerParser/cmExprLexer.cxx:946:3: note: Loop condition is false.  Exiting loop
                do
                ^
/project/git/Source/LexerParser/cmExprLexer.cxx:967:8: note: Assuming 'yy_act' is not equal to 0
                if ( yy_act == 0 )
                     ^
/project/git/Source/LexerParser/cmExprLexer.cxx:967:3: note: Taking false branch
                if ( yy_act == 0 )
                ^
/project/git/Source/LexerParser/cmExprLexer.cxx:978:3: note: Control jumps to 'case 19:'  at line 1062
                switch ( yy_act )
                ^
/project/git/Source/LexerParser/cmExprLexer.cxx:1071:3: note: Taking false branch
                if ( YY_CURRENT_BUFFER_LVALUE->yy_buffer_status == YY_BUFFER_NEW )
                ^
/project/git/Source/LexerParser/cmExprLexer.cxx:1094:3: note: Taking false branch
                if ( yyg->yy_c_buf_p <= &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[yyg->yy_n_chars] )
                ^
/project/git/Source/LexerParser/cmExprLexer.cxx:1130:17: note: Calling 'yy_get_next_buffer'
1 warning generated.

                else switch ( yy_get_next_buffer( yyscanner ) )
                              ^
/project/git/Source/LexerParser/cmExprLexer.cxx:1207:2: note: Taking false branch
        if ( yyg->yy_c_buf_p > &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[yyg->yy_n_chars + 1] )
        ^
/project/git/Source/LexerParser/cmExprLexer.cxx:1211:2: note: Taking false branch
        if ( YY_CURRENT_BUFFER_LVALUE->yy_fill_buffer == 0 )
        ^
/project/git/Source/LexerParser/cmExprLexer.cxx:1235:15: note: Assuming 'i' is >= 'number_to_move'
        for ( i = 0; i < number_to_move; ++i )
                     ^
/project/git/Source/LexerParser/cmExprLexer.cxx:1235:2: note: Loop condition is false. Execution continues on line 1238
        for ( i = 0; i < number_to_move; ++i )
        ^
/project/git/Source/LexerParser/cmExprLexer.cxx:1238:2: note: Taking true branch
        if ( YY_CURRENT_BUFFER_LVALUE->yy_buffer_status == YY_BUFFER_EOF_PENDING )
        ^
/project/git/Source/LexerParser/cmExprLexer.cxx:1297:2: note: Taking true branch
        if ( yyg->yy_n_chars == 0 )
        ^
/project/git/Source/LexerParser/cmExprLexer.cxx:1299:8: note: Assuming 'number_to_move' is equal to YY_MORE_ADJ
                if ( number_to_move == YY_MORE_ADJ )
                     ^
/project/git/Source/LexerParser/cmExprLexer.cxx:1299:3: note: Taking true branch
                if ( number_to_move == YY_MORE_ADJ )
                ^
/project/git/Source/LexerParser/cmExprLexer.cxx:1316:6: note: Assuming the condition is true
        if ((yyg->yy_n_chars + number_to_move) > YY_CURRENT_BUFFER_LVALUE->yy_buf_size) {
            ^
/project/git/Source/LexerParser/cmExprLexer.cxx:1316:2: note: Taking true branch
        if ((yyg->yy_n_chars + number_to_move) > YY_CURRENT_BUFFER_LVALUE->yy_buf_size) {
        ^
/project/git/Source/LexerParser/cmExprLexer.cxx:1318:3: note: 'new_size' initialized to 0
                int new_size = yyg->yy_n_chars + number_to_move + (yyg->yy_n_chars >> 1);
                ^
/project/git/Source/LexerParser/cmExprLexer.cxx:1320:50: note: Passing the value 0 via 2nd parameter 'size'
                        (void *) YY_CURRENT_BUFFER_LVALUE->yy_ch_buf, (yy_size_t) new_size , yyscanner );
                                                                      ^
/project/git/Source/LexerParser/cmExprLexer.cxx:1319:50: note: Calling 'cmExpr_yyrealloc'
                YY_CURRENT_BUFFER_LVALUE->yy_ch_buf = (char *) yyrealloc(
                                                               ^
/project/git/Source/LexerParser/cmExprLexer.cxx:217:19: note: expanded from macro 'yyrealloc'
#define yyrealloc cmExpr_yyrealloc
                  ^
/project/git/Source/LexerParser/cmExprLexer.cxx:2215:9: note: Call to 'realloc' has an allocation size of 0 bytes
        return realloc(ptr, size);
               ^

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpxKf9gy.yaml -p=/project/git /project/git/Source/cmCommandArgumentParserHelper.cxx
/project/git/Source/cmCommandArgumentParserHelper.cxx:46:3: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
  strcpy(stVal, str.c_str());
  ^
/project/git/Source/cmCommandArgumentParserHelper.cxx:46:3: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
/project/git/Source/cmCommandArgumentParserHelper.cxx:158:3: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
  strcpy(out, in1);
  ^
3 warnings generated.

/project/git/Source/cmCommandArgumentParserHelper.cxx:158:3: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
/project/git/Source/cmCommandArgumentParserHelper.cxx:159:3: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
  strcat(out, in2);
  ^
/project/git/Source/cmCommandArgumentParserHelper.cxx:159:3: note: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmph1F5d5.yaml -p=/project/git /project/git/Source/LexerParser/cmListFileLexer.c
/project/git/Source/LexerParser/cmListFileLexer.c:2542:9: warning: Call to 'realloc' has an allocation size of 0 bytes [clang-analyzer-unix.API]
        return realloc(ptr, size);
               ^
/project/git/Source/LexerParser/cmListFileLexer.c:1039:7: note: Assuming the condition is false
        if ( !yyg->yy_init )
             ^
/project/git/Source/LexerParser/cmListFileLexer.c:1039:2: note: Taking false branch
        if ( !yyg->yy_init )
        ^
/project/git/Source/LexerParser/cmListFileLexer.c:1067:2: note: Loop condition is true.  Entering loop body
        while ( /*CONSTCOND*/1 )                /* loops until end-of-file is reached */
        ^
/project/git/Source/LexerParser/cmListFileLexer.c:1084:4: note: Taking true branch
                        if ( yy_accept[yy_current_state] )
                        ^
/project/git/Source/LexerParser/cmListFileLexer.c:1089:4: note: Loop condition is false. Execution continues on line 1095
                        while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )
                        ^
/project/git/Source/LexerParser/cmListFileLexer.c:1081:3: note: Loop condition is false.  Exiting loop
                do
                ^
/project/git/Source/LexerParser/cmListFileLexer.c:1102:8: note: Assuming 'yy_act' is not equal to 0
                if ( yy_act == 0 )
                     ^
/project/git/Source/LexerParser/cmListFileLexer.c:1102:3: note: Taking false branch
                if ( yy_act == 0 )
                ^
/project/git/Source/LexerParser/cmListFileLexer.c:1111:8: note: Assuming 'yy_act' is equal to YY_END_OF_BUFFER
                if ( yy_act != YY_END_OF_BUFFER && yy_rule_can_match_eol[yy_act] )
                     ^
/project/git/Source/LexerParser/cmListFileLexer.c:1111:35: note: Left side of '&&' is false
                if ( yy_act != YY_END_OF_BUFFER && yy_rule_can_match_eol[yy_act] )
                                                ^
/project/git/Source/LexerParser/cmListFileLexer.c:1125:3: note: Control jumps to 'case 25:'  at line 1378
                switch ( yy_act )
                ^
/project/git/Source/LexerParser/cmListFileLexer.c:1387:3: note: Taking false branch
                if ( YY_CURRENT_BUFFER_LVALUE->yy_buffer_status == YY_BUFFER_NEW )
                ^
/project/git/Source/LexerParser/cmListFileLexer.c:1410:3: note: Taking false branch
                if ( yyg->yy_c_buf_p <= &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[yyg->yy_n_chars] )
                ^
/project/git/Source/LexerParser/cmListFileLexer.c:1446:17: note: Calling 'yy_get_next_buffer'
                else switch ( yy_get_next_buffer( yyscanner ) )
                              ^
/project/git/Source/LexerParser/cmListFileLexer.c:1523:2: note: Taking false branch
        if ( yyg->yy_c_buf_p > &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[yyg->yy_n_chars + 1] )
        ^
/project/git/Source/LexerParser/cmListFileLexer.c:1527:2: note: Taking false branch
        if ( YY_CURRENT_BUFFER_LVALUE->yy_fill_buffer == 0 )
        ^
/project/git/Source/LexerParser/cmListFileLexer.c:1551:15: note: Assuming 'i' is >= 'number_to_move'
        for ( i = 0; i < number_to_move; ++i )
                     ^
/project/git/Source/LexerParser/cmListFileLexer.c:1551:2: note: Loop condition is false. Execution continues on line 1554
        for ( i = 0; i < number_to_move; ++i )
        ^
/project/git/Source/LexerParser/cmListFileLexer.c:1554:2: note: Taking false branch
        if ( YY_CURRENT_BUFFER_LVALUE->yy_buffer_status == YY_BUFFER_EOF_PENDING )
        ^
/project/git/Source/LexerParser/cmListFileLexer.c:1565:11: note: Assuming 'num_to_read' is > 0
                while ( num_to_read <= 0 )
                        ^
/project/git/Source/LexerParser/cmListFileLexer.c:1565:3: note: Loop condition is false. Execution continues on line 1603
                while ( num_to_read <= 0 )
                ^
/project/git/Source/LexerParser/cmListFileLexer.c:1603:8: note: Assuming 'num_to_read' is <= YY_READ_BUF_SIZE
                if ( num_to_read > YY_READ_BUF_SIZE )
                     ^
/project/git/Source/LexerParser/cmListFileLexer.c:1603:3: note: Taking false branch
                if ( num_to_read > YY_READ_BUF_SIZE )
                ^
/project/git/Source/LexerParser/cmListFileLexer.c:1613:2: note: Taking true branch
        if ( yyg->yy_n_chars == 0 )
        ^
/project/git/Source/LexerParser/cmListFileLexer.c:1615:8: note: Assuming 'number_to_move' is equal to YY_MORE_ADJ
                if ( number_to_move == YY_MORE_ADJ )
                     ^
/project/git/Source/LexerParser/cmListFileLexer.c:1615:3: note: Taking true branch
                if ( number_to_move == YY_MORE_ADJ )
                ^
/project/git/Source/LexerParser/cmListFileLexer.c:1632:6: note: Assuming the condition is true
        if ((yyg->yy_n_chars + number_to_move) > YY_CURRENT_BUFFER_LVALUE->yy_buf_size) {
            ^
/project/git/Source/LexerParser/cmListFileLexer.c:1632:2: note: Taking true branch
        if ((yyg->yy_n_chars + number_to_move) > YY_CURRENT_BUFFER_LVALUE->yy_buf_size) {
        ^
/project/git/Source/LexerParser/cmListFileLexer.c:1634:3: note: 'new_size' initialized to 0
                int new_size = yyg->yy_n_chars + number_to_move + (yyg->yy_n_chars >> 1);
                ^
/project/git/Source/LexerParser/cmListFileLexer.c:1636:50: note: Passing the value 0 via 2nd parameter 'size'
                        (void *) YY_CURRENT_BUFFER_LVALUE->yy_ch_buf, (yy_size_t) new_size , yyscanner );
                                                                      ^
/project/git/Source/LexerParser/cmListFileLexer.c:1635:50: note: Calling 'cmListFileLexer_yyrealloc'
                YY_CURRENT_BUFFER_LVALUE->yy_ch_buf = (char *) yyrealloc(
                                                               ^
/project/git/Source/LexerParser/cmListFileLexer.c:217:19: note: expanded from macro 'yyrealloc'
#define yyrealloc cmListFileLexer_yyrealloc
                  ^
/project/git/Source/LexerParser/cmListFileLexer.c:2542:9: note: Call to 'realloc' has an allocation size of 0 bytes
        return realloc(ptr, size);
               ^
/project/git/Source/LexerParser/cmListFileLexer.c:2565:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
      strcpy(lexer->token.text, text);
      ^
/project/git/Source/LexerParser/cmListFileLexer.c:2565:7: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
/project/git/Source/LexerParser/cmListFileLexer.c:2594:5: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
    strcpy(lexer->token.text + lexer->token.length, text);
    ^
4 warnings generated.

/project/git/Source/LexerParser/cmListFileLexer.c:2594:5: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119
/project/git/Source/LexerParser/cmListFileLexer.c:2776:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
      strcpy(lexer->string_buffer, text);
      ^
/project/git/Source/LexerParser/cmListFileLexer.c:2776:7: note: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpn6HCC2.yaml -p=/project/git /project/git/Source/CTest/cmCTestCoverageHandler.cxx
/project/git/Source/cmCTest.h:32:7: warning: Excessive padding in 'class cmCTest' (46 padding bytes, where 6 is optimal). 
Optimal fields order: 
StopTime, 
TimeOut, 
GlobalTimeout, 
TestLoad, 
StreamOut, 
StreamErr, 
OutputLogFile, 
InitialCommandLineArguments, 
ConfigType, 
ScheduleType, 
CurrentTag, 
SpecificTrack, 
BinaryDir, 
NotesFiles, 
BuildID, 
TestingHandlers, 
CTestConfiguration, 
CTestConfigurationOverwrites, 
PartMap, 
Definitions, 
Parts, 
RepeatTests, 
TestModel, 
MaxTestNameWidth, 
ParallelLevel, 
CompatibilityMode, 
DartVersion, 
SubmitIndex, 
OutputLogFileLastTag, 
RepeatUntilFail, 
TestProgressOutput, 
Verbose, 
ExtraVerbose, 
ProduceXML, 
LabelSummary, 
SubprojectSummary, 
UseHTTP10, 
PrintLabels, 
Failover, 
FlushTestProgressLine, 
ForceNewCTestProcess, 
RunConfigurationScript, 
ShowOnly, 
TomorrowTag, 
ParallelLevelSetInCli, 
InteractiveDebugMode, 
ShortDateFormat, 
CompressXMLFiles, 
CompressTestOutput, 
SuppressUpdatingCTestConfiguration, 
Debug, 
ShowLineNumbers, 
Quiet, 
DropSiteCDash, 
OutputTestOutputOnTestFailure, 
consider reordering the fields or adding explicit padding members [clang-analyzer-optin.performance.Padding]
class cmCTest
      ^
/project/git/Source/cmCTest.h:32:7: note: Excessive padding in 'class cmCTest' (46 padding bytes, where 6 is optimal). Optimal fields order: StopTime, TimeOut, GlobalTimeout, TestLoad, StreamOut, StreamErr, OutputLogFile, InitialCommandLineArguments, ConfigType, ScheduleType, CurrentTag, SpecificTrack, BinaryDir, NotesFiles, BuildID, TestingHandlers, CTestConfiguration, CTestConfigurationOverwrites, PartMap, Definitions, Parts, RepeatTests, TestModel, MaxTestNameWidth, ParallelLevel, CompatibilityMode, DartVersion, SubmitIndex, OutputLogFileLastTag, RepeatUntilFail, TestProgressOutput, Verbose, ExtraVerbose, ProduceXML, LabelSummary, SubprojectSummary, UseHTTP10, PrintLabels, Failover, FlushTestProgressLine, ForceNewCTestProcess, RunConfigurationScript, ShowOnly, TomorrowTag, ParallelLevelSetInCli, InteractiveDebugMode, ShortDateFormat, CompressXMLFiles, CompressTestOutput, SuppressUpdatingCTestConfiguration, Debug, ShowLineNumbers, Quiet, DropSiteCDash, OutputTestOutputOnTestFailure, consider reordering the fields or adding explicit padding members
Source/cmsys/RegularExpression.hxx:138:23: warning: The left operand of '==' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]
  if (this->startp[n] == 0) {
                      ^
/project/git/Source/CTest/cmCTestCoverageHandler.cxx:932:7: note: Assuming the condition is false
  if (gcovCommand.empty()) {
      ^
/project/git/Source/CTest/cmCTestCoverageHandler.cxx:932:3: note: Taking false branch
  if (gcovCommand.empty()) {
  ^
/project/git/Source/CTest/cmCTestCoverageHandler.cxx:942:3: note: Taking false branch
  if (gcovCommand == "codecov") {
  ^
/project/git/Source/CTest/cmCTestCoverageHandler.cxx:972:7: note: Assuming the condition is false
  if (files.empty()) {
      ^
/project/git/Source/CTest/cmCTestCoverageHandler.cxx:972:3: note: Taking false branch
  if (files.empty()) {
  ^
2 warnings generated.

/project/git/Source/CTest/cmCTestCoverageHandler.cxx:982:7: note: Assuming the condition is false
  if (!cmSystemTools::MakeDirectory(tempDir)) {
      ^
/project/git/Source/CTest/cmCTestCoverageHandler.cxx:982:3: note: Taking false branch
  if (!cmSystemTools::MakeDirectory(tempDir)) {
  ^
/project/git/Source/CTest/cmCTestCoverageHandler.cxx:1041:9: note: Assuming 'res' is not equal to 0
    if (!res) {
        ^
/project/git/Source/CTest/cmCTestCoverageHandler.cxx:1041:5: note: Taking false branch
    if (!res) {
    ^
/project/git/Source/CTest/cmCTestCoverageHandler.cxx:1049:9: note: Assuming 'retVal' is equal to 0
    if (retVal != 0) {
        ^
/project/git/Source/CTest/cmCTestCoverageHandler.cxx:1049:5: note: Taking false branch
    if (retVal != 0) {
    ^
/project/git/Source/CTest/cmCTestCoverageHandler.cxx:1076:11: note: Assuming the condition is false
      if (line.empty()) {
          ^
/project/git/Source/CTest/cmCTestCoverageHandler.cxx:1076:7: note: Taking false branch
      if (line.empty()) {
      ^
/project/git/Source/CTest/cmCTestCoverageHandler.cxx:1078:18: note: Assuming the condition is true
      } else if (st1re1.find(line)) {
                 ^
/project/git/Source/CTest/cmCTestCoverageHandler.cxx:1078:14: note: Taking true branch
      } else if (st1re1.find(line)) {
             ^
/project/git/Source/CTest/cmCTestCoverageHandler.cxx:1079:9: note: Taking true branch
        if (gcovStyle == 0) {
        ^
/project/git/Source/CTest/cmCTestCoverageHandler.cxx:1082:9: note: Taking false branch
        if (gcovStyle != 1) {
        ^
/project/git/Source/CTest/cmCTestCoverageHandler.cxx:1090:22: note: Calling 'RegularExpression::match'
        sourceFile = st1re1.match(2);
                     ^
Source/cmsys/RegularExpression.hxx:518:10: note: Calling 'RegularExpressionMatch::match'
  return regmatch.match(n);
         ^
Source/cmsys/RegularExpression.hxx:138:23: note: The left operand of '==' is a garbage value
  if (this->startp[n] == 0) {
                      ^

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpAiRQK7.yaml -p=/project/git /project/git/Source/cmCommonTargetGenerator.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpaqwnFD.yaml -p=/project/git /project/git/Source/cmCurl.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpSjfB64.yaml -p=/project/git /project/git/Source/cmCryptoHash.cxx
/project/git/Source/cmCryptoHash.cxx:52:5: warning: Potential leak of memory pointed to by field '_M_head_impl' [clang-analyzer-cplusplus.NewDeleteLeaks]
    return cm::make_unique<cmCryptoHash>(AlgoMD5);
    ^
/project/git/Source/cmCryptoHash.cxx:51:7: note: Assuming the condition is true
  if (strcmp(algo, "MD5") == 0) {
      ^
/project/git/Source/cmCryptoHash.cxx:51:3: note: Taking true branch
  if (strcmp(algo, "MD5") == 0) {
  ^
/project/git/Source/cmCryptoHash.cxx:52:12: note: Calling 'make_unique<cmCryptoHash, cmCryptoHash::Algo>'
    return cm::make_unique<cmCryptoHash>(AlgoMD5);
           ^
/usr/bin/../lib/gcc/x86_64-linux-gnu/7.3.0/../../../../include/c++/7.3.0/bits/unique_ptr.h:825:30: note: Memory is allocated
    { return unique_ptr<_Tp>(new _Tp(std::forward<_Args>(__args)...)); }
                             ^
/project/git/Source/cmCryptoHash.cxx:52:12: note: Returned allocated memory
    return cm::make_unique<cmCryptoHash>(AlgoMD5);
           ^
/project/git/Source/cmCryptoHash.cxx:52:5: note: Potential leak of memory pointed to by field '_M_head_impl'
    return cm::make_unique<cmCryptoHash>(AlgoMD5);
    ^
/project/git/Source/cmCryptoHash.cxx:55:5: warning: Potential leak of memory pointed to by field '_M_head_impl' [clang-analyzer-cplusplus.NewDeleteLeaks]
    return cm::make_unique<cmCryptoHash>(AlgoSHA1);
    ^
/project/git/Source/cmCryptoHash.cxx:51:7: note: Assuming the condition is false
  if (strcmp(algo, "MD5") == 0) {
      ^
/project/git/Source/cmCryptoHash.cxx:51:3: note: Taking false branch
  if (strcmp(algo, "MD5") == 0) {
  ^
/project/git/Source/cmCryptoHash.cxx:54:3: note: Taking true branch
  if (strcmp(algo, "SHA1") == 0) {
  ^
/project/git/Source/cmCryptoHash.cxx:55:12: note: Calling 'make_unique<cmCryptoHash, cmCryptoHash::Algo>'
    return cm::make_unique<cmCryptoHash>(AlgoSHA1);
           ^
/usr/bin/../lib/gcc/x86_64-linux-gnu/7.3.0/../../../../include/c++/7.3.0/bits/unique_ptr.h:825:30: note: Memory is allocated
    { return unique_ptr<_Tp>(new _Tp(std::forward<_Args>(__args)...)); }
                             ^
/project/git/Source/cmCryptoHash.cxx:55:12: note: Returned allocated memory
    return cm::make_unique<cmCryptoHash>(AlgoSHA1);
           ^
/project/git/Source/cmCryptoHash.cxx:55:5: note: Potential leak of memory pointed to by field '_M_head_impl'
    return cm::make_unique<cmCryptoHash>(AlgoSHA1);
    ^
/project/git/Source/cmCryptoHash.cxx:58:5: warning: Potential leak of memory pointed to by field '_M_head_impl' [clang-analyzer-cplusplus.NewDeleteLeaks]
    return cm::make_unique<cmCryptoHash>(AlgoSHA224);
    ^
/project/git/Source/cmCryptoHash.cxx:51:7: note: Assuming the condition is false
  if (strcmp(algo, "MD5") == 0) {
      ^
/project/git/Source/cmCryptoHash.cxx:51:3: note: Taking false branch
  if (strcmp(algo, "MD5") == 0) {
  ^
/project/git/Source/cmCryptoHash.cxx:54:7: note: Assuming the condition is false
  if (strcmp(algo, "SHA1") == 0) {
      ^
/project/git/Source/cmCryptoHash.cxx:54:3: note: Taking false branch
  if (strcmp(algo, "SHA1") == 0) {
  ^
/project/git/Source/cmCryptoHash.cxx:57:3: note: Taking true branch
  if (strcmp(algo, "SHA224") == 0) {
  ^
/project/git/Source/cmCryptoHash.cxx:58:12: note: Calling 'make_unique<cmCryptoHash, cmCryptoHash::Algo>'
    return cm::make_unique<cmCryptoHash>(AlgoSHA224);
           ^
/usr/bin/../lib/gcc/x86_64-linux-gnu/7.3.0/../../../../include/c++/7.3.0/bits/unique_ptr.h:825:30: note: Memory is allocated
    { return unique_ptr<_Tp>(new _Tp(std::forward<_Args>(__args)...)); }
                             ^
/project/git/Source/cmCryptoHash.cxx:58:12: note: Returned allocated memory
    return cm::make_unique<cmCryptoHash>(AlgoSHA224);
           ^
/project/git/Source/cmCryptoHash.cxx:58:5: note: Potential leak of memory pointed to by field '_M_head_impl'
    return cm::make_unique<cmCryptoHash>(AlgoSHA224);
    ^
/project/git/Source/cmCryptoHash.cxx:61:5: warning: Potential leak of memory pointed to by field '_M_head_impl' [clang-analyzer-cplusplus.NewDeleteLeaks]
    return cm::make_unique<cmCryptoHash>(AlgoSHA256);
    ^
/project/git/Source/cmCryptoHash.cxx:51:7: note: Assuming the condition is false
  if (strcmp(algo, "MD5") == 0) {
      ^
/project/git/Source/cmCryptoHash.cxx:51:3: note: Taking false branch
  if (strcmp(algo, "MD5") == 0) {
  ^
/project/git/Source/cmCryptoHash.cxx:54:7: note: Assuming the condition is false
  if (strcmp(algo, "SHA1") == 0) {
      ^
/project/git/Source/cmCryptoHash.cxx:54:3: note: Taking false branch
  if (strcmp(algo, "SHA1") == 0) {
  ^
/project/git/Source/cmCryptoHash.cxx:57:7: note: Assuming the condition is false
  if (strcmp(algo, "SHA224") == 0) {
      ^
/project/git/Source/cmCryptoHash.cxx:57:3: note: Taking false branch
  if (strcmp(algo, "SHA224") == 0) {
  ^
/project/git/Source/cmCryptoHash.cxx:60:3: note: Taking true branch
  if (strcmp(algo, "SHA256") == 0) {
  ^
/project/git/Source/cmCryptoHash.cxx:61:12: note: Calling 'make_unique<cmCryptoHash, cmCryptoHash::Algo>'
    return cm::make_unique<cmCryptoHash>(AlgoSHA256);
           ^
/usr/bin/../lib/gcc/x86_64-linux-gnu/7.3.0/../../../../include/c++/7.3.0/bits/unique_ptr.h:825:30: note: Memory is allocated
    { return unique_ptr<_Tp>(new _Tp(std::forward<_Args>(__args)...)); }
                             ^
/project/git/Source/cmCryptoHash.cxx:61:12: note: Returned allocated memory
    return cm::make_unique<cmCryptoHash>(AlgoSHA256);
           ^
/project/git/Source/cmCryptoHash.cxx:61:5: note: Potential leak of memory pointed to by field '_M_head_impl'
    return cm::make_unique<cmCryptoHash>(AlgoSHA256);
    ^
/project/git/Source/cmCryptoHash.cxx:64:5: warning: Potential leak of memory pointed to by field '_M_head_impl' [clang-analyzer-cplusplus.NewDeleteLeaks]
    return cm::make_unique<cmCryptoHash>(AlgoSHA384);
    ^
/project/git/Source/cmCryptoHash.cxx:51:7: note: Assuming the condition is false
  if (strcmp(algo, "MD5") == 0) {
      ^
/project/git/Source/cmCryptoHash.cxx:51:3: note: Taking false branch
  if (strcmp(algo, "MD5") == 0) {
  ^
/project/git/Source/cmCryptoHash.cxx:54:7: note: Assuming the condition is false
  if (strcmp(algo, "SHA1") == 0) {
      ^
/project/git/Source/cmCryptoHash.cxx:54:3: note: Taking false branch
  if (strcmp(algo, "SHA1") == 0) {
  ^
/project/git/Source/cmCryptoHash.cxx:57:7: note: Assuming the condition is false
  if (strcmp(algo, "SHA224") == 0) {
      ^
/project/git/Source/cmCryptoHash.cxx:57:3: note: Taking false branch
  if (strcmp(algo, "SHA224") == 0) {
  ^
/project/git/Source/cmCryptoHash.cxx:60:7: note: Assuming the condition is false
  if (strcmp(algo, "SHA256") == 0) {
      ^
/project/git/Source/cmCryptoHash.cxx:60:3: note: Taking false branch
  if (strcmp(algo, "SHA256") == 0) {
  ^
/project/git/Source/cmCryptoHash.cxx:63:3: note: Taking true branch
  if (strcmp(algo, "SHA384") == 0) {
  ^
/project/git/Source/cmCryptoHash.cxx:64:12: note: Calling 'make_unique<cmCryptoHash, cmCryptoHash::Algo>'
    return cm::make_unique<cmCryptoHash>(AlgoSHA384);
           ^
/usr/bin/../lib/gcc/x86_64-linux-gnu/7.3.0/../../../../include/c++/7.3.0/bits/unique_ptr.h:825:30: note: Memory is allocated
    { return unique_ptr<_Tp>(new _Tp(std::forward<_Args>(__args)...)); }
                             ^
/project/git/Source/cmCryptoHash.cxx:64:12: note: Returned allocated memory
    return cm::make_unique<cmCryptoHash>(AlgoSHA384);
           ^
/project/git/Source/cmCryptoHash.cxx:64:5: note: Potential leak of memory pointed to by field '_M_head_impl'
    return cm::make_unique<cmCryptoHash>(AlgoSHA384);
    ^
/project/git/Source/cmCryptoHash.cxx:67:5: warning: Potential leak of memory pointed to by field '_M_head_impl' [clang-analyzer-cplusplus.NewDeleteLeaks]
    return cm::make_unique<cmCryptoHash>(AlgoSHA512);
    ^
/project/git/Source/cmCryptoHash.cxx:51:7: note: Assuming the condition is false
  if (strcmp(algo, "MD5") == 0) {
      ^
/project/git/Source/cmCryptoHash.cxx:51:3: note: Taking false branch
  if (strcmp(algo, "MD5") == 0) {
  ^
/project/git/Source/cmCryptoHash.cxx:54:7: note: Assuming the condition is false
  if (strcmp(algo, "SHA1") == 0) {
      ^
/project/git/Source/cmCryptoHash.cxx:54:3: note: Taking false branch
  if (strcmp(algo, "SHA1") == 0) {
  ^
/project/git/Source/cmCryptoHash.cxx:57:7: note: Assuming the condition is false
  if (strcmp(algo, "SHA224") == 0) {
      ^
/project/git/Source/cmCryptoHash.cxx:57:3: note: Taking false branch
  if (strcmp(algo, "SHA224") == 0) {
  ^
/project/git/Source/cmCryptoHash.cxx:60:7: note: Assuming the condition is false
  if (strcmp(algo, "SHA256") == 0) {
      ^
/project/git/Source/cmCryptoHash.cxx:60:3: note: Taking false branch
  if (strcmp(algo, "SHA256") == 0) {
  ^
/project/git/Source/cmCryptoHash.cxx:63:7: note: Assuming the condition is false
  if (strcmp(algo, "SHA384") == 0) {
      ^
/project/git/Source/cmCryptoHash.cxx:63:3: note: Taking false branch
  if (strcmp(algo, "SHA384") == 0) {
  ^
/project/git/Source/cmCryptoHash.cxx:66:3: note: Taking true branch
  if (strcmp(algo, "SHA512") == 0) {
  ^
/project/git/Source/cmCryptoHash.cxx:67:12: note: Calling 'make_unique<cmCryptoHash, cmCryptoHash::Algo>'
    return cm::make_unique<cmCryptoHash>(AlgoSHA512);
           ^
/usr/bin/../lib/gcc/x86_64-linux-gnu/7.3.0/../../../../include/c++/7.3.0/bits/unique_ptr.h:825:30: note: Memory is allocated
    { return unique_ptr<_Tp>(new _Tp(std::forward<_Args>(__args)...)); }
                             ^
/project/git/Source/cmCryptoHash.cxx:67:12: note: Returned allocated memory
    return cm::make_unique<cmCryptoHash>(AlgoSHA512);
           ^
/project/git/Source/cmCryptoHash.cxx:67:5: note: Potential leak of memory pointed to by field '_M_head_impl'
    return cm::make_unique<cmCryptoHash>(AlgoSHA512);
    ^
/project/git/Source/cmCryptoHash.cxx:70:5: warning: Potential leak of memory pointed to by field '_M_head_impl' [clang-analyzer-cplusplus.NewDeleteLeaks]
    return cm::make_unique<cmCryptoHash>(AlgoSHA3_224);
    ^
/project/git/Source/cmCryptoHash.cxx:51:7: note: Assuming the condition is false
  if (strcmp(algo, "MD5") == 0) {
      ^
/project/git/Source/cmCryptoHash.cxx:51:3: note: Taking false branch
  if (strcmp(algo, "MD5") == 0) {
  ^
/project/git/Source/cmCryptoHash.cxx:54:7: note: Assuming the condition is false
  if (strcmp(algo, "SHA1") == 0) {
      ^
/project/git/Source/cmCryptoHash.cxx:54:3: note: Taking false branch
  if (strcmp(algo, "SHA1") == 0) {
  ^
/project/git/Source/cmCryptoHash.cxx:57:7: note: Assuming the condition is false
  if (strcmp(algo, "SHA224") == 0) {
      ^
/project/git/Source/cmCryptoHash.cxx:57:3: note: Taking false branch
  if (strcmp(algo, "SHA224") == 0) {
  ^
/project/git/Source/cmCryptoHash.cxx:60:7: note: Assuming the condition is false
  if (strcmp(algo, "SHA256") == 0) {
      ^
/project/git/Source/cmCryptoHash.cxx:60:3: note: Taking false branch
  if (strcmp(algo, "SHA256") == 0) {
  ^
/project/git/Source/cmCryptoHash.cxx:63:7: note: Assuming the condition is false
  if (strcmp(algo, "SHA384") == 0) {
      ^
/project/git/Source/cmCryptoHash.cxx:63:3: note: Taking false branch
  if (strcmp(algo, "SHA384") == 0) {
  ^
/project/git/Source/cmCryptoHash.cxx:66:7: note: Assuming the condition is false
  if (strcmp(algo, "SHA512") == 0) {
      ^
/project/git/Source/cmCryptoHash.cxx:66:3: note: Taking false branch
  if (strcmp(algo, "SHA512") == 0) {
  ^
/project/git/Source/cmCryptoHash.cxx:69:3: note: Taking true branch
  if (strcmp(algo, "SHA3_224") == 0) {
  ^
/project/git/Source/cmCryptoHash.cxx:70:12: note: Calling 'make_unique<cmCryptoHash, cmCryptoHash::Algo>'
    return cm::make_unique<cmCryptoHash>(AlgoSHA3_224);
           ^
/usr/bin/../lib/gcc/x86_64-linux-gnu/7.3.0/../../../../include/c++/7.3.0/bits/unique_ptr.h:825:30: note: Memory is allocated
    { return unique_ptr<_Tp>(new _Tp(std::forward<_Args>(__args)...)); }
                             ^
/project/git/Source/cmCryptoHash.cxx:70:12: note: Returned allocated memory
    return cm::make_unique<cmCryptoHash>(AlgoSHA3_224);
           ^
/project/git/Source/cmCryptoHash.cxx:70:5: note: Potential leak of memory pointed to by field '_M_head_impl'
    return cm::make_unique<cmCryptoHash>(AlgoSHA3_224);
    ^
/project/git/Source/cmCryptoHash.cxx:73:5: warning: Potential leak of memory pointed to by field '_M_head_impl' [clang-analyzer-cplusplus.NewDeleteLeaks]
    return cm::make_unique<cmCryptoHash>(AlgoSHA3_256);
    ^
/project/git/Source/cmCryptoHash.cxx:51:7: note: Assuming the condition is false
  if (strcmp(algo, "MD5") == 0) {
      ^
/project/git/Source/cmCryptoHash.cxx:51:3: note: Taking false branch
  if (strcmp(algo, "MD5") == 0) {
  ^
/project/git/Source/cmCryptoHash.cxx:54:7: note: Assuming the condition is false
  if (strcmp(algo, "SHA1") == 0) {
      ^
/project/git/Source/cmCryptoHash.cxx:54:3: note: Taking false branch
  if (strcmp(algo, "SHA1") == 0) {
  ^
/project/git/Source/cmCryptoHash.cxx:57:7: note: Assuming the condition is false
  if (strcmp(algo, "SHA224") == 0) {
      ^
/project/git/Source/cmCryptoHash.cxx:57:3: note: Taking false branch
  if (strcmp(algo, "SHA224") == 0) {
  ^
/project/git/Source/cmCryptoHash.cxx:60:7: note: Assuming the condition is false
  if (strcmp(algo, "SHA256") == 0) {
      ^
/project/git/Source/cmCryptoHash.cxx:60:3: note: Taking false branch
  if (strcmp(algo, "SHA256") == 0) {
  ^
/project/git/Source/cmCryptoHash.cxx:63:7: note: Assuming the condition is false
  if (strcmp(algo, "SHA384") == 0) {
      ^
/project/git/Source/cmCryptoHash.cxx:63:3: note: Taking false branch
  if (strcmp(algo, "SHA384") == 0) {
  ^
/project/git/Source/cmCryptoHash.cxx:66:7: note: Assuming the condition is false
  if (strcmp(algo, "SHA512") == 0) {
      ^
/project/git/Source/cmCryptoHash.cxx:66:3: note: Taking false branch
  if (strcmp(algo, "SHA512") == 0) {
  ^
/project/git/Source/cmCryptoHash.cxx:69:7: note: Assuming the condition is false
  if (strcmp(algo, "SHA3_224") == 0) {
      ^
/project/git/Source/cmCryptoHash.cxx:69:3: note: Taking false branch
  if (strcmp(algo, "SHA3_224") == 0) {
  ^
/project/git/Source/cmCryptoHash.cxx:72:3: note: Taking true branch
  if (strcmp(algo, "SHA3_256") == 0) {
  ^
/project/git/Source/cmCryptoHash.cxx:73:12: note: Calling 'make_unique<cmCryptoHash, cmCryptoHash::Algo>'
    return cm::make_unique<cmCryptoHash>(AlgoSHA3_256);
           ^
/usr/bin/../lib/gcc/x86_64-linux-gnu/7.3.0/../../../../include/c++/7.3.0/bits/unique_ptr.h:825:30: note: Memory is allocated
    { return unique_ptr<_Tp>(new _Tp(std::forward<_Args>(__args)...)); }
                             ^
/project/git/Source/cmCryptoHash.cxx:73:12: note: Returned allocated memory
    return cm::make_unique<cmCryptoHash>(AlgoSHA3_256);
           ^
/project/git/Source/cmCryptoHash.cxx:73:5: note: Potential leak of memory pointed to by field '_M_head_impl'
    return cm::make_unique<cmCryptoHash>(AlgoSHA3_256);
    ^
/project/git/Source/cmCryptoHash.cxx:76:5: warning: Potential leak of memory pointed to by field '_M_head_impl' [clang-analyzer-cplusplus.NewDeleteLeaks]
    return cm::make_unique<cmCryptoHash>(AlgoSHA3_384);
    ^
/project/git/Source/cmCryptoHash.cxx:51:7: note: Assuming the condition is false
  if (strcmp(algo, "MD5") == 0) {
      ^
/project/git/Source/cmCryptoHash.cxx:51:3: note: Taking false branch
  if (strcmp(algo, "MD5") == 0) {
  ^
/project/git/Source/cmCryptoHash.cxx:54:7: note: Assuming the condition is false
  if (strcmp(algo, "SHA1") == 0) {
      ^
/project/git/Source/cmCryptoHash.cxx:54:3: note: Taking false branch
  if (strcmp(algo, "SHA1") == 0) {
  ^
/project/git/Source/cmCryptoHash.cxx:57:7: note: Assuming the condition is false
  if (strcmp(algo, "SHA224") == 0) {
      ^
/project/git/Source/cmCryptoHash.cxx:57:3: note: Taking false branch
  if (strcmp(algo, "SHA224") == 0) {
  ^
/project/git/Source/cmCryptoHash.cxx:60:7: note: Assuming the condition is false
  if (strcmp(algo, "SHA256") == 0) {
      ^
/project/git/Source/cmCryptoHash.cxx:60:3: note: Taking false branch
  if (strcmp(algo, "SHA256") == 0) {
  ^
/project/git/Source/cmCryptoHash.cxx:63:7: note: Assuming the condition is false
  if (strcmp(algo, "SHA384") == 0) {
      ^
/project/git/Source/cmCryptoHash.cxx:63:3: note: Taking false branch
  if (strcmp(algo, "SHA384") == 0) {
  ^
/project/git/Source/cmCryptoHash.cxx:66:7: note: Assuming the condition is false
  if (strcmp(algo, "SHA512") == 0) {
      ^
/project/git/Source/cmCryptoHash.cxx:66:3: note: Taking false branch
  if (strcmp(algo, "SHA512") == 0) {
  ^
/project/git/Source/cmCryptoHash.cxx:69:7: note: Assuming the condition is false
  if (strcmp(algo, "SHA3_224") == 0) {
      ^
/project/git/Source/cmCryptoHash.cxx:69:3: note: Taking false branch
  if (strcmp(algo, "SHA3_224") == 0) {
  ^
/project/git/Source/cmCryptoHash.cxx:72:7: note: Assuming the condition is false
  if (strcmp(algo, "SHA3_256") == 0) {
      ^
/project/git/Source/cmCryptoHash.cxx:72:3: note: Taking false branch
  if (strcmp(algo, "SHA3_256") == 0) {
  ^
/project/git/Source/cmCryptoHash.cxx:75:3: note: Taking true branch
  if (strcmp(algo, "SHA3_384") == 0) {
  ^
/project/git/Source/cmCryptoHash.cxx:76:12: note: Calling 'make_unique<cmCryptoHash, cmCryptoHash::Algo>'
    return cm::make_unique<cmCryptoHash>(AlgoSHA3_384);
           ^
/usr/bin/../lib/gcc/x86_64-linux-gnu/7.3.0/../../../../include/c++/7.3.0/bits/unique_ptr.h:825:30: note: Memory is allocated
    { return unique_ptr<_Tp>(new _Tp(std::forward<_Args>(__args)...)); }
                             ^
/project/git/Source/cmCryptoHash.cxx:76:12: note: Returned allocated memory
    return cm::make_unique<cmCryptoHash>(AlgoSHA3_384);
           ^
/project/git/Source/cmCryptoHash.cxx:76:5: note: Potential leak of memory pointed to by field '_M_head_impl'
    return cm::make_unique<cmCryptoHash>(AlgoSHA3_384);
    ^
10 warnings generated.

/project/git/Source/cmCryptoHash.cxx:79:5: warning: Potential leak of memory pointed to by field '_M_head_impl' [clang-analyzer-cplusplus.NewDeleteLeaks]
    return cm::make_unique<cmCryptoHash>(AlgoSHA3_512);
    ^
/project/git/Source/cmCryptoHash.cxx:51:7: note: Assuming the condition is false
  if (strcmp(algo, "MD5") == 0) {
      ^
/project/git/Source/cmCryptoHash.cxx:51:3: note: Taking false branch
  if (strcmp(algo, "MD5") == 0) {
  ^
/project/git/Source/cmCryptoHash.cxx:54:7: note: Assuming the condition is false
  if (strcmp(algo, "SHA1") == 0) {
      ^
/project/git/Source/cmCryptoHash.cxx:54:3: note: Taking false branch
  if (strcmp(algo, "SHA1") == 0) {
  ^
/project/git/Source/cmCryptoHash.cxx:57:7: note: Assuming the condition is false
  if (strcmp(algo, "SHA224") == 0) {
      ^
/project/git/Source/cmCryptoHash.cxx:57:3: note: Taking false branch
  if (strcmp(algo, "SHA224") == 0) {
  ^
/project/git/Source/cmCryptoHash.cxx:60:7: note: Assuming the condition is false
  if (strcmp(algo, "SHA256") == 0) {
      ^
/project/git/Source/cmCryptoHash.cxx:60:3: note: Taking false branch
  if (strcmp(algo, "SHA256") == 0) {
  ^
/project/git/Source/cmCryptoHash.cxx:63:7: note: Assuming the condition is false
  if (strcmp(algo, "SHA384") == 0) {
      ^
/project/git/Source/cmCryptoHash.cxx:63:3: note: Taking false branch
  if (strcmp(algo, "SHA384") == 0) {
  ^
/project/git/Source/cmCryptoHash.cxx:66:7: note: Assuming the condition is false
  if (strcmp(algo, "SHA512") == 0) {
      ^
/project/git/Source/cmCryptoHash.cxx:66:3: note: Taking false branch
  if (strcmp(algo, "SHA512") == 0) {
  ^
/project/git/Source/cmCryptoHash.cxx:69:7: note: Assuming the condition is false
  if (strcmp(algo, "SHA3_224") == 0) {
      ^
/project/git/Source/cmCryptoHash.cxx:69:3: note: Taking false branch
  if (strcmp(algo, "SHA3_224") == 0) {
  ^
/project/git/Source/cmCryptoHash.cxx:72:7: note: Assuming the condition is false
  if (strcmp(algo, "SHA3_256") == 0) {
      ^
/project/git/Source/cmCryptoHash.cxx:72:3: note: Taking false branch
  if (strcmp(algo, "SHA3_256") == 0) {
  ^
/project/git/Source/cmCryptoHash.cxx:75:7: note: Assuming the condition is false
  if (strcmp(algo, "SHA3_384") == 0) {
      ^
/project/git/Source/cmCryptoHash.cxx:75:3: note: Taking false branch
  if (strcmp(algo, "SHA3_384") == 0) {
  ^
/project/git/Source/cmCryptoHash.cxx:78:3: note: Taking true branch
  if (strcmp(algo, "SHA3_512") == 0) {
  ^
/project/git/Source/cmCryptoHash.cxx:79:12: note: Calling 'make_unique<cmCryptoHash, cmCryptoHash::Algo>'
    return cm::make_unique<cmCryptoHash>(AlgoSHA3_512);
           ^
/usr/bin/../lib/gcc/x86_64-linux-gnu/7.3.0/../../../../include/c++/7.3.0/bits/unique_ptr.h:825:30: note: Memory is allocated
    { return unique_ptr<_Tp>(new _Tp(std::forward<_Args>(__args)...)); }
                             ^
/project/git/Source/cmCryptoHash.cxx:79:12: note: Returned allocated memory
    return cm::make_unique<cmCryptoHash>(AlgoSHA3_512);
           ^
/project/git/Source/cmCryptoHash.cxx:79:5: note: Potential leak of memory pointed to by field '_M_head_impl'
    return cm::make_unique<cmCryptoHash>(AlgoSHA3_512);
    ^

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpWg2lb_.yaml -p=/project/git /project/git/Source/cmCPackPropertiesGenerator.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpmYJ0d_.yaml -p=/project/git /project/git/Source/cmCustomCommand.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpSUty7r.yaml -p=/project/git /project/git/Source/cmDefinitions.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpSkOo0s.yaml -p=/project/git /project/git/Source/cmArchiveWrite.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmp0Fl6Lb.yaml -p=/project/git /project/git/Source/cmDependsJava.cxx

1 warning generated.

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpxQk9OO.yaml -p=/project/git /project/git/Source/cmCustomCommandGenerator.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmp9dz6yC.yaml -p=/project/git /project/git/Source/CTest/cmCTestMemCheckHandler.cxx
/project/git/Source/cmCTest.h:32:7: warning: Excessive padding in 'class cmCTest' (46 padding bytes, where 6 is optimal). 
Optimal fields order: 
StopTime, 
TimeOut, 
GlobalTimeout, 
TestLoad, 
StreamOut, 
StreamErr, 
OutputLogFile, 
InitialCommandLineArguments, 
ConfigType, 
ScheduleType, 
CurrentTag, 
SpecificTrack, 
BinaryDir, 
NotesFiles, 
BuildID, 
TestingHandlers, 
CTestConfiguration, 
CTestConfigurationOverwrites, 
PartMap, 
Definitions, 
Parts, 
RepeatTests, 
TestModel, 
MaxTestNameWidth, 
ParallelLevel, 
CompatibilityMode, 
DartVersion, 
SubmitIndex, 
OutputLogFileLastTag, 
RepeatUntilFail, 
TestProgressOutput, 
Verbose, 
ExtraVerbose, 
ProduceXML, 
LabelSummary, 
SubprojectSummary, 
UseHTTP10, 
PrintLabels, 
Failover, 
FlushTestProgressLine, 
ForceNewCTestProcess, 
RunConfigurationScript, 
ShowOnly, 
TomorrowTag, 
ParallelLevelSetInCli, 
InteractiveDebugMode, 
ShortDateFormat, 
CompressXMLFiles, 
CompressTestOutput, 
SuppressUpdatingCTestConfiguration, 
Debug, 
ShowLineNumbers, 
Quiet, 
DropSiteCDash, 
OutputTestOutputOnTestFailure, 
consider reordering the fields or adding explicit padding members [clang-analyzer-optin.performance.Padding]
class cmCTest
      ^
/project/git/Source/cmCTest.h:32:7: note: Excessive padding in 'class cmCTest' (46 padding bytes, where 6 is optimal). Optimal fields order: StopTime, TimeOut, GlobalTimeout, TestLoad, StreamOut, StreamErr, OutputLogFile, InitialCommandLineArguments, ConfigType, ScheduleType, CurrentTag, SpecificTrack, BinaryDir, NotesFiles, BuildID, TestingHandlers, CTestConfiguration, CTestConfigurationOverwrites, PartMap, Definitions, Parts, RepeatTests, TestModel, MaxTestNameWidth, ParallelLevel, CompatibilityMode, DartVersion, SubmitIndex, OutputLogFileLastTag, RepeatUntilFail, TestProgressOutput, Verbose, ExtraVerbose, ProduceXML, LabelSummary, SubprojectSummary, UseHTTP10, PrintLabels, Failover, FlushTestProgressLine, ForceNewCTestProcess, RunConfigurationScript, ShowOnly, TomorrowTag, ParallelLevelSetInCli, InteractiveDebugMode, ShortDateFormat, CompressXMLFiles, CompressTestOutput, SuppressUpdatingCTestConfiguration, Debug, ShowLineNumbers, Quiet, DropSiteCDash, OutputTestOutputOnTestFailure, consider reordering the fields or adding explicit padding members

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmp1eZdaD.yaml -p=/project/git /project/git/Source/cmDocumentationSection.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpLweNJP.yaml -p=/project/git /project/git/Source/cmDynamicLoader.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpKBm47L.yaml -p=/project/git /project/git/Source/cmComputeComponentGraph.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpOlO9Lb.yaml -p=/project/git /project/git/Source/cmExprParserHelper.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpYXJMBU.yaml -p=/project/git /project/git/Source/cmComputeLinkDepends.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpwlU8I2.yaml -p=/project/git /project/git/Source/cmDepends.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpFgswVN.yaml -p=/project/git /project/git/Source/cmDocumentationFormatter.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmp351LE5.yaml -p=/project/git /project/git/Source/cmDependsJavaParserHelper.cxx
3 warnings generated.

/project/git/Source/cmDependsJavaParserHelper.cxx:125:5: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
    strcat(*out, in1);
    ^
/project/git/Source/cmDependsJavaParserHelper.cxx:125:5: note: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119
/project/git/Source/cmDependsJavaParserHelper.cxx:128:5: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
    strcat(*out, sep);
    ^
/project/git/Source/cmDependsJavaParserHelper.cxx:128:5: note: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119
/project/git/Source/cmDependsJavaParserHelper.cxx:131:5: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]
    strcat(*out, *in2);
    ^
/project/git/Source/cmDependsJavaParserHelper.cxx:131:5: note: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpsjZTe0.yaml -p=/project/git /project/git/Source/cmComputeTargetDepends.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmppiDu3S.yaml -p=/project/git /project/git/Source/CTest/cmCTestMultiProcessHandler.cxx
/project/git/Source/cmCTest.h:32:7: warning: Excessive padding in 'class cmCTest' (46 padding bytes, where 6 is optimal). 
Optimal fields order: 
StopTime, 
TimeOut, 
GlobalTimeout, 
TestLoad, 
StreamOut, 
StreamErr, 
OutputLogFile, 
InitialCommandLineArguments, 
ConfigType, 
ScheduleType, 
CurrentTag, 
SpecificTrack, 
BinaryDir, 
NotesFiles, 
BuildID, 
TestingHandlers, 
CTestConfiguration, 
CTestConfigurationOverwrites, 
PartMap, 
Definitions, 
Parts, 
RepeatTests, 
TestModel, 
MaxTestNameWidth, 
ParallelLevel, 
CompatibilityMode, 
DartVersion, 
SubmitIndex, 
OutputLogFileLastTag, 
RepeatUntilFail, 
TestProgressOutput, 
Verbose, 
ExtraVerbose, 
ProduceXML, 
LabelSummary, 
SubprojectSummary, 
UseHTTP10, 
PrintLabels, 
Failover, 
FlushTestProgressLine, 
ForceNewCTestProcess, 
RunConfigurationScript, 
ShowOnly, 
TomorrowTag, 
ParallelLevelSetInCli, 
InteractiveDebugMode, 
ShortDateFormat, 
CompressXMLFiles, 
CompressTestOutput, 
SuppressUpdatingCTestConfiguration, 
Debug, 
ShowLineNumbers, 
Quiet, 
DropSiteCDash, 
OutputTestOutputOnTestFailure, 
consider reordering the fields or adding explicit padding members [clang-analyzer-optin.performance.Padding]
class cmCTest
      ^
1 warning generated.

/project/git/Source/cmCTest.h:32:7: note: Excessive padding in 'class cmCTest' (46 padding bytes, where 6 is optimal). Optimal fields order: StopTime, TimeOut, GlobalTimeout, TestLoad, StreamOut, StreamErr, OutputLogFile, InitialCommandLineArguments, ConfigType, ScheduleType, CurrentTag, SpecificTrack, BinaryDir, NotesFiles, BuildID, TestingHandlers, CTestConfiguration, CTestConfigurationOverwrites, PartMap, Definitions, Parts, RepeatTests, TestModel, MaxTestNameWidth, ParallelLevel, CompatibilityMode, DartVersion, SubmitIndex, OutputLogFileLastTag, RepeatUntilFail, TestProgressOutput, Verbose, ExtraVerbose, ProduceXML, LabelSummary, SubprojectSummary, UseHTTP10, PrintLabels, Failover, FlushTestProgressLine, ForceNewCTestProcess, RunConfigurationScript, ShowOnly, TomorrowTag, ParallelLevelSetInCli, InteractiveDebugMode, ShortDateFormat, CompressXMLFiles, CompressTestOutput, SuppressUpdatingCTestConfiguration, Debug, ShowLineNumbers, Quiet, DropSiteCDash, OutputTestOutputOnTestFailure, consider reordering the fields or adding explicit padding members

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpjQ5g8y.yaml -p=/project/git /project/git/Source/cmExportInstallAndroidMKGenerator.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpTu_apS.yaml -p=/project/git /project/git/Source/cmCacheManager.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpkQbCzL.yaml -p=/project/git /project/git/Source/cmExportSet.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpyVMahi.yaml -p=/project/git /project/git/Source/cmExportSetMap.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpohQDZG.yaml -p=/project/git /project/git/Source/cmDocumentation.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmp6WaXim.yaml -p=/project/git /project/git/Source/cmExternalMakefileProjectGenerator.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpInJItG.yaml -p=/project/git /project/git/Source/cmComputeLinkInformation.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpJT1Dl0.yaml -p=/project/git /project/git/Source/cmDependsC.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmp98AJdS.yaml -p=/project/git /project/git/Source/cmDependsFortran.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmp4yBSuO.yaml -p=/project/git /project/git/Source/cmExportBuildAndroidMKGenerator.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpDhN5Nk.yaml -p=/project/git /project/git/Source/cmFileLockResult.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpWcgZ1X.yaml -p=/project/git /project/git/Source/cmFileLock.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpNcGbU9.yaml -p=/project/git /project/git/Source/cmELF.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpSQ3R4v.yaml -p=/project/git /project/git/Source/cmFileLockPool.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmprygkcL.yaml -p=/project/git /project/git/Source/cmFileTimeComparison.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmp6Xtkwy.yaml -p=/project/git /project/git/Source/cmFSPermissions.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmp_7beue.yaml -p=/project/git /project/git/Source/cmFilePathChecksum.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpOhXiRE.yaml -p=/project/git /project/git/Source/cmFortranParserImpl.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpgloZ9A.yaml -p=/project/git /project/git/Source/cmGeneratedFileStream.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpNJc5JU.yaml -p=/project/git /project/git/Source/cmGeneratorExpressionContext.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmp0ulCUP.yaml -p=/project/git /project/git/Source/cmGeneratorExpressionLexer.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpZQihtF.yaml -p=/project/git /project/git/Source/cmExportInstallFileGenerator.cxx

2 warnings generated.

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpKqkmWq.yaml -p=/project/git /project/git/Source/cmExportTryCompileFileGenerator.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmphxdm5v.yaml -p=/project/git /project/git/Source/CTest/cmCTestSubmitHandler.cxx
/project/git/Source/CTest/cmCTestSubmitHandler.cxx:136:3: warning: Call to virtual function during construction [clang-analyzer-optin.cplusplus.VirtualCall]
  this->Initialize();
  ^
/project/git/Source/CTest/cmCTestSubmitHandler.cxx:136:3: note: This constructor of an object of type 'cmCTestSubmitHandler' has not returned when the virtual method was called
/project/git/Source/CTest/cmCTestSubmitHandler.cxx:136:3: note: Call to virtual function during construction
/project/git/Source/cmCTest.h:32:7: warning: Excessive padding in 'class cmCTest' (46 padding bytes, where 6 is optimal). 
Optimal fields order: 
StopTime, 
TimeOut, 
GlobalTimeout, 
TestLoad, 
StreamOut, 
StreamErr, 
OutputLogFile, 
InitialCommandLineArguments, 
ConfigType, 
ScheduleType, 
CurrentTag, 
SpecificTrack, 
BinaryDir, 
NotesFiles, 
BuildID, 
TestingHandlers, 
CTestConfiguration, 
CTestConfigurationOverwrites, 
PartMap, 
Definitions, 
Parts, 
RepeatTests, 
TestModel, 
MaxTestNameWidth, 
ParallelLevel, 
CompatibilityMode, 
DartVersion, 
SubmitIndex, 
OutputLogFileLastTag, 
RepeatUntilFail, 
TestProgressOutput, 
Verbose, 
ExtraVerbose, 
ProduceXML, 
LabelSummary, 
SubprojectSummary, 
UseHTTP10, 
PrintLabels, 
Failover, 
FlushTestProgressLine, 
ForceNewCTestProcess, 
RunConfigurationScript, 
ShowOnly, 
TomorrowTag, 
ParallelLevelSetInCli, 
InteractiveDebugMode, 
ShortDateFormat, 
CompressXMLFiles, 
CompressTestOutput, 
SuppressUpdatingCTestConfiguration, 
Debug, 
ShowLineNumbers, 
Quiet, 
DropSiteCDash, 
OutputTestOutputOnTestFailure, 
consider reordering the fields or adding explicit padding members [clang-analyzer-optin.performance.Padding]
class cmCTest
      ^
/project/git/Source/cmCTest.h:32:7: note: Excessive padding in 'class cmCTest' (46 padding bytes, where 6 is optimal). Optimal fields order: StopTime, TimeOut, GlobalTimeout, TestLoad, StreamOut, StreamErr, OutputLogFile, InitialCommandLineArguments, ConfigType, ScheduleType, CurrentTag, SpecificTrack, BinaryDir, NotesFiles, BuildID, TestingHandlers, CTestConfiguration, CTestConfigurationOverwrites, PartMap, Definitions, Parts, RepeatTests, TestModel, MaxTestNameWidth, ParallelLevel, CompatibilityMode, DartVersion, SubmitIndex, OutputLogFileLastTag, RepeatUntilFail, TestProgressOutput, Verbose, ExtraVerbose, ProduceXML, LabelSummary, SubprojectSummary, UseHTTP10, PrintLabels, Failover, FlushTestProgressLine, ForceNewCTestProcess, RunConfigurationScript, ShowOnly, TomorrowTag, ParallelLevelSetInCli, InteractiveDebugMode, ShortDateFormat, CompressXMLFiles, CompressTestOutput, SuppressUpdatingCTestConfiguration, Debug, ShowLineNumbers, Quiet, DropSiteCDash, OutputTestOutputOnTestFailure, consider reordering the fields or adding explicit padding members

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmphi18Cl.yaml -p=/project/git /project/git/Source/cmGeneratorExpressionDAGChecker.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpkmH1Kg.yaml -p=/project/git /project/git/Source/cmExtraKateGenerator.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpwgAWrB.yaml -p=/project/git /project/git/Source/cmExtraCodeBlocksGenerator.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpGVO3jv.yaml -p=/project/git /project/git/Source/cmExtraCodeLiteGenerator.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpgKp0vK.yaml -p=/project/git /project/git/Source/cmGlobalCommonGenerator.cxx

1 warning generated.

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpgbiQXH.yaml -p=/project/git /project/git/Source/cmCTest.cxx
/project/git/Source/cmCTest.h:32:7: warning: Excessive padding in 'class cmCTest' (46 padding bytes, where 6 is optimal). 
Optimal fields order: 
StopTime, 
TimeOut, 
GlobalTimeout, 
TestLoad, 
StreamOut, 
StreamErr, 
OutputLogFile, 
InitialCommandLineArguments, 
ConfigType, 
ScheduleType, 
CurrentTag, 
SpecificTrack, 
BinaryDir, 
NotesFiles, 
BuildID, 
TestingHandlers, 
CTestConfiguration, 
CTestConfigurationOverwrites, 
PartMap, 
Definitions, 
Parts, 
RepeatTests, 
TestModel, 
MaxTestNameWidth, 
ParallelLevel, 
CompatibilityMode, 
DartVersion, 
SubmitIndex, 
OutputLogFileLastTag, 
RepeatUntilFail, 
TestProgressOutput, 
Verbose, 
ExtraVerbose, 
ProduceXML, 
LabelSummary, 
SubprojectSummary, 
UseHTTP10, 
PrintLabels, 
Failover, 
FlushTestProgressLine, 
ForceNewCTestProcess, 
RunConfigurationScript, 
ShowOnly, 
TomorrowTag, 
ParallelLevelSetInCli, 
InteractiveDebugMode, 
ShortDateFormat, 
CompressXMLFiles, 
CompressTestOutput, 
SuppressUpdatingCTestConfiguration, 
Debug, 
ShowLineNumbers, 
Quiet, 
DropSiteCDash, 
OutputTestOutputOnTestFailure, 
consider reordering the fields or adding explicit padding members [clang-analyzer-optin.performance.Padding]
class cmCTest
      ^
/project/git/Source/cmCTest.h:32:7: note: Excessive padding in 'class cmCTest' (46 padding bytes, where 6 is optimal). Optimal fields order: StopTime, TimeOut, GlobalTimeout, TestLoad, StreamOut, StreamErr, OutputLogFile, InitialCommandLineArguments, ConfigType, ScheduleType, CurrentTag, SpecificTrack, BinaryDir, NotesFiles, BuildID, TestingHandlers, CTestConfiguration, CTestConfigurationOverwrites, PartMap, Definitions, Parts, RepeatTests, TestModel, MaxTestNameWidth, ParallelLevel, CompatibilityMode, DartVersion, SubmitIndex, OutputLogFileLastTag, RepeatUntilFail, TestProgressOutput, Verbose, ExtraVerbose, ProduceXML, LabelSummary, SubprojectSummary, UseHTTP10, PrintLabels, Failover, FlushTestProgressLine, ForceNewCTestProcess, RunConfigurationScript, ShowOnly, TomorrowTag, ParallelLevelSetInCli, InteractiveDebugMode, ShortDateFormat, CompressXMLFiles, CompressTestOutput, SuppressUpdatingCTestConfiguration, Debug, ShowLineNumbers, Quiet, DropSiteCDash, OutputTestOutputOnTestFailure, consider reordering the fields or adding explicit padding members

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmp7je11t.yaml -p=/project/git /project/git/Source/cmExtraSublimeTextGenerator.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpziFrfV.yaml -p=/project/git /project/git/Source/cmExportBuildFileGenerator.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpqJwe3l.yaml -p=/project/git /project/git/Source/cmInstallExportGenerator.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmp1UF3RO.yaml -p=/project/git /project/git/Source/cmGlobVerificationManager.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpGcuBeH.yaml -p=/project/git /project/git/Source/cmGeneratorExpressionParser.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpZMBFEt.yaml -p=/project/git /project/git/Source/cmGeneratorExpressionEvaluationFile.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmp2i_bFk.yaml -p=/project/git /project/git/Source/cmInstallScriptGenerator.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmplgUcQC.yaml -p=/project/git /project/git/Source/cmGeneratorExpressionEvaluator.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmp8_Qdpi.yaml -p=/project/git /project/git/Source/cmInstalledFile.cxx

1 warning generated.

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpvbW50Q.yaml -p=/project/git /project/git/Source/cmGeneratorExpression.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpC9jEKf.yaml -p=/project/git /project/git/Source/cmInstallFilesGenerator.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpxhiCtA.yaml -p=/project/git /project/git/Source/cmInstallSubdirectoryGenerator.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmp30vu8L.yaml -p=/project/git /project/git/Source/cmLinkItem.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpySB9kD.yaml -p=/project/git /project/git/Source/cmExtraEclipseCDT4Generator.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpcMJVZT.yaml -p=/project/git /project/git/Source/cmInstallDirectoryGenerator.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpF42nJw.yaml -p=/project/git /project/git/Source/cmInstallGenerator.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpElkUQm.yaml -p=/project/git /project/git/Source/cmLocalCommonGenerator.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpuSoGuz.yaml -p=/project/git /project/git/Source/CTest/cmCTestTestHandler.cxx
/project/git/Source/cmCTest.h:32:7: warning: Excessive padding in 'class cmCTest' (46 padding bytes, where 6 is optimal). 
Optimal fields order: 
StopTime, 
TimeOut, 
GlobalTimeout, 
TestLoad, 
StreamOut, 
StreamErr, 
OutputLogFile, 
InitialCommandLineArguments, 
ConfigType, 
ScheduleType, 
CurrentTag, 
SpecificTrack, 
BinaryDir, 
NotesFiles, 
BuildID, 
TestingHandlers, 
CTestConfiguration, 
CTestConfigurationOverwrites, 
PartMap, 
Definitions, 
Parts, 
RepeatTests, 
TestModel, 
MaxTestNameWidth, 
ParallelLevel, 
CompatibilityMode, 
DartVersion, 
SubmitIndex, 
OutputLogFileLastTag, 
RepeatUntilFail, 
TestProgressOutput, 
Verbose, 
ExtraVerbose, 
ProduceXML, 
LabelSummary, 
SubprojectSummary, 
UseHTTP10, 
PrintLabels, 
Failover, 
FlushTestProgressLine, 
ForceNewCTestProcess, 
RunConfigurationScript, 
ShowOnly, 
TomorrowTag, 
ParallelLevelSetInCli, 
InteractiveDebugMode, 
ShortDateFormat, 
CompressXMLFiles, 
CompressTestOutput, 
SuppressUpdatingCTestConfiguration, 
Debug, 
ShowLineNumbers, 
Quiet, 
DropSiteCDash, 
OutputTestOutputOnTestFailure, 
consider reordering the fields or adding explicit padding members [clang-analyzer-optin.performance.Padding]
class cmCTest
      ^
/project/git/Source/cmCTest.h:32:7: note: Excessive padding in 'class cmCTest' (46 padding bytes, where 6 is optimal). Optimal fields order: StopTime, TimeOut, GlobalTimeout, TestLoad, StreamOut, StreamErr, OutputLogFile, InitialCommandLineArguments, ConfigType, ScheduleType, CurrentTag, SpecificTrack, BinaryDir, NotesFiles, BuildID, TestingHandlers, CTestConfiguration, CTestConfigurationOverwrites, PartMap, Definitions, Parts, RepeatTests, TestModel, MaxTestNameWidth, ParallelLevel, CompatibilityMode, DartVersion, SubmitIndex, OutputLogFileLastTag, RepeatUntilFail, TestProgressOutput, Verbose, ExtraVerbose, ProduceXML, LabelSummary, SubprojectSummary, UseHTTP10, PrintLabels, Failover, FlushTestProgressLine, ForceNewCTestProcess, RunConfigurationScript, ShowOnly, TomorrowTag, ParallelLevelSetInCli, InteractiveDebugMode, ShortDateFormat, CompressXMLFiles, CompressTestOutput, SuppressUpdatingCTestConfiguration, Debug, ShowLineNumbers, Quiet, DropSiteCDash, OutputTestOutputOnTestFailure, consider reordering the fields or adding explicit padding members

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmp3bJVNz.yaml -p=/project/git /project/git/Source/cmListFileCache.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpAt4enq.yaml -p=/project/git /project/git/Source/cmLinkLineComputer.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpiZzdxV.yaml -p=/project/git /project/git/Source/cmLinkLineDeviceComputer.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpMwEReV.yaml -p=/project/git /project/git/Source/cmRulePlaceholderExpander.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpF1odCZ.yaml -p=/project/git /project/git/Source/cmMakefileUtilityTargetGenerator.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpUtd44S.yaml -p=/project/git /project/git/Source/cmExportFileGenerator.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpAOczVL.yaml -p=/project/git /project/git/Source/cmMessenger.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpx7t9xR.yaml -p=/project/git /project/git/Source/cmMSVC60LinkLineComputer.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpeMI3Xx.yaml -p=/project/git /project/git/Source/cmNewLineStyle.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpGWskZW.yaml -p=/project/git /project/git/Source/cmOSXBundleGenerator.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpQgrmc2.yaml -p=/project/git /project/git/Source/cmProcessOutput.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpqtXEH7.yaml -p=/project/git /project/git/Source/cmGeneratorExpressionNode.cxx
/project/git/Source/cmGeneratorExpressionNode.cxx:1191:11: warning: Called C++ object pointer is null [clang-analyzer-core.CallAndMessage]
      if (target->LinkLanguagePropagatesToDependents() && dagCheckerParent &&
          ^
/project/git/Source/cmGeneratorExpressionNode.cxx:1090:9: note: Assuming the condition is false
    if (parameters.size() != 1 && parameters.size() != 2) {
        ^
/project/git/Source/cmGeneratorExpressionNode.cxx:1090:32: note: Left side of '&&' is false
    if (parameters.size() != 1 && parameters.size() != 2) {
                               ^
/project/git/Source/cmGeneratorExpressionNode.cxx:1098:5: note: 'target' initialized here
    cmGeneratorTarget const* target = context->HeadTarget;
    ^
/project/git/Source/cmGeneratorExpressionNode.cxx:1101:9: note: Assuming the condition is false
    if (parameters.size() == 1) {
        ^
/project/git/Source/cmGeneratorExpressionNode.cxx:1101:5: note: Taking false branch
    if (parameters.size() == 1) {
    ^
/project/git/Source/cmGeneratorExpressionNode.cxx:1104:9: note: Assuming 'target' is null
    if (!target && parameters.size() == 1) {
        ^
/project/git/Source/cmGeneratorExpressionNode.cxx:1104:9: note: Left side of '&&' is true
/project/git/Source/cmGeneratorExpressionNode.cxx:1104:20: note: Assuming the condition is false
    if (!target && parameters.size() == 1) {
                   ^
/project/git/Source/cmGeneratorExpressionNode.cxx:1104:5: note: Taking false branch
    if (!target && parameters.size() == 1) {
    ^
/project/git/Source/cmGeneratorExpressionNode.cxx:1114:9: note: Assuming the condition is false
    if (parameters.size() == 2) {
        ^
/project/git/Source/cmGeneratorExpressionNode.cxx:1114:5: note: Taking false branch
    if (parameters.size() == 2) {
    ^
/project/git/Source/cmGeneratorExpressionNode.cxx:1163:5: note: Taking true branch
    if (target == context->HeadTarget) {
    ^
/project/git/Source/cmGeneratorExpressionNode.cxx:1170:5: note: Taking false branch
    if (propertyName == "SOURCES") {
    ^
/project/git/Source/cmGeneratorExpressionNode.cxx:1174:9: note: Assuming the condition is false
    if (propertyName.empty()) {
        ^
/project/git/Source/cmGeneratorExpressionNode.cxx:1174:5: note: Taking false branch
    if (propertyName.empty()) {
    ^
2 warnings generated.

/project/git/Source/cmGeneratorExpressionNode.cxx:1182:9: note: Assuming the condition is false
    if (!propertyNameValidator.find(propertyName)) {
        ^
/project/git/Source/cmGeneratorExpressionNode.cxx:1182:5: note: Taking false branch
    if (!propertyNameValidator.find(propertyName)) {
    ^
/project/git/Source/cmGeneratorExpressionNode.cxx:1190:5: note: Taking true branch
    if (propertyName == "LINKER_LANGUAGE") {
    ^
/project/git/Source/cmGeneratorExpressionNode.cxx:1191:11: note: Called C++ object pointer is null
      if (target->LinkLanguagePropagatesToDependents() && dagCheckerParent &&
          ^
/project/git/Source/cmGeneratorExpressionNode.cxx:1225:24: warning: Called C++ object pointer is null [clang-analyzer-core.CallAndMessage]
    const char* prop = target->GetProperty(propertyName);
                       ^
/project/git/Source/cmGeneratorExpressionNode.cxx:1090:9: note: Assuming the condition is false
    if (parameters.size() != 1 && parameters.size() != 2) {
        ^
/project/git/Source/cmGeneratorExpressionNode.cxx:1090:32: note: Left side of '&&' is false
    if (parameters.size() != 1 && parameters.size() != 2) {
                               ^
/project/git/Source/cmGeneratorExpressionNode.cxx:1098:5: note: 'target' initialized here
    cmGeneratorTarget const* target = context->HeadTarget;
    ^
/project/git/Source/cmGeneratorExpressionNode.cxx:1101:9: note: Assuming the condition is false
    if (parameters.size() == 1) {
        ^
/project/git/Source/cmGeneratorExpressionNode.cxx:1101:5: note: Taking false branch
    if (parameters.size() == 1) {
    ^
/project/git/Source/cmGeneratorExpressionNode.cxx:1104:9: note: Assuming 'target' is null
    if (!target && parameters.size() == 1) {
        ^
/project/git/Source/cmGeneratorExpressionNode.cxx:1104:9: note: Left side of '&&' is true
/project/git/Source/cmGeneratorExpressionNode.cxx:1104:20: note: Assuming the condition is false
    if (!target && parameters.size() == 1) {
                   ^
/project/git/Source/cmGeneratorExpressionNode.cxx:1104:5: note: Taking false branch
    if (!target && parameters.size() == 1) {
    ^
/project/git/Source/cmGeneratorExpressionNode.cxx:1114:9: note: Assuming the condition is false
    if (parameters.size() == 2) {
        ^
/project/git/Source/cmGeneratorExpressionNode.cxx:1114:5: note: Taking false branch
    if (parameters.size() == 2) {
    ^
/project/git/Source/cmGeneratorExpressionNode.cxx:1163:5: note: Taking true branch
    if (target == context->HeadTarget) {
    ^
/project/git/Source/cmGeneratorExpressionNode.cxx:1170:5: note: Taking false branch
    if (propertyName == "SOURCES") {
    ^
/project/git/Source/cmGeneratorExpressionNode.cxx:1174:9: note: Assuming the condition is false
    if (propertyName.empty()) {
        ^
/project/git/Source/cmGeneratorExpressionNode.cxx:1174:5: note: Taking false branch
    if (propertyName.empty()) {
    ^
/project/git/Source/cmGeneratorExpressionNode.cxx:1182:9: note: Assuming the condition is false
    if (!propertyNameValidator.find(propertyName)) {
        ^
/project/git/Source/cmGeneratorExpressionNode.cxx:1182:5: note: Taking false branch
    if (!propertyNameValidator.find(propertyName)) {
    ^
/project/git/Source/cmGeneratorExpressionNode.cxx:1190:5: note: Taking false branch
    if (propertyName == "LINKER_LANGUAGE") {
    ^
/project/git/Source/cmGeneratorExpressionNode.cxx:1206:5: note: Control jumps to 'case DAG:'  at line 1221
    switch (dagChecker.Check()) {
    ^
/project/git/Source/cmGeneratorExpressionNode.cxx:1222:9: note:  Execution continues on line 1225
        break;
        ^
/project/git/Source/cmGeneratorExpressionNode.cxx:1225:24: note: Called C++ object pointer is null
    const char* prop = target->GetProperty(propertyName);
                       ^

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpVmkrnf.yaml -p=/project/git /project/git/Source/cmProperty.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpnsLnXO.yaml -p=/project/git /project/git/Source/cmPropertyDefinition.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpRYOGhE.yaml -p=/project/git /project/git/Source/cmPropertyDefinitionMap.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpRY9p9D.yaml -p=/project/git /project/git/Source/cmInstallTargetGenerator.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpEgXAAK.yaml -p=/project/git /project/git/Source/cmMakefileExecutableTargetGenerator.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpa1_V_F.yaml -p=/project/git /project/git/Source/cmOutputConverter.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpb7KNFI.yaml -p=/project/git /project/git/Source/cmPolicies.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpcqKExr.yaml -p=/project/git /project/git/Source/cmMakefileLibraryTargetGenerator.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpcJykoQ.yaml -p=/project/git /project/git/Source/cmProcessTools.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpNRyqp0.yaml -p=/project/git /project/git/Source/cmQtAutoGeneratorRcc.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpGShpDy.yaml -p=/project/git /project/git/Source/cmQtAutoGenerator.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpGvKfnk.yaml -p=/project/git /project/git/Source/cmPropertyMap.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpIOqwsR.yaml -p=/project/git /project/git/Source/cmMakefileTargetGenerator.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpAPQ0SE.yaml -p=/project/git /project/git/Source/cmOrderDirectories.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmp0oil0o.yaml -p=/project/git /project/git/Source/cmGraphVizWriter.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpeWJaRI.yaml -p=/project/git /project/git/Source/cmSourceGroup.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpqC0LYB.yaml -p=/project/git /project/git/Source/cmGlobalUnixMakefileGenerator3.cxx
/project/git/Source/cmGlobalUnixMakefileGenerator3.cxx:535:1: warning: Potential leak of memory pointed to by 'mf' [clang-analyzer-cplusplus.NewDeleteLeaks]
}
^
/project/git/Source/cmGlobalUnixMakefileGenerator3.cxx:498:7: note: Assuming the condition is false
  if (!this->Makefiles.empty()) {
      ^
/project/git/Source/cmGlobalUnixMakefileGenerator3.cxx:498:3: note: Taking false branch
  if (!this->Makefiles.empty()) {
  ^
/project/git/Source/cmGlobalUnixMakefileGenerator3.cxx:507:10: note: Memory is allocated
    mf = new cmMakefile(this, snapshot);
         ^
/project/git/Source/cmGlobalUnixMakefileGenerator3.cxx:512:7: note: Assuming 'jobs' is equal to 'NO_BUILD_PARALLEL_LEVEL'
  if (jobs != cmake::NO_BUILD_PARALLEL_LEVEL) {
      ^
/project/git/Source/cmGlobalUnixMakefileGenerator3.cxx:512:3: note: Taking false branch
  if (jobs != cmake::NO_BUILD_PARALLEL_LEVEL) {
  ^
/project/git/Source/cmGlobalUnixMakefileGenerator3.cxx:521:7: note: Assuming the condition is false
  if (!targetName.empty()) {
      ^
/project/git/Source/cmGlobalUnixMakefileGenerator3.cxx:521:3: note: Taking false branch
  if (!targetName.empty()) {
  ^
/project/git/Source/cmGlobalUnixMakefileGenerator3.cxx:532:7: note: Assuming the condition is false
  if (this->Makefiles.empty()) {
      ^
/project/git/Source/cmGlobalUnixMakefileGenerator3.cxx:532:3: note: Taking false branch
1 warning generated.

  if (this->Makefiles.empty()) {
  ^
/project/git/Source/cmGlobalUnixMakefileGenerator3.cxx:535:1: note: Potential leak of memory pointed to by 'mf'
}
^

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpkJCqhh.yaml -p=/project/git /project/git/Source/cmSourceFileLocation.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmp5le2vy.yaml -p=/project/git /project/git/Source/cmRST.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpW_6mbN.yaml -p=/project/git /project/git/Source/cmScriptGenerator.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpiyM7gY.yaml -p=/project/git /project/git/Source/cmQtAutoGen.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpp6GPu_.yaml -p=/project/git /project/git/Source/cmTargetPropertyComputer.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpRdK8p7.yaml -p=/project/git /project/git/Source/cmSourceFile.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpIbrbKl.yaml -p=/project/git /project/git/Source/cmStateSnapshot.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpA5sVuA.yaml -p=/project/git /project/git/Source/cmGlobalGenerator.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpvnXpDX.yaml -p=/project/git /project/git/Source/cmVersion.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpiVC6EL.yaml -p=/project/git /project/git/Source/cmUuid.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpRM_5jS.yaml -p=/project/git /project/git/Source/cmTest.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpk3gQPE.yaml -p=/project/git /project/git/Source/cmVariableWatch.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpRzs20c.yaml -p=/project/git /project/git/Source/cmWorkingDirectory.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpmX27yh.yaml -p=/project/git /project/git/Source/cmXMLParser.cxx
/project/git/Source/cmXMLParser.cxx:23:5: warning: Call to virtual function during destruction [clang-analyzer-optin.cplusplus.VirtualCall]
    this->CleanupParser();
    ^
/project/git/Source/cmXMLParser.cxx:22:7: note: Assuming the condition is true
  if (this->Parser) {
      ^
/project/git/Source/cmXMLParser.cxx:22:3: note: Taking true branch
  if (this->Parser) {
  ^
/project/git/Source/cmXMLParser.cxx:23:5: note: This destructor of an object of type '~cmXMLParser' has not returned when the virtual method was called
    this->CleanupParser();
    ^
/project/git/Source/cmXMLParser.cxx:23:5: note: Call to virtual function during destruction
/project/git/Source/cmXMLParser.cxx:95:7: warning: Call to virtual function during destruction [clang-analyzer-optin.cplusplus.VirtualCall]
      this->ReportXmlParseError();
      ^
/project/git/Source/cmXMLParser.cxx:22:7: note: Assuming the condition is true
  if (this->Parser) {
      ^
/project/git/Source/cmXMLParser.cxx:22:3: note: Taking true branch
  if (this->Parser) {
  ^
/project/git/Source/cmXMLParser.cxx:23:5: note: This destructor of an object of type '~cmXMLParser' has not returned when the virtual method was called
    this->CleanupParser();
    ^
/project/git/Source/cmXMLParser.cxx:23:5: note: Calling 'cmXMLParser::CleanupParser'
/project/git/Source/cmXMLParser.cxx:86:3: note: Taking false branch
  if (!this->Parser) {
  ^
/project/git/Source/cmXMLParser.cxx:91:16: note: Assuming the condition is true
  int result = !this->ParseError;
               ^
3 warnings generated.

/project/git/Source/cmXMLParser.cxx:92:3: note: Taking true branch
  if (result) {
  ^
/project/git/Source/cmXMLParser.cxx:94:9: note: Assuming the condition is true
    if (!XML_Parse(static_cast<XML_Parser>(this->Parser), "", 0, 1)) {
        ^
/project/git/Source/cmXMLParser.cxx:94:5: note: Taking true branch
    if (!XML_Parse(static_cast<XML_Parser>(this->Parser), "", 0, 1)) {
    ^
/project/git/Source/cmXMLParser.cxx:95:7: note: Call to virtual function during destruction
      this->ReportXmlParseError();
      ^
/project/git/Source/cmXMLParser.cxx:189:3: warning: Call to virtual function during destruction [clang-analyzer-optin.cplusplus.VirtualCall]
  this->ReportError(static_cast<int>(XML_GetCurrentLineNumber(parser)),
  ^
/project/git/Source/cmXMLParser.cxx:22:7: note: Assuming the condition is true
  if (this->Parser) {
      ^
/project/git/Source/cmXMLParser.cxx:22:3: note: Taking true branch
  if (this->Parser) {
  ^
/project/git/Source/cmXMLParser.cxx:23:5: note: This destructor of an object of type '~cmXMLParser' has not returned when the virtual method was called
    this->CleanupParser();
    ^
/project/git/Source/cmXMLParser.cxx:23:5: note: Calling 'cmXMLParser::CleanupParser'
/project/git/Source/cmXMLParser.cxx:86:3: note: Taking false branch
  if (!this->Parser) {
  ^
/project/git/Source/cmXMLParser.cxx:91:16: note: Assuming the condition is true
  int result = !this->ParseError;
               ^
/project/git/Source/cmXMLParser.cxx:92:3: note: Taking true branch
  if (result) {
  ^
/project/git/Source/cmXMLParser.cxx:94:9: note: Assuming the condition is true
    if (!XML_Parse(static_cast<XML_Parser>(this->Parser), "", 0, 1)) {
        ^
/project/git/Source/cmXMLParser.cxx:94:5: note: Taking true branch
    if (!XML_Parse(static_cast<XML_Parser>(this->Parser), "", 0, 1)) {
    ^
/project/git/Source/cmXMLParser.cxx:95:7: note: Calling 'cmXMLParser::ReportXmlParseError'
      this->ReportXmlParseError();
      ^
/project/git/Source/cmXMLParser.cxx:189:3: note: Call to virtual function during destruction
  this->ReportError(static_cast<int>(XML_GetCurrentLineNumber(parser)),
  ^

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmp0hG1wH.yaml -p=/project/git /project/git/Source/cmTestGenerator.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpUTLS0p.yaml -p=/project/git /project/git/Source/cmUVHandlePtr.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpSUMMFW.yaml -p=/project/git /project/git/Source/cmLocalUnixMakefileGenerator3.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpdkgejS.yaml -p=/project/git /project/git/Source/cmXMLWriter.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmp56USSV.yaml -p=/project/git /project/git/Source/cmCommand.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpY715iL.yaml -p=/project/git /project/git/Source/cmCommands.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpSPjFHL.yaml -p=/project/git /project/git/Source/cmAddCompileOptionsCommand.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmptZMhuq.yaml -p=/project/git /project/git/Source/cmAddCompileDefinitionsCommand.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmp2cBv2G.yaml -p=/project/git /project/git/Source/cmAddLinkOptionsCommand.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmp_kwL0C.yaml -p=/project/git /project/git/Source/cmState.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpioqZ29.yaml -p=/project/git /project/git/Source/cmXMLSafe.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpaQKt2k.yaml -p=/project/git /project/git/Source/cmAddDefinitionsCommand.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpRptuvh.yaml -p=/project/git /project/git/Source/cmAddDependenciesCommand.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpWKkm26.yaml -p=/project/git /project/git/Source/cmStateDirectory.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpDVH4V4.yaml -p=/project/git /project/git/Source/cmAddExecutableCommand.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpqg5Ncm.yaml -p=/project/git /project/git/Source/cmAddSubDirectoryCommand.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpoTkyzx.yaml -p=/project/git /project/git/Source/cmAddTestCommand.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpcZbqZY.yaml -p=/project/git /project/git/Source/cmBreakCommand.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpRg_HGz.yaml -p=/project/git /project/git/Source/cmQtAutoGenInitializer.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmp0IMKCt.yaml -p=/project/git /project/git/Source/cmBuildCommand.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpOxj4Li.yaml -p=/project/git /project/git/Source/cmBuildNameCommand.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpZ8qx4S.yaml -p=/project/git /project/git/Source/cmAddCustomTargetCommand.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpRX4UCH.yaml -p=/project/git /project/git/Source/cmAddLibraryCommand.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpAIOXeT.yaml -p=/project/git /project/git/Source/cmCMakeHostSystemInformationCommand.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpDmVlL2.yaml -p=/project/git /project/git/Source/cmAddCustomCommandCommand.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmp2SRZcz.yaml -p=/project/git /project/git/Source/cmCMakePolicyCommand.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmptUcTht.yaml -p=/project/git /project/git/Source/cmCMakeMinimumRequired.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpzA_YfF.yaml -p=/project/git /project/git/Source/cmContinueCommand.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpXgcHzA.yaml -p=/project/git /project/git/Source/cmDisallowedCommand.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpPLpfzW.yaml -p=/project/git /project/git/Source/cmDefinePropertyCommand.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpvbwWkH.yaml -p=/project/git /project/git/Source/cmAuxSourceDirectoryCommand.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpR74k8w.yaml -p=/project/git /project/git/Source/cmake.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpdOUNpU.yaml -p=/project/git /project/git/Source/cmEnableLanguageCommand.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpa3EUYa.yaml -p=/project/git /project/git/Source/cmConfigureFileCommand.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmp7mHRW6.yaml -p=/project/git /project/git/Source/cmExpandedCommandArgument.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpycgqV6.yaml -p=/project/git /project/git/Source/cmCommandArgumentsHelper.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmp8rSyPr.yaml -p=/project/git /project/git/Source/cmEnableTestingCommand.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpmNuKM9.yaml -p=/project/git /project/git/Source/cmFLTKWrapUICommand.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpLwOKIR.yaml -p=/project/git /project/git/Source/cmCreateTestSourceList.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmp1nfYy_.yaml -p=/project/git /project/git/Source/cmFindBase.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpkQcbnM.yaml -p=/project/git /project/git/Source/cmFindFileCommand.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpw0MB7P.yaml -p=/project/git /project/git/Source/cmFindCommon.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmp88apTH.yaml -p=/project/git /project/git/Source/cmExecProgramCommand.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmphcfweJ.yaml -p=/project/git /project/git/Source/cmExecuteProcessCommand.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpQbctWx.yaml -p=/project/git /project/git/Source/cmExportCommand.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpLJMqXC.yaml -p=/project/git /project/git/Source/cmExportLibraryDependenciesCommand.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpKTl1BZ.yaml -p=/project/git /project/git/Source/cmQtAutoGeneratorMocUic.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpbvVegZ.yaml -p=/project/git /project/git/Source/cmConditionEvaluator.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmp3NxdQ1.yaml -p=/project/git /project/git/Source/cmFindProgramCommand.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpNrNJUU.yaml -p=/project/git /project/git/Source/cmForEachCommand.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmp3lUrdW.yaml -p=/project/git /project/git/Source/cmFindPathCommand.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpRsRzhC.yaml -p=/project/git /project/git/Source/cmGetCMakePropertyCommand.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpbpo85v.yaml -p=/project/git /project/git/Source/cmFunctionCommand.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpLjQabj.yaml -p=/project/git /project/git/Source/cmCoreTryCompile.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmp5AOrA6.yaml -p=/project/git /project/git/Source/cmGetDirectoryPropertyCommand.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmp1KrRjH.yaml -p=/project/git /project/git/Source/cmLocalGenerator.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpRxhqdg.yaml -p=/project/git /project/git/Source/cmGetSourceFilePropertyCommand.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmp84P29d.yaml -p=/project/git /project/git/Source/cmIncludeExternalMSProjectCommand.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpeM9Jqj.yaml -p=/project/git /project/git/Source/cmGetTargetPropertyCommand.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpPxBBC2.yaml -p=/project/git /project/git/Source/cmGetTestPropertyCommand.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmptw5PDo.yaml -p=/project/git /project/git/Source/cmGetFilenameComponentCommand.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmp3Ncppq.yaml -p=/project/git /project/git/Source/cmHexFileConverter.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpMM2Ccp.yaml -p=/project/git /project/git/Source/cmTarget.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpTsPK7h.yaml -p=/project/git /project/git/Source/cmInstallCommandArguments.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpdpTdTg.yaml -p=/project/git /project/git/Source/cmIncludeRegularExpressionCommand.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpmN53O6.yaml -p=/project/git /project/git/Source/cmIncludeGuardCommand.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmp1SgDOG.yaml -p=/project/git /project/git/Source/cmGetPropertyCommand.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpBmzeGi.yaml -p=/project/git /project/git/Source/cmIfCommand.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpMBLQuQ.yaml -p=/project/git /project/git/Source/cmIncludeCommand.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmp2FNXO4.yaml -p=/project/git /project/git/Source/cmInstallProgramsCommand.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpoPb8lv.yaml -p=/project/git /project/git/Source/cmInstallFilesCommand.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpHTbLPo.yaml -p=/project/git /project/git/Source/cmLinkLibrariesCommand.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpQt0FSP.yaml -p=/project/git /project/git/Source/cmInstallTargetsCommand.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpH7ib5g.yaml -p=/project/git /project/git/Source/cmLinkDirectoriesCommand.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpVZyRrx.yaml -p=/project/git /project/git/Source/cmLoadCommandCommand.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpiSZh4Q.yaml -p=/project/git /project/git/Source/cmMakeDirectoryCommand.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpH1i60I.yaml -p=/project/git /project/git/Source/cmMarkAsAdvancedCommand.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpEtBIIU.yaml -p=/project/git /project/git/Source/cmMathCommand.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpz6PnwJ.yaml -p=/project/git /project/git/Source/cmIncludeDirectoryCommand.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpilREkJ.yaml -p=/project/git /project/git/Source/cmPathLabel.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmplSmhg_.yaml -p=/project/git /project/git/Source/cmMessageCommand.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmp0pm3GK.yaml -p=/project/git /project/git/Source/cmOptionCommand.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmp0sRqWo.yaml -p=/project/git /project/git/Source/cmSystemTools.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmph844sK.yaml -p=/project/git /project/git/Source/cmLoadCacheCommand.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpnsY85I.yaml -p=/project/git /project/git/Source/cmRemoveCommand.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpAB_UUi.yaml -p=/project/git /project/git/Source/cmReturnCommand.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpV4wOpW.yaml -p=/project/git /project/git/Source/cmQTWrapCPPCommand.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpECziOR.yaml -p=/project/git /project/git/Source/cmRemoveDefinitionsCommand.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpy3D9d4.yaml -p=/project/git /project/git/Source/cmMacroCommand.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpJU6kaa.yaml -p=/project/git /project/git/Source/cmFindLibraryCommand.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpYsyMeA.yaml -p=/project/git /project/git/Source/cmListCommand.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpaj8Nx8.yaml -p=/project/git /project/git/Source/cmSeparateArgumentsCommand.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpNXKIHy.yaml -p=/project/git /project/git/Source/cmQTWrapUICommand.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpY9EyTP.yaml -p=/project/git /project/git/Source/cmSetCommand.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpvvTem8.yaml -p=/project/git /project/git/Source/cmSetDirectoryPropertiesCommand.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpIHV_2K.yaml -p=/project/git /project/git/Source/cmParseArgumentsCommand.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpj4EkG4.yaml -p=/project/git /project/git/Source/cmSetTargetPropertiesCommand.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpLzOtOs.yaml -p=/project/git /project/git/Source/cmProjectCommand.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpjED1eP.yaml -p=/project/git /project/git/Source/cmSetTestsPropertiesCommand.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpR4wpkk.yaml -p=/project/git /project/git/Source/cmSiteNameCommand.cxx
Source/cmsys/RegularExpression.hxx:138:23: warning: The left operand of '==' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]
  if (this->startp[n] == 0) {
                      ^
/project/git/Source/cmSiteNameCommand.cxx:17:7: note: Assuming the condition is false
  if (args.size() != 1) {
      ^
/project/git/Source/cmSiteNameCommand.cxx:17:3: note: Taking false branch
  if (args.size() != 1) {
  ^
/project/git/Source/cmSiteNameCommand.cxx:30:7: note: Assuming 'cacheValue' is null
  if (cacheValue) {
      ^
/project/git/Source/cmSiteNameCommand.cxx:30:3: note: Taking false branch
  if (cacheValue) {
  ^
1 warning generated.

/project/git/Source/cmSiteNameCommand.cxx:36:7: note: Assuming 'temp' is non-null
  if (temp) {
      ^
/project/git/Source/cmSiteNameCommand.cxx:36:3: note: Taking true branch
  if (temp) {
  ^
/project/git/Source/cmSiteNameCommand.cxx:53:7: note: Assuming the condition is true
  if (!cmSystemTools::IsOff(hostname_cmd)) {
      ^
/project/git/Source/cmSiteNameCommand.cxx:53:3: note: Taking true branch
  if (!cmSystemTools::IsOff(hostname_cmd)) {
  ^
/project/git/Source/cmSiteNameCommand.cxx:60:9: note: Assuming the condition is true
    if (!host.empty()) {
        ^
/project/git/Source/cmSiteNameCommand.cxx:60:5: note: Taking true branch
    if (!host.empty()) {
    ^
/project/git/Source/cmSiteNameCommand.cxx:64:11: note: Assuming the condition is true
      if (hostReg.find(host.c_str())) {
          ^
/project/git/Source/cmSiteNameCommand.cxx:64:7: note: Taking true branch
      if (hostReg.find(host.c_str())) {
      ^
/project/git/Source/cmSiteNameCommand.cxx:66:16: note: Calling 'RegularExpression::match'
        host = hostReg.match(1);
               ^
Source/cmsys/RegularExpression.hxx:518:10: note: Calling 'RegularExpressionMatch::match'
  return regmatch.match(n);
         ^
Source/cmsys/RegularExpression.hxx:138:23: note: The left operand of '==' is a garbage value
  if (this->startp[n] == 0) {
                      ^

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpX2MV9N.yaml -p=/project/git /project/git/Source/cmSubdirDependsCommand.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpVmyxQ8.yaml -p=/project/git /project/git/Source/cmInstallCommand.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpdRep6T.yaml -p=/project/git /project/git/Source/cmSetSourceFilesPropertiesCommand.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpBBVlfw.yaml -p=/project/git /project/git/Source/cmTargetCompileDefinitionsCommand.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpiXNt7H.yaml -p=/project/git /project/git/Source/cmOutputRequiredFilesCommand.cxx
/project/git/Source/cmOutputRequiredFilesCommand.cxx:346:23: warning: Inner pointer of container used after re/deallocation [clang-analyzer-cplusplus.InnerPointer]
            incpath = incpath + path;
                      ^
/project/git/Source/cmOutputRequiredFilesCommand.cxx:471:7: note: Assuming the condition is false
  if (args.size() != 2) {
      ^
/project/git/Source/cmOutputRequiredFilesCommand.cxx:471:3: note: Taking false branch
  if (args.size() != 2) {
  ^
/project/git/Source/cmOutputRequiredFilesCommand.cxx:485:37: note: Calling 'cmLBDepend::FindDependencies'
  const cmDependInformation* info = md.FindDependencies(this->File.c_str());
                                    ^
/project/git/Source/cmOutputRequiredFilesCommand.cxx:157:5: note: Calling 'cmLBDepend::GenerateDependInformation'
    this->GenerateDependInformation(info);
    ^
/project/git/Source/cmOutputRequiredFilesCommand.cxx:291:9: note: Assuming the condition is false
    if (info->DependDone) {
        ^
/project/git/Source/cmOutputRequiredFilesCommand.cxx:291:5: note: Taking false branch
    if (info->DependDone) {
    ^
/project/git/Source/cmOutputRequiredFilesCommand.cxx:297:24: note: Pointer to inner buffer of 'std::string' obtained here
    const char* path = info->FullPath.c_str();
                       ^
/project/git/Source/cmOutputRequiredFilesCommand.cxx:298:9: note: Assuming 'path' is non-null
    if (!path) {
        ^
/project/git/Source/cmOutputRequiredFilesCommand.cxx:298:5: note: Taking false branch
    if (!path) {
    ^
/project/git/Source/cmOutputRequiredFilesCommand.cxx:307:9: note: Assuming the condition is false
    if (cmSystemTools::FileExists(path, true)) {
        ^
/project/git/Source/cmOutputRequiredFilesCommand.cxx:307:5: note: Taking false branch
    if (cmSystemTools::FileExists(path, true)) {
    ^
1 warning generated.

/project/git/Source/cmOutputRequiredFilesCommand.cxx:315:9: note: Assuming the condition is false
    if (info->SourceFile != nullptr) {
        ^
/project/git/Source/cmOutputRequiredFilesCommand.cxx:315:5: note: Taking false branch
    if (info->SourceFile != nullptr) {
    ^
/project/git/Source/cmOutputRequiredFilesCommand.cxx:333:5: note: Taking true branch
    if (!found) {
    ^
/project/git/Source/cmOutputRequiredFilesCommand.cxx:337:11: note: Assuming 'srcFile' is non-null
      if (srcFile) {
          ^
/project/git/Source/cmOutputRequiredFilesCommand.cxx:337:7: note: Taking true branch
      if (srcFile) {
      ^
/project/git/Source/cmOutputRequiredFilesCommand.cxx:338:9: note: Taking false branch
        if (srcFile->GetFullPath() == path) {
        ^
/project/git/Source/cmOutputRequiredFilesCommand.cxx:343:17: note: Assuming the condition is false
            if (!incpath.empty() && incpath[incpath.size() - 1] != '/') {
                ^
/project/git/Source/cmOutputRequiredFilesCommand.cxx:343:34: note: Left side of '&&' is false
            if (!incpath.empty() && incpath[incpath.size() - 1] != '/') {
                                 ^
/project/git/Source/cmOutputRequiredFilesCommand.cxx:347:13: note: Taking true branch
            if (srcFile->GetFullPath() == incpath) {
            ^
/project/git/Source/cmOutputRequiredFilesCommand.cxx:349:15: note: Inner buffer of 'std::string' reallocated by call to 'operator='
              info->FullPath = incpath;
              ^
/project/git/Source/cmOutputRequiredFilesCommand.cxx:343:17: note: Assuming the condition is false
            if (!incpath.empty() && incpath[incpath.size() - 1] != '/') {
                ^
/project/git/Source/cmOutputRequiredFilesCommand.cxx:343:34: note: Left side of '&&' is false
            if (!incpath.empty() && incpath[incpath.size() - 1] != '/') {
                                 ^
/project/git/Source/cmOutputRequiredFilesCommand.cxx:346:23: note: Inner pointer of container used after re/deallocation
            incpath = incpath + path;
                      ^

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpPeNObf.yaml -p=/project/git /project/git/Source/cmTargetCompileFeaturesCommand.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpk46jVP.yaml -p=/project/git /project/git/Source/cmSubdirCommand.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpjIA8Sy.yaml -p=/project/git /project/git/Source/cmFindPackageCommand.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpDtFJyd.yaml -p=/project/git /project/git/Source/cmStringReplaceHelper.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmp433Mbn.yaml -p=/project/git /project/git/Source/cmTargetCompileOptionsCommand.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpoSD3t7.yaml -p=/project/git /project/git/Source/cmTargetIncludeDirectoriesCommand.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpoxUXtT.yaml -p=/project/git /project/git/Source/cmStringCommand.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpmIFgZ4.yaml -p=/project/git /project/git/Source/cmTargetLinkOptionsCommand.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpmgFH10.yaml -p=/project/git /project/git/Source/cmSetPropertyCommand.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpYP_g18.yaml -p=/project/git /project/git/Source/cmTargetLinkDirectoriesCommand.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpF_a7nD.yaml -p=/project/git /project/git/Source/cmTryCompileCommand.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpE0CcGq.yaml -p=/project/git /project/git/Source/cmUnexpectedCommand.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpAzPpz0.yaml -p=/project/git /project/git/Source/cmUnsetCommand.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpoMNPXj.yaml -p=/project/git /project/git/Source/cmTargetSourcesCommand.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpC9uUwM.yaml -p=/project/git /project/git/Source/cm_get_date.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpWpcMyo.yaml -p=/project/git /project/git/Source/cm_utf8.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpeMvENn.yaml -p=/project/git /project/git/Source/cmUtilitySourceCommand.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpm07TYC.yaml -p=/project/git /project/git/Source/cmDuration.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpp89blc.yaml -p=/project/git /project/git/Source/cm_codecvt.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmppMT1GC.yaml -p=/project/git /project/git/Source/cmVariableWatchCommand.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpAI6hBs.yaml -p=/project/git /project/git/Source/cmVariableRequiresCommand.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpDGNYmC.yaml -p=/project/git /project/git/Source/cmTargetPropCommandBase.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmp8ALWfC.yaml -p=/project/git /project/git/Source/cmSourceGroupCommand.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpbGn9tG.yaml -p=/project/git /project/git/Source/cmWriteFileCommand.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmp9i5oeR.yaml -p=/project/git /project/git/Source/cmFileCommand.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpNLqRHi.yaml -p=/project/git /project/git/Source/cmTimestamp.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpYOWS5j.yaml -p=/project/git /project/git/Source/cmWhileCommand.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmphF6162.yaml -p=/project/git /project/git/Source/cmGlobalWatcomWMakeGenerator.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmp26CPf1.yaml -p=/project/git /project/git/Source/cmTargetLinkLibrariesCommand.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpueWXkO.yaml -p=/project/git /project/git/Source/cmSearchPath.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpf_0ZEg.yaml -p=/project/git /project/git/Source/cmTryRunCommand.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpZ2eESi.yaml -p=/project/git /project/git/Source/cmNinjaLinkLineComputer.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmp1WjtZH.yaml -p=/project/git /project/git/Source/CPack/cmCPackComponentGroup.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpRNcNEY.yaml -p=/project/git /project/git/Source/cmUseMangledMesaCommand.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmp1MIbvb.yaml -p=/project/git /project/git/Source/cmNinjaUtilityTargetGenerator.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpdC3Mou.yaml -p=/project/git /project/git/Source/CPack/cmCPackGeneratorFactory.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmp712elF.yaml -p=/project/git /project/git/Source/CPack/cmCPackLog.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpPHRGmW.yaml -p=/project/git /project/git/Source/CPack/cmCPackArchiveGenerator.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmp2349wH.yaml -p=/project/git /project/git/Source/cmakemain.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpUKoJiY.yaml -p=/project/git /project/git/Source/cmLocalNinjaGenerator.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpZ_CQHF.yaml -p=/project/git /project/git/Source/CPack/cmCPackExtGenerator.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpWGJVjg.yaml -p=/project/git /project/git/Source/CPack/cmCPackTGZGenerator.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpeaMVER.yaml -p=/project/git /project/git/Source/cmcmd.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpMbA19E.yaml -p=/project/git /project/git/Source/CPack/cmCPackTXZGenerator.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpgEvFL1.yaml -p=/project/git /project/git/Source/CPack/cmCPackTarBZip2Generator.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmplPZn8K.yaml -p=/project/git /project/git/Source/cmMakefile.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmp7Y4cJX.yaml -p=/project/git /project/git/Source/cmNinjaNormalTargetGenerator.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpMB8QYG.yaml -p=/project/git /project/git/Source/CPack/cmCPackTarCompressGenerator.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpGrKH6R.yaml -p=/project/git /project/git/Source/CPack/cmCPackZIPGenerator.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpXp17fM.yaml -p=/project/git /project/git/Source/CPack/cmCPack7zGenerator.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpPjew2k.yaml -p=/project/git /project/git/Source/CPack/cmCPackNuGetGenerator.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpVNOxrN.yaml -p=/project/git /project/git/Source/CPack/cmCPackSTGZGenerator.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpYu5TWj.yaml -p=/project/git /project/git/Source/CPack/IFW/cmCPackIFWCommon.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpp8ILPk.yaml -p=/project/git /project/git/Source/cmConnection.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpgHzYSA.yaml -p=/project/git /project/git/Source/cmPipeConnection.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpr_aDis.yaml -p=/project/git /project/git/Source/CPack/IFW/cmCPackIFWRepository.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmptWPn4X.yaml -p=/project/git /project/git/Source/ctest.cxx
/project/git/Source/cmCTest.h:32:7: warning: Excessive padding in 'class cmCTest' (46 padding bytes, where 6 is optimal). 
1 warning generated.

Optimal fields order: 
StopTime, 
TimeOut, 
GlobalTimeout, 
TestLoad, 
StreamOut, 
StreamErr, 
OutputLogFile, 
InitialCommandLineArguments, 
ConfigType, 
ScheduleType, 
CurrentTag, 
SpecificTrack, 
BinaryDir, 
NotesFiles, 
BuildID, 
TestingHandlers, 
CTestConfiguration, 
CTestConfigurationOverwrites, 
PartMap, 
Definitions, 
Parts, 
RepeatTests, 
TestModel, 
MaxTestNameWidth, 
ParallelLevel, 
CompatibilityMode, 
DartVersion, 
SubmitIndex, 
OutputLogFileLastTag, 
RepeatUntilFail, 
TestProgressOutput, 
Verbose, 
ExtraVerbose, 
ProduceXML, 
LabelSummary, 
SubprojectSummary, 
UseHTTP10, 
PrintLabels, 
Failover, 
FlushTestProgressLine, 
ForceNewCTestProcess, 
RunConfigurationScript, 
ShowOnly, 
TomorrowTag, 
ParallelLevelSetInCli, 
InteractiveDebugMode, 
ShortDateFormat, 
CompressXMLFiles, 
CompressTestOutput, 
SuppressUpdatingCTestConfiguration, 
Debug, 
ShowLineNumbers, 
Quiet, 
DropSiteCDash, 
OutputTestOutputOnTestFailure, 
consider reordering the fields or adding explicit padding members [clang-analyzer-optin.performance.Padding]
class cmCTest
      ^
/project/git/Source/cmCTest.h:32:7: note: Excessive padding in 'class cmCTest' (46 padding bytes, where 6 is optimal). Optimal fields order: StopTime, TimeOut, GlobalTimeout, TestLoad, StreamOut, StreamErr, OutputLogFile, InitialCommandLineArguments, ConfigType, ScheduleType, CurrentTag, SpecificTrack, BinaryDir, NotesFiles, BuildID, TestingHandlers, CTestConfiguration, CTestConfigurationOverwrites, PartMap, Definitions, Parts, RepeatTests, TestModel, MaxTestNameWidth, ParallelLevel, CompatibilityMode, DartVersion, SubmitIndex, OutputLogFileLastTag, RepeatUntilFail, TestProgressOutput, Verbose, ExtraVerbose, ProduceXML, LabelSummary, SubprojectSummary, UseHTTP10, PrintLabels, Failover, FlushTestProgressLine, ForceNewCTestProcess, RunConfigurationScript, ShowOnly, TomorrowTag, ParallelLevelSetInCli, InteractiveDebugMode, ShortDateFormat, CompressXMLFiles, CompressTestOutput, SuppressUpdatingCTestConfiguration, Debug, ShowLineNumbers, Quiet, DropSiteCDash, OutputTestOutputOnTestFailure, consider reordering the fields or adding explicit padding members

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmptirYjl.yaml -p=/project/git /project/git/Source/cmFileMonitor.cxx
/project/git/Source/cmFileMonitor.cxx:150:5: warning: Called C++ object pointer is null [clang-analyzer-core.CallAndMessage]
    p->AddChildWatcher(ps, this);
    ^
/project/git/Source/cmFileMonitor.cxx:320:9: note: Assuming 'segmentCount' is >= 2
    if (segmentCount < 2) { // Expect at least rootdir and filename
        ^
/project/git/Source/cmFileMonitor.cxx:320:5: note: Taking false branch
    if (segmentCount < 2) { // Expect at least rootdir and filename
    ^
/project/git/Source/cmFileMonitor.cxx:324:5: note: Loop condition is true.  Entering loop body
    for (size_t i = 0; i < segmentCount; ++i) {
    ^
/project/git/Source/cmFileMonitor.cxx:334:11: note: Assuming the condition is false
      if (currentSegment.empty()) {
          ^
/project/git/Source/cmFileMonitor.cxx:334:7: note: Taking false branch
      if (currentSegment.empty()) {
      ^
/project/git/Source/cmFileMonitor.cxx:339:11: note: Assuming 'nextWatcher' is non-null
      if (!nextWatcher) {
          ^
/project/git/Source/cmFileMonitor.cxx:339:7: note: Taking false branch
      if (!nextWatcher) {
      ^
/project/git/Source/cmFileMonitor.cxx:357:9: note: Taking false branch
        if (fileSegment) {
        ^
/project/git/Source/cmFileMonitor.cxx:364:7: note: Value assigned to 'currentWatcher'
      currentWatcher = dynamic_cast<cmVirtualDirectoryWatcher*>(nextWatcher);
      ^
/project/git/Source/cmFileMonitor.cxx:324:5: note: Loop condition is true.  Entering loop body
    for (size_t i = 0; i < segmentCount; ++i) {
    ^
/project/git/Source/cmFileMonitor.cxx:327:33: note: Assuming the condition is false
      const bool fileSegment = (i == segmentCount - 1);
                                ^
/project/git/Source/cmFileMonitor.cxx:334:11: note: Assuming the condition is false
2 warnings generated.

      if (currentSegment.empty()) {
          ^
/project/git/Source/cmFileMonitor.cxx:334:7: note: Taking false branch
      if (currentSegment.empty()) {
      ^
/project/git/Source/cmFileMonitor.cxx:339:7: note: Taking true branch
      if (!nextWatcher) {
      ^
/project/git/Source/cmFileMonitor.cxx:340:9: note: Taking false branch
        if (rootSegment) { // Root part
        ^
/project/git/Source/cmFileMonitor.cxx:344:16: note: Taking false branch
        } else if (fileSegment) { // File part
               ^
/project/git/Source/cmFileMonitor.cxx:352:13: note: Passing null pointer value via 1st parameter 'p'
            dynamic_cast<cmRealDirectoryWatcher*>(currentWatcher),
            ^
/project/git/Source/cmFileMonitor.cxx:351:29: note: Calling constructor for 'cmDirectoryWatcher'
          nextWatcher = new cmDirectoryWatcher(
                            ^
/project/git/Source/cmFileMonitor.cxx:219:30: note: Passing null pointer value via 1st parameter 'p'
    : cmRealDirectoryWatcher(p, ps)
                             ^
/project/git/Source/cmFileMonitor.cxx:219:7: note: Calling constructor for 'cmRealDirectoryWatcher'
    : cmRealDirectoryWatcher(p, ps)
      ^
/project/git/Source/cmFileMonitor.cxx:150:5: note: Called C++ object pointer is null
    p->AddChildWatcher(ps, this);
    ^
/project/git/Source/cmFileMonitor.cxx:240:5: warning: Called C++ object pointer is null [clang-analyzer-core.CallAndMessage]
    p->AddChildWatcher(ps, this);
    ^
/project/git/Source/cmFileMonitor.cxx:320:9: note: Assuming 'segmentCount' is >= 2
    if (segmentCount < 2) { // Expect at least rootdir and filename
        ^
/project/git/Source/cmFileMonitor.cxx:320:5: note: Taking false branch
    if (segmentCount < 2) { // Expect at least rootdir and filename
    ^
/project/git/Source/cmFileMonitor.cxx:324:5: note: Loop condition is true.  Entering loop body
    for (size_t i = 0; i < segmentCount; ++i) {
    ^
/project/git/Source/cmFileMonitor.cxx:334:11: note: Assuming the condition is false
      if (currentSegment.empty()) {
          ^
/project/git/Source/cmFileMonitor.cxx:334:7: note: Taking false branch
      if (currentSegment.empty()) {
      ^
/project/git/Source/cmFileMonitor.cxx:339:11: note: Assuming 'nextWatcher' is non-null
      if (!nextWatcher) {
          ^
/project/git/Source/cmFileMonitor.cxx:339:7: note: Taking false branch
      if (!nextWatcher) {
      ^
/project/git/Source/cmFileMonitor.cxx:357:9: note: Taking false branch
        if (fileSegment) {
        ^
/project/git/Source/cmFileMonitor.cxx:364:7: note: Value assigned to 'currentWatcher'
      currentWatcher = dynamic_cast<cmVirtualDirectoryWatcher*>(nextWatcher);
      ^
/project/git/Source/cmFileMonitor.cxx:324:5: note: Loop condition is true.  Entering loop body
    for (size_t i = 0; i < segmentCount; ++i) {
    ^
/project/git/Source/cmFileMonitor.cxx:327:33: note: Assuming the condition is true
      const bool fileSegment = (i == segmentCount - 1);
                                ^
/project/git/Source/cmFileMonitor.cxx:334:11: note: Assuming the condition is false
      if (currentSegment.empty()) {
          ^
/project/git/Source/cmFileMonitor.cxx:334:7: note: Taking false branch
      if (currentSegment.empty()) {
      ^
/project/git/Source/cmFileMonitor.cxx:339:7: note: Taking true branch
      if (!nextWatcher) {
      ^
/project/git/Source/cmFileMonitor.cxx:340:9: note: Taking false branch
        if (rootSegment) { // Root part
        ^
/project/git/Source/cmFileMonitor.cxx:344:16: note: Taking true branch
        } else if (fileSegment) { // File part
               ^
/project/git/Source/cmFileMonitor.cxx:347:13: note: Passing null pointer value via 1st parameter 'p'
            dynamic_cast<cmRealDirectoryWatcher*>(currentWatcher),
            ^
/project/git/Source/cmFileMonitor.cxx:346:29: note: Calling constructor for 'cmFileWatcher'
          nextWatcher = new cmFileWatcher(
                            ^
/project/git/Source/cmFileMonitor.cxx:240:5: note: Called C++ object pointer is null
    p->AddChildWatcher(ps, this);
    ^

1 warning generated.

1 warning generated.

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmp_1YVpa.yaml -p=/project/git /project/git/Tests/CMakeLib/testEncoding.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmp9q9_2s.yaml -p=/project/git /project/git/Tests/CMakeLib/testAffinity.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmp7CLTxI.yaml -p=/project/git /project/git/Source/cmNinjaTargetGenerator.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpM037Gj.yaml -p=/project/git /project/git/Source/CPack/cmCPackDebGenerator.cxx
/project/git/Source/CPack/cmCPackDebGenerator.cxx:23:7: warning: Excessive padding in 'class (anonymous namespace)::DebGenerator' (32 padding bytes, where 0 is optimal). 
Optimal fields order: 
Logger, 
DebianArchiveType, 
ControlExtra, 
PackageFiles, 
OutputName, 
WorkDir, 
CompressionSuffix, 
TopLevelDir, 
TemporaryDir, 
ShLibsFilename, 
PostInst, 
PostRm, 
ControlValues, 
TarCompressionType, 
GenShLibs, 
GenPostInst, 
GenPostRm, 
PermissionStrictPolicy, 
consider reordering the fields or adding explicit padding members [clang-analyzer-optin.performance.Padding]
class DebGenerator
      ^
/project/git/Source/CPack/cmCPackDebGenerator.cxx:23:7: note: Excessive padding in 'class (anonymous namespace)::DebGenerator' (32 padding bytes, where 0 is optimal). Optimal fields order: Logger, DebianArchiveType, ControlExtra, PackageFiles, OutputName, WorkDir, CompressionSuffix, TopLevelDir, TemporaryDir, ShLibsFilename, PostInst, PostRm, ControlValues, TarCompressionType, GenShLibs, GenPostInst, GenPostRm, PermissionStrictPolicy, consider reordering the fields or adding explicit padding members

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpoZnwH9.yaml -p=/project/git /project/git/Tests/CMakeLib/testUTF8.cxx
/project/git/Tests/CMakeLib/testUTF8.cxx:11:3: warning: 3rd function call argument is an uninitialized value [clang-analyzer-core.CallAndMessage]
  printf("[0x%02X,0x%02X,0x%02X,0x%02X]", static_cast<int>(d[0]),
  ^
/project/git/Tests/CMakeLib/testUTF8.cxx:93:3: note: Loop condition is false. Execution continues on line 98
  for (test_utf8_entry const* e = good_entry; e->n; ++e) {
  ^
/project/git/Tests/CMakeLib/testUTF8.cxx:98:3: note: Loop condition is true.  Entering loop body
  for (test_utf8_char const* c = bad_chars; (*c)[0]; ++c) {
  ^
/project/git/Tests/CMakeLib/testUTF8.cxx:99:5: note: Taking false branch
    if (!decode_bad(*c)) {
    ^
/project/git/Tests/CMakeLib/testUTF8.cxx:98:3: note: Loop condition is true.  Entering loop body
  for (test_utf8_char const* c = bad_chars; (*c)[0]; ++c) {
  ^
/project/git/Tests/CMakeLib/testUTF8.cxx:99:10: note: Calling 'decode_bad'
    if (!decode_bad(*c)) {
         ^
/project/git/Tests/CMakeLib/testUTF8.cxx:80:7: note: Assuming 'e' is null
  if (e) {
      ^
/project/git/Tests/CMakeLib/testUTF8.cxx:80:3: note: Taking false branch
  if (e) {
  ^
/project/git/Tests/CMakeLib/testUTF8.cxx:85:3: note: Calling 'report_bad'
  report_bad(true, s);
  ^
/project/git/Tests/CMakeLib/testUTF8.cxx:46:32: note: '?' condition is true
  printf("%s: decoding bad  ", passed ? "pass" : "FAIL");
                               ^
/project/git/Tests/CMakeLib/testUTF8.cxx:47:3: note: Calling 'test_utf8_char_print'
  test_utf8_char_print(c);
  ^
/project/git/Tests/CMakeLib/testUTF8.cxx:11:3: note: 3rd function call argument is an uninitialized value
  printf("[0x%02X,0x%02X,0x%02X,0x%02X]", static_cast<int>(d[0]),
  ^

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmp9KQJDi.yaml -p=/project/git /project/git/Source/CPack/cmCPackNSISGenerator.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmp0tqiQB.yaml -p=/project/git /project/git/Tests/CMakeLib/testGeneratedFileStream.cxx

1 warning generated.

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpn2FqGh.yaml -p=/project/git /project/git/Tests/CMakeLib/testRST.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpJlSR8U.yaml -p=/project/git /project/git/Tests/CMakeLib/testXMLParser.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpdlnCpv.yaml -p=/project/git /project/git/Tests/CMakeLib/testXMLSafe.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpVCtmZr.yaml -p=/project/git /project/git/Source/cmServerConnection.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmp0QuMSp.yaml -p=/project/git /project/git/Tests/RunCMake/pseudo_cppcheck.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpO3t0Jq.yaml -p=/project/git /project/git/Tests/RunCMake/pseudo_emulator.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpyHjkWD.yaml -p=/project/git /project/git/Tests/RunCMake/exit_code.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpi31ltm.yaml -p=/project/git /project/git/Tests/RunCMake/pseudo_emulator_custom_command.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmp8RzLWF.yaml -p=/project/git /project/git/Tests/RunCMake/pseudo_tidy.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpMS3_Q4.yaml -p=/project/git /project/git/Tests/CMakeLib/testSystemTools.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpR5rpeS.yaml -p=/project/git /project/git/Tests/RunCMake/pseudo_iwyu.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpKYsJyA.yaml -p=/project/git /project/git/Tests/RunCMake/pseudo_cpplint.c

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmps11ef4.yaml -p=/project/git /project/git/Tests/CMakeLib/testFindPackageCommand.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpFb2ayB.yaml -p=/project/git /project/git/Source/CPack/cmCPackRPMGenerator.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpGh211C.yaml -p=/project/git /project/git/Tests/CMakeLib/run_compile_commands.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpEGbXqo.yaml -p=/project/git /project/git/Source/cmServer.cxx
/project/git/Source/cmServer.cxx:519:3: warning: Call to virtual function during construction [clang-analyzer-optin.cplusplus.VirtualCall]
  AddNewConnection(connection);
  ^
/project/git/Source/cmServer.cxx:519:3: note: This constructor of an object of type 'cmServerBase' has not returned when the virtual method was called
/project/git/Source/cmServer.cxx:519:3: note: Call to virtual function during construction

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpbdHO2o.yaml -p=/project/git /project/git/Source/CPack/IFW/cmCPackIFWInstaller.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpSDqDC6.yaml -p=/project/git /project/git/Source/CPack/IFW/cmCPackIFWGenerator.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpNqOG83.yaml -p=/project/git /project/git/Tests/CMakeServerLib/testServerBuffering.cpp

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpOr4T3R.yaml -p=/project/git /project/git/Tests/CMakeLib/testUVRAII.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpL4PpeJ.yaml -p=/project/git /project/git/Source/CPack/IFW/cmCPackIFWPackage.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpPSjbIv.yaml -p=/project/git /project/git/Source/cmGlobalNinjaGenerator.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpjxOxpT.yaml -p=/project/git /project/git/Source/cmServerProtocol.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpJgW0Yv.yaml -p=/project/git /project/git/Source/cmJsonObjects.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmp1LPg45.yaml -p=/project/git /project/git/Source/CPack/cmCPackGenerator.cxx

clang-tidy -header-filter=^/project/git/.* -checks=-*,clang-analyzer-* -export-fixes /tmp/tmpaBRDdi/tmpkpMyLo.yaml -p=/project/git /project/git/Source/cmGeneratorTarget.cxx

Applying fixes ...
ninja
Is Shell: True
ninja: no work to do.
ctest -j16
Is Shell: True
Test project /project/build
Guessing configuration NoConfig
        Start   5: kwsys.testSystemTools
        Start  88: LinkFlags-prepare
        Start 163: wrapping
        Start 235: CTestTestTimeout
        Start 146: complexOneConfig
        Start 173: linkorder1
        Start 185: CTestTestNoBuild
        Start 302: RunCMake.Ninja
        Start 231: CTestTestScheduler
        Start 227: CTestLimitDashJ
        Start 436: RunCMake.CPack_DEB
        Start 307: RunCMake.Byproducts
        Start 233: CTestTestStopTime
        Start 184: CTest.UpdateGIT
        Start 405: RunCMake.CTestTimeoutAfterMatch
        Start 425: RunCMake.IfacePaths_INCLUDE_DIRECTORIES
  1/477 Test #185: CTestTestNoBuild .......................................   Passed    0.92 sec
  2/477 Test   #5: kwsys.testSystemTools ..................................***Failed    1.13 sec
  3/477 Test #173: linkorder1 .............................................   Passed    1.22 sec
  4/477 Test  #88: LinkFlags-prepare ......................................   Passed    1.22 sec
        Start  89: LinkFlags-lib
        Start 329: RunCMake.ObjectLibrary
        Start 401: RunCMake.alias_targets
        Start 444: RunCMake.CPack_Ext
  5/477 Test #163: wrapping ...............................................   Passed    1.23 sec
  6/477 Test #146: complexOneConfig .......................................   Passed    1.73 sec
  7/477 Test  #89: LinkFlags-lib ..........................................   Passed    1.31 sec
        Start  90: LinkFlags-dll
        Start 164: qtwrapping
        Start  19: kwsys.testProcess-6
  8/477 Test #164: qtwrapping .............................................   Passed    0.60 sec
  9/477 Test  #90: LinkFlags-dll ..........................................   Passed    1.40 sec
        Start  91: LinkFlags-mod
        Start 165: testdriver1
 10/477 Test #165: testdriver1 ............................................   Passed    0.60 sec
 11/477 Test  #91: LinkFlags-mod ..........................................   Passed    1.40 sec
        Start  92: LinkFlags-exe
        Start 166: testdriver2
 12/477 Test #166: testdriver2 ............................................   Passed    0.60 sec
 13/477 Test  #92: LinkFlags-exe ..........................................   Passed    1.40 sec
        Start  93: LinkFlags-lib_config
        Start 277: RunCMake.CMP0022
 14/477 Test  #93: LinkFlags-lib_config ...................................   Passed    1.50 sec
        Start  94: LinkFlags-dll_config
 15/477 Test  #94: LinkFlags-dll_config ...................................   Passed    1.50 sec
        Start  95: LinkFlags-mod_config
 16/477 Test #425: RunCMake.IfacePaths_INCLUDE_DIRECTORIES ................   Passed    9.94 sec
 17/477 Test  #95: LinkFlags-mod_config ...................................   Passed    1.40 sec
        Start  96: LinkFlags-exe_config
        Start 412: RunCMake.CheckModules
 18/477 Test #401: RunCMake.alias_targets .................................   Passed   11.14 sec
 19/477 Test #329: RunCMake.ObjectLibrary .................................   Passed   11.24 sec
 20/477 Test  #96: LinkFlags-exe_config ...................................   Passed    1.30 sec
        Start  97: LinkFlags-lib_flags
        Start 439: RunCMake.CPack_TGZ
        Start  16: kwsys.testProcess-3
 21/477 Test  #19: kwsys.testProcess-6 ....................................   Passed   10.00 sec
 22/477 Test #405: RunCMake.CTestTimeoutAfterMatch ........................   Passed   12.52 sec
 23/477 Test #235: CTestTestTimeout .......................................   Passed   13.09 sec
 24/477 Test #184: CTest.UpdateGIT ........................................   Passed   13.08 sec
 25/477 Test  #97: LinkFlags-lib_flags ....................................   Passed    1.23 sec
        Start  98: LinkFlags-dll_flags
        Start 408: RunCMake.target_link_libraries
        Start 339: RunCMake.WriteCompilerDetectionHeader
        Start 426: RunCMake.IfacePaths_SOURCES
        Start 414: RunCMake.CommandLine
 26/477 Test #444: RunCMake.CPack_Ext .....................................   Passed   13.37 sec
 27/477 Test  #98: LinkFlags-dll_flags ....................................   Passed    1.41 sec
        Start  99: LinkFlags-mod_flags
        Start 363: RunCMake.ctest_submit
 28/477 Test #233: CTestTestStopTime ......................................   Passed   15.59 sec
 29/477 Test  #99: LinkFlags-mod_flags ....................................   Passed    1.41 sec
        Start 100: LinkFlags-exe_flags
        Start 318: RunCMake.GenerateExportHeader
 30/477 Test #307: RunCMake.Byproducts ....................................   Passed   16.90 sec
 31/477 Test #100: LinkFlags-exe_flags ....................................   Passed    1.41 sec
        Start 101: LinkFlags-lib_flags_config
        Start 325: RunCMake.GoogleTest
 32/477 Test #277: RunCMake.CMP0022 .......................................   Passed   11.77 sec
 33/477 Test #101: LinkFlags-lib_flags_config .............................   Passed    1.40 sec
        Start 102: LinkFlags-dll_flags_config
        Start 337: RunCMake.CompileFeatures
 34/477 Test #102: LinkFlags-dll_flags_config .............................   Passed    1.50 sec
        Start 103: LinkFlags-mod_flags_config
 35/477 Test #412: RunCMake.CheckModules ..................................   Passed    9.87 sec
 36/477 Test #103: LinkFlags-mod_flags_config .............................   Passed    1.40 sec
        Start 418: RunCMake.CPackConfig
        Start 416: RunCMake.install
 37/477 Test #414: RunCMake.CommandLine ...................................   Passed    8.53 sec
 38/477 Test #426: RunCMake.IfacePaths_SOURCES ............................   Passed    8.53 sec
 39/477 Test #436: RunCMake.CPack_DEB .....................................   Passed   22.32 sec
 40/477 Test #363: RunCMake.ctest_submit ..................................   Passed    7.73 sec
 41/477 Test  #16: kwsys.testProcess-3 ....................................   Passed   10.56 sec
 42/477 Test #439: RunCMake.CPack_TGZ .....................................   Passed   10.70 sec
        Start 319: RunCMake.GeneratorExpression
        Start 224: CTestTestSerialInDepends
        Start 333: RunCMake.TargetSources
        Start 278: RunCMake.CMP0026
        Start 394: RunCMake.try_compile
        Start 343: RunCMake.CompatibleInterface
 43/477 Test #339: RunCMake.WriteCompilerDetectionHeader ..................   Passed   10.18 sec
 44/477 Test #408: RunCMake.target_link_libraries .........................   Passed   10.18 sec
        Start  28: FindPackageTest
        Start 350: RunCMake.add_library
 45/477 Test #318: RunCMake.GenerateExportHeader ..........................   Passed    8.57 sec
        Start  29: FindModulesExecuteAll
 46/477 Test #325: RunCMake.GoogleTest ....................................   Passed    8.57 sec
        Start 306: RunCMake.BuildDepends
 47/477 Test #337: RunCMake.CompileFeatures ...............................   Passed    8.87 sec
 48/477 Test #227: CTestLimitDashJ ........................................   Passed   28.89 sec
        Start  21: kwsys.testProcess-9
        Start 411: RunCMake.target_compile_features
 49/477 Test #224: CTestTestSerialInDepends ...............................   Passed    6.93 sec
 50/477 Test #319: RunCMake.GeneratorExpression ...........................   Passed    7.13 sec
 51/477 Test #418: RunCMake.CPackConfig ...................................   Passed    8.17 sec
        Start  62: ExportImport
        Start 326: RunCMake.TargetPropertyGeneratorExpressions
        Start 237: CTestTestZeroTimeout
 52/477 Test #416: RunCMake.install .......................................   Passed    8.28 sec
 53/477 Test  #29: FindModulesExecuteAll ..................................   Passed    4.52 sec
 54/477 Test #333: RunCMake.TargetSources .................................   Passed    7.74 sec
 55/477 Test  #62: ExportImport ...........................................   Passed    1.21 sec
        Start 217: Server
        Start 341: RunCMake.PositionIndependentCode
        Start 117: BuildDepends
        Start 419: RunCMake.CPackInstallProperties
 56/477 Test #394: RunCMake.try_compile ...................................   Passed    8.34 sec
 57/477 Test #278: RunCMake.CMP0026 .......................................   Passed    8.44 sec
 58/477 Test  #28: FindPackageTest ........................................   Passed    7.47 sec
 59/477 Test #231: CTestTestScheduler .....................................   Passed   32.34 sec
 60/477 Test #343: RunCMake.CompatibleInterface ...........................   Passed    9.17 sec
        Start 232: CTestTestCostSerial
        Start 281: RunCMake.CMP0037
        Start 431: RunCMake.Cpplint
        Start 342: RunCMake.VisibilityPreset
        Start 187: CTestTestUpload
 61/477 Test #350: RunCMake.add_library ...................................   Passed    8.82 sec
        Start 406: RunCMake.File_Generate
 62/477 Test #306: RunCMake.BuildDepends ..................................   Passed    6.91 sec
 63/477 Test  #21: kwsys.testProcess-9 ....................................   Passed    6.41 sec
        Start 369: RunCMake.file
        Start 427: RunCMake.CrosscompilingEmulator
 64/477 Test #117: BuildDepends ...........................................   Passed    4.49 sec
 65/477 Test #187: CTestTestUpload ........................................   Passed    3.31 sec
 66/477 Test #411: RunCMake.target_compile_features .......................   Passed    7.01 sec
 67/477 Test #341: RunCMake.PositionIndependentCode .......................   Passed    4.70 sec
 68/477 Test #237: CTestTestZeroTimeout ...................................   Passed    6.10 sec
 69/477 Test #326: RunCMake.TargetPropertyGeneratorExpressions ............   Passed    6.21 sec
 70/477 Test #217: Server .................................................   Passed    5.00 sec
        Start 264: CMakeOnly.AllFindModules
        Start 280: RunCMake.CMP0028
        Start 435: RunCMake.ctest_labels_for_subprojects
        Start 285: RunCMake.CMP0041
        Start  70: StagingPrefix
        Start 442: RunCMake.CPack_ZIP
        Start 443: RunCMake.CPack_STGZ
 71/477 Test #419: RunCMake.CPackInstallProperties ........................   Passed    5.12 sec
        Start 288: RunCMake.CMP0046
 72/477 Test #342: RunCMake.VisibilityPreset ..............................   Passed    5.34 sec
 73/477 Test #431: RunCMake.Cpplint .......................................   Passed    5.44 sec
 74/477 Test #281: RunCMake.CMP0037 .......................................   Passed    5.95 sec
 75/477 Test #232: CTestTestCostSerial ....................................   Passed    6.15 sec
        Start 284: RunCMake.CMP0040
        Start 236: CTestTestRerunFailed
        Start 413: RunCMake.CheckIPOSupported
        Start 354: RunCMake.export
 76/477 Test #427: RunCMake.CrosscompilingEmulator ........................   Passed    3.94 sec
 77/477 Test #443: RunCMake.CPack_STGZ ....................................   Passed    3.01 sec
 78/477 Test  #70: StagingPrefix ..........................................   Passed    3.12 sec
 79/477 Test #406: RunCMake.File_Generate .................................   Passed    5.45 sec
 80/477 Test #280: RunCMake.CMP0028 .......................................   Passed    3.82 sec
        Start 432: RunCMake.Cppcheck
        Start 113: CommandLength
        Start 438: RunCMake.CPack_TBZ2
        Start  31: TryCompile
        Start 261: CMakeOnly.CheckStructHasMember
 81/477 Test #442: RunCMake.CPack_ZIP .....................................   Passed    4.42 sec
 82/477 Test #285: RunCMake.CMP0041 .......................................   Passed    4.73 sec
 83/477 Test #435: RunCMake.ctest_labels_for_subprojects ..................   Passed    4.93 sec
 84/477 Test #369: RunCMake.file ..........................................   Passed    5.85 sec
 85/477 Test #264: CMakeOnly.AllFindModules ...............................   Passed    5.03 sec
        Start 428: RunCMake.LinkWhatYouUse
        Start  81: Module.CheckTypeSize
        Start 429: RunCMake.ClangTidy
        Start 380: RunCMake.include_directories
        Start 171: Plugin
 86/477 Test #413: RunCMake.CheckIPOSupported .............................   Passed    2.52 sec
 87/477 Test #284: RunCMake.CMP0040 .......................................   Passed    3.33 sec
 88/477 Test  #81: Module.CheckTypeSize ...................................   Passed    1.11 sec
        Start 433: RunCMake.MultiLint
        Start 344: RunCMake.Syntax
        Start 430: RunCMake.IncludeWhatYouUse
 89/477 Test #288: RunCMake.CMP0046 .......................................   Passed    4.93 sec
 90/477 Test  #31: TryCompile .............................................   Passed    2.72 sec
 91/477 Test #171: Plugin .................................................   Passed    1.61 sec
 92/477 Test #438: RunCMake.CPack_TBZ2 ....................................   Passed    2.72 sec
 93/477 Test #236: CTestTestRerunFailed ...................................   Passed    4.03 sec
 94/477 Test #432: RunCMake.Cppcheck ......................................   Passed    3.33 sec
        Start 440: RunCMake.CPack_TXZ
        Start 441: RunCMake.CPack_TZ
        Start 434: RunCMake.CompilerLauncher
        Start 299: RunCMake.CMP0069
        Start 282: RunCMake.CMP0038
        Start 283: RunCMake.CMP0039
 95/477 Test #354: RunCMake.export ........................................   Passed    4.64 sec
 96/477 Test #261: CMakeOnly.CheckStructHasMember .........................   Passed    3.63 sec
 97/477 Test #113: CommandLength ..........................................   Passed    3.94 sec
 98/477 Test #429: RunCMake.ClangTidy .....................................   Passed    3.23 sec
 99/477 Test #428: RunCMake.LinkWhatYouUse ................................   Passed    3.43 sec
        Start 254: CMakeLib.testUVRAII
        Start  27: CommandLineTest
        Start 301: RunCMake.CMP0065
        Start 437: RunCMake.CPack_7Z
        Start 385: RunCMake.option
100/477 Test #430: RunCMake.IncludeWhatYouUse .............................   Passed    2.37 sec
101/477 Test #380: RunCMake.include_directories ...........................   Passed    4.28 sec
102/477 Test #344: RunCMake.Syntax ........................................   Passed    3.07 sec
103/477 Test #433: RunCMake.MultiLint .....................................   Passed    3.17 sec
        Start 145: complex
        Start  46: ObjectLibrary
        Start 291: RunCMake.CMP0051
        Start 292: RunCMake.CMP0053
104/477 Test #283: RunCMake.CMP0039 .......................................   Passed    2.47 sec
105/477 Test #282: RunCMake.CMP0038 .......................................   Passed    2.67 sec
106/477 Test #299: RunCMake.CMP0069 .......................................   Passed    2.67 sec
107/477 Test #434: RunCMake.CompilerLauncher ..............................   Passed    2.67 sec
108/477 Test #441: RunCMake.CPack_TZ ......................................   Passed    2.78 sec
109/477 Test  #46: ObjectLibrary ..........................................   Passed    0.61 sec
110/477 Test #440: RunCMake.CPack_TXZ .....................................   Passed    3.18 sec
111/477 Test #254: CMakeLib.testUVRAII ....................................   Passed    2.07 sec
        Start 290: RunCMake.CMP0050
        Start 279: RunCMake.CMP0027
        Start 332: RunCMake.TargetObjects
        Start 143: CMakeTestMultipleConfigures
        Start  72: InterfaceLibrary
        Start 304: RunCMake.ctest_memcheck
        Start 114: EmptyDepends
        Start  86: Module.WriteCompilerDetectionHeader
112/477 Test #114: EmptyDepends ...........................................   Passed    0.17 sec
113/477 Test  #72: InterfaceLibrary .......................................   Passed    0.47 sec
114/477 Test  #27: CommandLineTest ........................................   Passed    3.15 sec
115/477 Test #145: complex ................................................   Passed    1.90 sec
116/477 Test  #86: Module.WriteCompilerDetectionHeader ....................   Passed    1.18 sec
        Start 245: IncludeDirectories
        Start 310: RunCMake.Configure
        Start  69: AliasTarget
        Start 297: RunCMake.CMP0060
        Start 168: Dependency
117/477 Test #385: RunCMake.option ........................................   Passed    3.26 sec
118/477 Test #292: RunCMake.CMP0053 .......................................   Passed    2.13 sec
119/477 Test #437: RunCMake.CPack_7Z ......................................   Passed    3.38 sec
120/477 Test #301: RunCMake.CMP0065 .......................................   Passed    3.68 sec
121/477 Test #291: RunCMake.CMP0051 .......................................   Passed    2.53 sec
122/477 Test  #69: AliasTarget ............................................   Passed    0.72 sec
123/477 Test #245: IncludeDirectories .....................................   Passed    0.92 sec
        Start  22: kwsys.testProcess-10
        Start 127: CPackComponentsForAll-ZIP-default
        Start 128: CPackComponentsForAll-ZIP-OnePackPerGroup
        Start 129: CPackComponentsForAll-ZIP-IgnoreGroup
        Start 107: LibName
        Start 139: CPackTestAllGenerators
        Start 108: CustComDepend
124/477 Test #168: Dependency .............................................   Passed    1.03 sec
125/477 Test #107: LibName ................................................   Passed    0.17 sec
126/477 Test #129: CPackComponentsForAll-ZIP-IgnoreGroup ..................   Passed    0.22 sec
127/477 Test #128: CPackComponentsForAll-ZIP-OnePackPerGroup ..............   Passed    0.52 sec
128/477 Test #332: RunCMake.TargetObjects .................................   Passed    2.64 sec
129/477 Test #127: CPackComponentsForAll-ZIP-default ......................   Passed    0.52 sec
130/477 Test #279: RunCMake.CMP0027 .......................................   Passed    2.74 sec
131/477 Test #290: RunCMake.CMP0050 .......................................   Passed    2.94 sec
132/477 Test #108: CustComDepend ..........................................   Passed    0.81 sec
        Start 137: CPackComponentsDEB-components-depend2
        Start  73: SourcesProperty
        Start 300: RunCMake.CMP0081
        Start 289: RunCMake.CMP0049
        Start 109: ArgumentExpansion
        Start 110: GeneratorExpression
        Start  50: ExternalOBJ
        Start 159: TutorialStep5
        Start 130: CPackComponentsForAll-ZIP-AllInOne
133/477 Test #139: CPackTestAllGenerators .................................   Passed    0.83 sec
134/477 Test #109: ArgumentExpansion ......................................   Passed    0.21 sec
135/477 Test #304: RunCMake.ctest_memcheck ................................   Passed    3.15 sec
136/477 Test #143: CMakeTestMultipleConfigures ............................   Passed    3.25 sec
137/477 Test  #73: SourcesProperty ........................................   Passed    0.51 sec
138/477 Test #310: RunCMake.Configure .....................................   Passed    2.56 sec
139/477 Test #130: CPackComponentsForAll-ZIP-AllInOne .....................   Passed    0.80 sec
140/477 Test #159: TutorialStep5 ..........................................   Passed    0.81 sec
        Start 115: CustomCommandWorkingDirectory
        Start 141: X11
        Start 111: CustomCommand
        Start  76: CxxDialect
        Start  87: PositionIndependentTargets
        Start 105: Framework
        Start  77: CrossCompile
        Start  78: BundleUtilities
141/477 Test  #50: ExternalOBJ ............................................   Passed    0.92 sec
142/477 Test #110: GeneratorExpression ....................................   Passed    0.92 sec
143/477 Test #297: RunCMake.CMP0060 .......................................   Passed    2.87 sec
144/477 Test  #77: CrossCompile ...........................................   Passed    0.50 sec
145/477 Test #137: CPackComponentsDEB-components-depend2 ..................   Passed    1.53 sec
146/477 Test  #22: kwsys.testProcess-10 ...................................   Passed    2.35 sec
147/477 Test #141: X11 ....................................................   Passed    0.71 sec
148/477 Test  #78: BundleUtilities ........................................   Passed    0.70 sec
149/477 Test #115: CustomCommandWorkingDirectory ..........................   Passed    0.71 sec
        Start 160: TutorialStep6
        Start 286: RunCMake.CMP0043
        Start 287: RunCMake.CMP0045
        Start 328: RunCMake.LinkStatic
        Start 131: CPackComponentsDEB-components-lintian-dpkgdeb-checks
        Start 379: RunCMake.include
        Start 234: CTestTestSubdir
        Start 386: RunCMake.project
        Start 161: TutorialStep7
150/477 Test #105: Framework ..............................................   Passed    0.72 sec
151/477 Test  #87: PositionIndependentTargets .............................   Passed    0.92 sec
152/477 Test  #76: CxxDialect .............................................   Passed    0.92 sec
153/477 Test #111: CustomCommand ..........................................   Passed    1.02 sec
154/477 Test #300: RunCMake.CMP0081 .......................................   Passed    2.04 sec
155/477 Test #160: TutorialStep6 ..........................................   Passed    0.71 sec
156/477 Test #161: TutorialStep7 ..........................................   Passed    0.80 sec
157/477 Test #234: CTestTestSubdir ........................................   Passed    0.81 sec
        Start 112: CustomCommandByproducts
        Start 338: RunCMake.PolicyScope
        Start 420: RunCMake.ExternalProject
        Start 242: CTestTestFdSetSize
        Start 122: CPackComponents
        Start  37: Simple
        Start 106: TargetName
        Start 349: RunCMake.add_executable
158/477 Test #131: CPackComponentsDEB-components-lintian-dpkgdeb-checks ...   Passed    1.02 sec
159/477 Test #122: CPackComponents ........................................   Passed    0.24 sec
160/477 Test #242: CTestTestFdSetSize .....................................   Passed    0.24 sec
161/477 Test #328: RunCMake.LinkStatic ....................................   Passed    1.05 sec
162/477 Test #289: RunCMake.CMP0049 .......................................   Passed    2.58 sec
163/477 Test #106: TargetName .............................................   Passed    0.24 sec
164/477 Test #386: RunCMake.project .......................................   Passed    1.55 sec
165/477 Test #112: CustomCommandByproducts ................................   Passed    0.84 sec
        Start  43: IPO
        Start 274: CMakeOnly.MajorVersionSelection-Qt_3
        Start 275: CMakeOnly.MajorVersionSelection-Qt_4
        Start  30: StringFileTest
        Start 409: RunCMake.add_link_options
        Start 410: RunCMake.target_link_options
        Start 144: LoadedCommandOneConfig
        Start 175: SubDir
166/477 Test  #37: Simple .................................................   Passed    0.85 sec
167/477 Test #379: RunCMake.include .......................................   Passed    1.67 sec
168/477 Test  #43: IPO ....................................................   Passed    0.51 sec
169/477 Test #349: RunCMake.add_executable ................................   Passed    1.35 sec
170/477 Test #287: RunCMake.CMP0045 .......................................   Passed    2.17 sec
171/477 Test #286: RunCMake.CMP0043 .......................................   Passed    2.27 sec
172/477 Test #420: RunCMake.ExternalProject ...............................   Passed    1.46 sec
173/477 Test #338: RunCMake.PolicyScope ...................................   Passed    1.46 sec
174/477 Test #175: SubDir .................................................   Passed    0.60 sec
175/477 Test #144: LoadedCommandOneConfig .................................   Passed    0.60 sec
        Start 176: CheckCompilerRelatedVariables
        Start 177: WarnUnusedUnusedViaSet
        Start 156: TutorialStep2
        Start 157: TutorialStep3
        Start 158: TutorialStep4
        Start 366: RunCMake.ctest_skipped_test
        Start 368: RunCMake.ctest_fixtures
        Start  55: MacroTest
        Start 132: CPackComponentsDEB-components-description1
        Start 133: CPackComponentsDEB-components-description2
176/477 Test  #30: StringFileTest .........................................   Passed    1.03 sec
177/477 Test #274: CMakeOnly.MajorVersionSelection-Qt_3 ...................   Passed    1.17 sec
178/477 Test #158: TutorialStep4 ..........................................   Passed    0.56 sec
179/477 Test #157: TutorialStep3 ..........................................   Passed    0.56 sec
180/477 Test #156: TutorialStep2 ..........................................   Passed    0.56 sec
181/477 Test #177: WarnUnusedUnusedViaSet .................................   Passed    0.66 sec
182/477 Test #176: CheckCompilerRelatedVariables ..........................   Passed    0.66 sec
183/477 Test  #55: MacroTest ..............................................   Passed    0.65 sec
184/477 Test #133: CPackComponentsDEB-components-description2 .............   Passed    0.65 sec
185/477 Test #132: CPackComponentsDEB-components-description1 .............   Passed    0.65 sec
        Start  85: Module.FindDependency
        Start 134: CPackComponentsDEB-components-source
        Start 135: CPackComponentsDEB-components-shlibdeps1
        Start 382: RunCMake.list
        Start 225: CTestTestMissingDependsExe
        Start 421: RunCMake.FetchContent
        Start 202: CTestConfig.Dashboard.Release
        Start 208: CMakeCommands.target_link_libraries
        Start 308: RunCMake.CompilerChange
        Start  51: LoadCommand
186/477 Test #275: CMakeOnly.MajorVersionSelection-Qt_4 ...................   Passed    1.89 sec
187/477 Test #225: CTestTestMissingDependsExe .............................   Passed    0.61 sec
188/477 Test  #85: Module.FindDependency ..................................   Passed    1.01 sec
189/477 Test #208: CMakeCommands.target_link_libraries ....................   Passed    1.01 sec
190/477 Test #202: CTestConfig.Dashboard.Release ..........................   Passed    1.11 sec
        Start 116: OutOfSource
        Start  66: CompileDefinitions
        Start  38: PreOrder
        Start 123: CPackComponentsForAll-DEB-default
        Start 238: CTestTestDepends
191/477 Test  #51: LoadCommand ............................................   Passed    1.11 sec
192/477 Test #368: RunCMake.ctest_fixtures ................................   Passed    1.78 sec
193/477 Test #410: RunCMake.target_link_options ...........................   Passed    2.50 sec
194/477 Test #409: RunCMake.add_link_options ..............................   Passed    2.50 sec
195/477 Test #238: CTestTestDepends .......................................   Passed    0.20 sec
196/477 Test #123: CPackComponentsForAll-DEB-default ......................   Passed    0.24 sec
197/477 Test #382: RunCMake.list ..........................................   Passed    1.42 sec
198/477 Test #135: CPackComponentsDEB-components-shlibdeps1 ...............   Passed    1.42 sec
199/477 Test #134: CPackComponentsDEB-components-source ...................   Passed    1.42 sec
200/477 Test  #38: PreOrder ...............................................   Passed    0.40 sec
201/477 Test  #66: CompileDefinitions .....................................   Passed    0.40 sec
202/477 Test #308: RunCMake.CompilerChange ................................   Passed    1.54 sec
203/477 Test #116: OutOfSource ............................................   Passed    0.43 sec
        Start 239: CTestTestCycle
        Start 263: CMakeOnly.CompilerIdCXX
        Start 200: CTestConfig.Dashboard.MinSizeRel
        Start 203: CTestConfig.Script.RelWithDebInfo
        Start 211: CMakeCommands.target_compile_options
        Start 212: CMakeCommands.target_sources
        Start  34: CompileFeatures
        Start 162: testing
        Start 147: Environment
        Start 209: CMakeCommands.target_include_directories
        Start 210: CMakeCommands.target_compile_definitions
        Start 218: CTestTestCrash
        Start 136: CPackComponentsDEB-components-depend1
204/477 Test #366: RunCMake.ctest_skipped_test ............................   Passed    2.43 sec
205/477 Test #211: CMakeCommands.target_compile_options ...................   Passed    0.21 sec
206/477 Test #203: CTestConfig.Script.RelWithDebInfo ......................   Passed    0.21 sec
207/477 Test #200: CTestConfig.Dashboard.MinSizeRel .......................   Passed    0.32 sec
208/477 Test #239: CTestTestCycle .........................................   Passed    0.42 sec
209/477 Test #210: CMakeCommands.target_compile_definitions ...............   Passed    0.41 sec
210/477 Test #162: testing ................................................   Passed    0.51 sec
211/477 Test #209: CMakeCommands.target_include_directories ...............   Passed    0.51 sec
212/477 Test #147: Environment ............................................   Passed    0.51 sec
213/477 Test #136: CPackComponentsDEB-components-depend1 ..................   Passed    0.50 sec
214/477 Test #218: CTestTestCrash .........................................   Passed    0.50 sec
        Start  67: CompileOptions
        Start  68: CompatibleInterface
        Start  56: FunctionTest
        Start  52: LinkDirectory
        Start 118: MissingInstall
        Start 219: CTestTestBadExe
        Start 387: RunCMake.project_injected
        Start  80: CMakeDoubleProject
        Start  42: CxxSubdirC
        Start  47: NewlineArgs
        Start 226: CTestTestSerialOrder
215/477 Test  #34: CompileFeatures ........................................   Passed    0.53 sec
216/477 Test #219: CTestTestBadExe ........................................   Passed    0.21 sec
217/477 Test #118: MissingInstall .........................................   Passed    0.21 sec
218/477 Test #421: RunCMake.FetchContent ..................................   Passed    2.28 sec
219/477 Test  #52: LinkDirectory ..........................................   Passed    0.25 sec
220/477 Test #263: CMakeOnly.CompilerIdCXX ................................   Passed    0.87 sec
221/477 Test  #56: FunctionTest ...........................................   Passed    0.35 sec
222/477 Test  #68: CompatibleInterface ....................................   Passed    0.35 sec
223/477 Test  #67: CompileOptions .........................................   Passed    0.45 sec
224/477 Test  #80: CMakeDoubleProject .....................................   Passed    0.45 sec
225/477 Test  #42: CxxSubdirC .............................................   Passed    0.44 sec
226/477 Test #226: CTestTestSerialOrder ...................................   Passed    0.44 sec
227/477 Test  #47: NewlineArgs ............................................   Passed    0.44 sec
        Start 351: RunCMake.add_subdirectory
        Start 260: CMakeOnly.CheckLanguage
        Start 330: RunCMake.RuntimePath
        Start 124: CPackComponentsForAll-DEB-OnePackPerGroup
        Start 125: CPackComponentsForAll-DEB-IgnoreGroup
        Start 148: QtAutomocNoQt
        Start  60: SourceGroups
        Start  61: Preprocess
        Start  53: LinkLanguage
        Start 126: CPackComponentsForAll-DEB-AllInOne
        Start  20: kwsys.testProcess-7
        Start 221: CTestTestParallel
        Start 222: CTestTestVerboseOutput
228/477 Test #148: QtAutomocNoQt ..........................................   Passed    0.11 sec
229/477 Test #212: CMakeCommands.target_sources ...........................   Passed    1.09 sec
230/477 Test #125: CPackComponentsForAll-DEB-IgnoreGroup ..................   Passed    0.29 sec
231/477 Test #124: CPackComponentsForAll-DEB-OnePackPerGroup ..............   Passed    0.29 sec
232/477 Test #221: CTestTestParallel ......................................   Passed    0.58 sec
233/477 Test  #61: Preprocess .............................................   Passed    0.69 sec
234/477 Test #126: CPackComponentsForAll-DEB-AllInOne .....................   Passed    0.68 sec
235/477 Test #222: CTestTestVerboseOutput .................................   Passed    0.68 sec
236/477 Test  #60: SourceGroups ...........................................   Passed    0.69 sec
237/477 Test  #53: LinkLanguage ...........................................   Passed    0.69 sec
        Start  82: Module.CheckIPOSupported-C
        Start  44: OutDir
        Start 197: CTestConfig.Script.Debug
        Start 198: CTestConfig.Dashboard.Debug
        Start 257: CMakeOnly.CheckSymbolExists
        Start 258: CMakeOnly.CheckCXXSymbolExists
        Start  32: SystemInformation
        Start 169: JumpWithLibOut
        Start 170: JumpNoLibOut
        Start 151: ExternalProjectSourceSubdir
238/477 Test #387: RunCMake.project_injected ..............................   Passed    1.46 sec
239/477 Test #198: CTestConfig.Dashboard.Debug ............................   Passed    0.31 sec
240/477 Test #330: RunCMake.RuntimePath ...................................   Passed    1.11 sec
241/477 Test #260: CMakeOnly.CheckLanguage ................................   Passed    1.11 sec
242/477 Test #351: RunCMake.add_subdirectory ..............................   Passed    1.11 sec
243/477 Test #197: CTestConfig.Script.Debug ...............................   Passed    0.31 sec
244/477 Test  #44: OutDir .................................................   Passed    0.41 sec
245/477 Test  #82: Module.CheckIPOSupported-C .............................   Passed    0.41 sec
246/477 Test #170: JumpNoLibOut ...........................................   Passed    0.40 sec
247/477 Test #169: JumpWithLibOut .........................................   Passed    0.40 sec
248/477 Test #151: ExternalProjectSourceSubdir ............................   Passed    0.40 sec
249/477 Test  #20: kwsys.testProcess-7 ....................................   Passed    1.20 sec
        Start 172: RuntimePath
        Start 348: RunCMake.add_dependencies
        Start  57: ReturnTest
        Start 230: CTestTestResourceLock
        Start  48: SetLang
        Start  49: EmptyProperty
        Start 340: RunCMake.SourceProperties
        Start 138: CPackComponentsDEB-compression
        Start 199: CTestConfig.Script.MinSizeRel
        Start 445: RunCMake.AutoExportDll
        Start 204: CTestConfig.Dashboard.RelWithDebInfo
        Start 206: CMakeCommands.add_compile_definitions
250/477 Test  #32: SystemInformation ......................................   Passed    0.52 sec
251/477 Test  #49: EmptyProperty ..........................................   Passed    0.20 sec
252/477 Test  #48: SetLang ................................................   Passed    0.30 sec
253/477 Test #230: CTestTestResourceLock ..................................   Passed    0.30 sec
254/477 Test  #57: ReturnTest .............................................   Passed    0.30 sec
255/477 Test #172: RuntimePath ............................................   Passed    0.40 sec
256/477 Test #138: CPackComponentsDEB-compression .........................   Passed    0.50 sec
257/477 Test #199: CTestConfig.Script.MinSizeRel ..........................   Passed    0.50 sec
258/477 Test #204: CTestConfig.Dashboard.RelWithDebInfo ...................   Passed    0.49 sec
259/477 Test #340: RunCMake.SourceProperties ..............................   Passed    0.50 sec
260/477 Test #206: CMakeCommands.add_compile_definitions ..................   Passed    0.49 sec
        Start 155: TutorialStep1
        Start 181: TestsWorkingDirectory
        Start 400: RunCMake.TargetPolicies
        Start 395: RunCMake.try_run
        Start  39: MissingSourceFile
        Start  40: COnly
        Start 336: RunCMake.CompileDefinitions
        Start 446: RunCMake.AndroidMK
        Start 259: CMakeOnly.CheckCXXCompilerFlag
        Start 447: FindThreads.C-only
        Start 448: FindThreads.CXX-only
261/477 Test #258: CMakeOnly.CheckCXXSymbolExists .........................   Passed    1.19 sec
262/477 Test #257: CMakeOnly.CheckSymbolExists ............................   Passed    1.20 sec
263/477 Test  #39: MissingSourceFile ......................................   Passed    0.11 sec
264/477 Test #348: RunCMake.add_dependencies ..............................   Passed    0.98 sec
265/477 Test #181: TestsWorkingDirectory ..................................   Passed    0.42 sec
266/477 Test #155: TutorialStep1 ..........................................   Passed    0.42 sec
267/477 Test #336: RunCMake.CompileDefinitions ............................   Passed    0.41 sec
268/477 Test #448: FindThreads.CXX-only ...................................   Passed    0.40 sec
269/477 Test #445: RunCMake.AutoExportDll .................................   Passed    1.10 sec
270/477 Test #447: FindThreads.C-only .....................................   Passed    0.53 sec
        Start 269: CMakeOnly.ProjectInclude
        Start 270: CMakeOnly.MajorVersionSelection-PythonLibs_2
        Start  58: Properties
        Start  59: Assembler
        Start  74: SourceFileProperty
        Start  75: SourceFileIncludeDirProperty
        Start 223: CTestTestSkipReturnCode
        Start 246: InterfaceLinkLibraries
        Start  83: Module.CheckIPOSupported-CXX
        Start 334: RunCMake.ToolchainFile
271/477 Test  #40: COnly ..................................................   Passed    0.66 sec
272/477 Test  #75: SourceFileIncludeDirProperty ...........................   Passed    0.11 sec
273/477 Test  #74: SourceFileProperty .....................................   Passed    0.11 sec
274/477 Test  #59: Assembler ..............................................   Passed    0.11 sec
275/477 Test #395: RunCMake.try_run .......................................   Passed    0.76 sec
276/477 Test #400: RunCMake.TargetPolicies ................................   Passed    0.76 sec
277/477 Test  #58: Properties .............................................   Passed    0.15 sec
278/477 Test #223: CTestTestSkipReturnCode ................................   Passed    0.44 sec
279/477 Test #246: InterfaceLinkLibraries .................................   Passed    0.44 sec
280/477 Test  #83: Module.CheckIPOSupported-CXX ...........................   Passed    0.50 sec
281/477 Test #259: CMakeOnly.CheckCXXCompilerFlag .........................   Passed    1.19 sec
282/477 Test #446: RunCMake.AndroidMK .....................................   Passed    1.29 sec
        Start 178: WarnUnusedUnusedViaUnset
        Start  41: CxxOnly
        Start  33: MathTest
        Start 335: RunCMake.find_dependency
        Start 179: WarnUnusedCliUsed
        Start 180: WarnUninitialized
        Start  35: CMakeCommands.target_compile_features
        Start 216: CMakeCommands.target_link_directories
        Start  71: ImportedSameName
        Start  54: LinkLine
        Start  36: MSManifest
        Start 364: RunCMake.ctest_test
283/477 Test #180: WarnUninitialized ......................................   Passed    0.11 sec
284/477 Test #179: WarnUnusedCliUsed ......................................   Passed    0.11 sec
285/477 Test #335: RunCMake.find_dependency ...............................   Passed    0.15 sec
286/477 Test  #33: MathTest ...............................................   Passed    0.21 sec
287/477 Test  #41: CxxOnly ................................................   Passed    0.22 sec
288/477 Test  #54: LinkLine ...............................................   Passed    0.21 sec
289/477 Test #178: WarnUnusedUnusedViaUnset ...............................   Passed    0.22 sec
290/477 Test #269: CMakeOnly.ProjectInclude ...............................   Passed    1.09 sec
291/477 Test  #36: MSManifest .............................................   Passed    0.41 sec
292/477 Test #216: CMakeCommands.target_link_directories ..................   Passed    0.42 sec
293/477 Test  #71: ImportedSameName .......................................   Passed    0.52 sec
294/477 Test #334: RunCMake.ToolchainFile .................................   Passed    1.18 sec
        Start 402: RunCMake.interface_library
        Start 390: RunCMake.set_property
        Start 391: RunCMake.string
        Start 392: RunCMake.test_include_dirs
        Start  79: CMakeBuildTest
        Start 241: CTestTestShowOnly
        Start   1: SystemInformationNew
        Start 201: CTestConfig.Script.Release
        Start 207: CMakeCommands.add_compile_options
        Start 271: CMakeOnly.MajorVersionSelection-PythonLibs_3
        Start 372: RunCMake.find_package
        Start  65: EmptyLibrary
295/477 Test  #35: CMakeCommands.target_compile_features ..................   Passed    0.54 sec
296/477 Test #241: CTestTestShowOnly ......................................   Passed    0.11 sec
297/477 Test  #79: CMakeBuildTest .........................................   Passed    0.16 sec
298/477 Test #270: CMakeOnly.MajorVersionSelection-PythonLibs_2 ...........   Passed    1.76 sec
299/477 Test  #65: EmptyLibrary ...........................................   Passed    0.65 sec
300/477 Test #372: RunCMake.find_package ..................................   Passed    0.65 sec
301/477 Test #201: CTestConfig.Script.Release .............................   Passed    0.66 sec
302/477 Test #364: RunCMake.ctest_test ....................................   Passed    1.18 sec
303/477 Test #207: CMakeCommands.add_compile_options ......................   Passed    0.65 sec
        Start 377: RunCMake.get_property
        Start  63: Unset
        Start 404: RunCMake.configure_file
        Start  64: PolicyScope
        Start 272: CMakeOnly.MajorVersionSelection-PythonInterp_2
        Start  45: OutName
        Start 422: RunCMake.CTestCommandLine
        Start 265: CMakeOnly.SelectLibraryConfigurations
        Start 247: CMakeLib.testGeneratedFileStream
304/477 Test   #1: SystemInformationNew ...................................   Passed    0.93 sec
305/477 Test  #45: OutName ................................................   Passed    0.16 sec
306/477 Test #272: CMakeOnly.MajorVersionSelection-PythonInterp_2 .........   Passed    0.16 sec
307/477 Test #392: RunCMake.test_include_dirs .............................   Passed    1.02 sec
308/477 Test #391: RunCMake.string ........................................   Passed    1.02 sec
309/477 Test #390: RunCMake.set_property ..................................   Passed    1.02 sec
310/477 Test  #64: PolicyScope ............................................   Passed    0.35 sec
311/477 Test #404: RunCMake.configure_file ................................   Passed    0.45 sec
312/477 Test  #63: Unset ..................................................   Passed    0.46 sec
313/477 Test #247: CMakeLib.testGeneratedFileStream .......................   Passed    0.54 sec
314/477 Test #271: CMakeOnly.MajorVersionSelection-PythonLibs_3 ...........   Passed    1.31 sec
315/477 Test #265: CMakeOnly.SelectLibraryConfigurations ..................   Passed    0.54 sec
        Start 266: CMakeOnly.TargetScope
        Start 346: RunCMake.add_custom_command
        Start 378: RunCMake.if
        Start 358: RunCMake.ctest_build
        Start 367: RunCMake.ctest_upload
        Start 174: linkorder2
        Start 407: RunCMake.ExportWithoutLanguage
        Start 295: RunCMake.CMP0057
        Start 423: RunCMake.CacheNewline
        Start  26: CMake.Copyright
        Start 244: CompileCommandOutput
        Start 424: RunCMake.CPackSymlinks
316/477 Test #422: RunCMake.CTestCommandLine ..............................   Passed    0.57 sec
317/477 Test #407: RunCMake.ExportWithoutLanguage .........................   Passed    0.03 sec
318/477 Test #174: linkorder2 .............................................   Passed    0.12 sec
319/477 Test #367: RunCMake.ctest_upload ..................................   Passed    0.12 sec
320/477 Test #358: RunCMake.ctest_build ...................................   Passed    0.18 sec
321/477 Test #378: RunCMake.if ............................................   Passed    0.20 sec
322/477 Test #402: RunCMake.interface_library .............................   Passed    1.63 sec
323/477 Test #266: CMakeOnly.TargetScope ..................................   Passed    0.30 sec
324/477 Test #423: RunCMake.CacheNewline ..................................   Passed    0.39 sec
325/477 Test #377: RunCMake.get_property ..................................   Passed    0.97 sec
326/477 Test #424: RunCMake.CPackSymlinks .................................   Passed    0.39 sec
327/477 Test #295: RunCMake.CMP0057 .......................................   Passed    0.40 sec
328/477 Test #244: CompileCommandOutput ...................................   Passed    0.39 sec
329/477 Test  #26: CMake.Copyright ........................................   Passed    0.39 sec
        Start 457: CMake.File
        Start 458: CMake.ImplicitLinkInfo
        Start 255: CMakeServerLib.testServerBuffering
        Start 312: RunCMake.ExternalData
        Start 359: RunCMake.ctest_cmake_error
        Start 273: CMakeOnly.MajorVersionSelection-PythonInterp_3
        Start 248: CMakeLib.testRST
        Start 373: RunCMake.find_path
        Start  24: kwiml.test
        Start 374: RunCMake.find_program
        Start 365: RunCMake.ctest_disabled_test
        Start 327: RunCMake.Languages
        Start 323: RunCMake.GetPrerequisites
        Start 324: RunCMake.GNUInstallDirs
330/477 Test #248: CMakeLib.testRST .......................................   Passed    0.01 sec
331/477 Test #273: CMakeOnly.MajorVersionSelection-PythonInterp_3 .........   Passed    0.05 sec
332/477 Test #359: RunCMake.ctest_cmake_error .............................   Passed    0.05 sec
333/477 Test #255: CMakeServerLib.testServerBuffering .....................   Passed    0.15 sec
334/477 Test #458: CMake.ImplicitLinkInfo .................................   Passed    0.17 sec
335/477 Test #457: CMake.File .............................................   Passed    0.37 sec
336/477 Test #324: RunCMake.GNUInstallDirs ................................   Passed    0.35 sec
337/477 Test  #24: kwiml.test .............................................   Passed    0.56 sec
338/477 Test #373: RunCMake.find_path .....................................   Passed    0.56 sec
339/477 Test #323: RunCMake.GetPrerequisites ..............................   Passed    0.55 sec
340/477 Test #374: RunCMake.find_program ..................................   Passed    0.56 sec
        Start 188: CTestCoverageCollectGCOV
        Start 267: CMakeOnly.find_library
        Start 167: testdriver3
        Start 398: RunCMake.while
        Start 360: RunCMake.ctest_configure
        Start 381: RunCMake.include_guard
        Start 256: CMakeOnly.LinkInterfaceLoop
        Start 104: LinkFlags-exe_flags_config
        Start 417: RunCMake.CPackCommandLine
        Start 249: CMakeLib.testSystemTools
        Start 393: RunCMake.BundleUtilities
341/477 Test #381: RunCMake.include_guard .................................   Passed    0.10 sec
342/477 Test #360: RunCMake.ctest_configure ...............................   Passed    0.11 sec
343/477 Test #398: RunCMake.while .........................................   Passed    0.11 sec
344/477 Test #312: RunCMake.ExternalData ..................................   Passed    0.74 sec
345/477 Test #167: testdriver3 ............................................   Passed    0.17 sec
346/477 Test #267: CMakeOnly.find_library .................................   Passed    0.17 sec
347/477 Test #365: RunCMake.ctest_disabled_test ...........................   Passed    0.73 sec
348/477 Test #346: RunCMake.add_custom_command ............................   Passed    1.15 sec
349/477 Test #393: RunCMake.BundleUtilities ...............................   Passed    0.25 sec
350/477 Test #327: RunCMake.Languages .....................................   Passed    0.93 sec
351/477 Test #256: CMakeOnly.LinkInterfaceLoop ............................   Passed    0.38 sec
352/477 Test #249: CMakeLib.testSystemTools ...............................   Passed    0.37 sec
353/477 Test #104: LinkFlags-exe_flags_config .............................   Passed    0.38 sec
354/477 Test #417: RunCMake.CPackCommandLine ..............................   Passed    0.37 sec
        Start  84: Module.ExternalData
        Start 303: RunCMake.CTest
        Start 250: CMakeLib.testUTF8
        Start 296: RunCMake.CMP0059
        Start 309: RunCMake.CompilerNotFound
        Start 268: CMakeOnly.find_path
        Start 345: RunCMake.WorkingDirectory
        Start 193: CTestCoberturaCoverage
        Start 194: CTestJacocoCoverage
        Start 195: CTestJavascriptCoverage
        Start 196: CTestDelphiCoverage
        Start 461: CMake.If
        Start 463: CMake.Math
        Start 470: CMake.FileDownload
355/477 Test #345: RunCMake.WorkingDirectory ..............................   Passed    0.07 sec
356/477 Test #268: CMakeOnly.find_path ....................................   Passed    0.07 sec
357/477 Test #296: RunCMake.CMP0059 .......................................   Passed    0.17 sec
358/477 Test #250: CMakeLib.testUTF8 ......................................   Passed    0.17 sec
359/477 Test #303: RunCMake.CTest .........................................   Passed    0.17 sec
360/477 Test #193: CTestCoberturaCoverage .................................   Passed    0.17 sec
361/477 Test #461: CMake.If ...............................................   Passed    0.36 sec
362/477 Test  #84: Module.ExternalData ....................................   Passed    0.38 sec
363/477 Test #196: CTestDelphiCoverage ....................................   Passed    0.36 sec
364/477 Test #463: CMake.Math .............................................   Passed    0.36 sec
365/477 Test #195: CTestJavascriptCoverage ................................   Passed    0.36 sec
366/477 Test #470: CMake.FileDownload .....................................   Passed    0.36 sec
367/477 Test #194: CTestJacocoCoverage ....................................   Passed    0.37 sec
        Start  17: kwsys.testProcess-4
        Start 220: CTestTestBadGenerator
        Start 228: CTestTestPrintLabels
        Start 229: CTestTestLabelRegExp
        Start  25: curl
        Start 262: CMakeOnly.CompilerIdC
        Start 347: RunCMake.add_custom_target
        Start 477: CMake.CheckSourceTree
        Start  18: kwsys.testProcess-5
        Start 213: CMakeCommands.add_link_options
        Start 214: CMakeCommands.target_link_options
        Start 215: CMakeCommands.link_directories
        Start 189: CTestTestEmptyBinaryDirectory
368/477 Test #309: RunCMake.CompilerNotFound ..............................   Passed    0.64 sec
369/477 Test  #25: curl ...................................................   Passed    0.29 sec
370/477 Test #229: CTestTestLabelRegExp ...................................   Passed    0.29 sec
371/477 Test #228: CTestTestPrintLabels ...................................   Passed    0.29 sec
372/477 Test #220: CTestTestBadGenerator ..................................   Passed    0.29 sec
373/477 Test #188: CTestCoverageCollectGCOV ...............................   Passed    1.07 sec
374/477 Test #213: CMakeCommands.add_link_options .........................   Passed    0.38 sec
375/477 Test  #17: kwsys.testProcess-4 ....................................   Passed    0.40 sec
376/477 Test #189: CTestTestEmptyBinaryDirectory ..........................   Passed    0.38 sec
377/477 Test #214: CMakeCommands.target_link_options ......................   Passed    0.38 sec
378/477 Test #477: CMake.CheckSourceTree ..................................***Failed    0.40 sec
379/477 Test #215: CMakeCommands.link_directories .........................   Passed    0.39 sec
380/477 Test  #18: kwsys.testProcess-5 ....................................   Passed    0.40 sec
        Start 313: RunCMake.FeatureSummary
        Start 191: CTestCacheCoverage
        Start 192: CTestPythonCoverage
        Start 182: CTest.NoNewline
        Start 183: CTest.BuildCommand.ProjectInSubdir
        Start   2: kwsys.testEncode
        Start   3: kwsys.testTerminal
        Start 190: CTestGTMCoverage
        Start 399: RunCMake.CMP0004
        Start   4: kwsys.testConfigure
        Start 205: CTestConfig.ScriptWithArgs
        Start 361: RunCMake.ctest_coverage
        Start 388: RunCMake.return
381/477 Test #347: RunCMake.add_custom_target .............................   Passed    0.42 sec
382/477 Test #262: CMakeOnly.CompilerIdC ..................................   Passed    0.42 sec
383/477 Test   #3: kwsys.testTerminal .....................................   Passed    0.01 sec
384/477 Test   #2: kwsys.testEncode .......................................   Passed    0.01 sec
385/477 Test #183: CTest.BuildCommand.ProjectInSubdir .....................   Passed    0.04 sec
386/477 Test #182: CTest.NoNewline ........................................   Passed    0.04 sec
387/477 Test #192: CTestPythonCoverage ....................................   Passed    0.04 sec
388/477 Test #191: CTestCacheCoverage .....................................   Passed    0.05 sec
389/477 Test #205: CTestConfig.ScriptWithArgs .............................   Passed    0.23 sec
390/477 Test #190: CTestGTMCoverage .......................................   Passed    0.24 sec
391/477 Test #399: RunCMake.CMP0004 .......................................   Passed    0.24 sec
392/477 Test   #4: kwsys.testConfigure ....................................   Passed    0.23 sec
393/477 Test #361: RunCMake.ctest_coverage ................................   Passed    0.23 sec
394/477 Test #388: RunCMake.return ........................................   Passed    0.23 sec
        Start 362: RunCMake.ctest_start
        Start 389: RunCMake.separate_arguments
        Start 375: RunCMake.foreach
        Start 251: CMakeLib.testXMLParser
        Start 276: RunCMake.CMP0019
        Start 356: RunCMake.cmake_parse_arguments
        Start 471: CMake.FileDownloadBadHash
        Start   9: kwsys.testEncoding
        Start 472: CMake.FileUpload
        Start 316: RunCMake.FindLua
        Start 317: RunCMake.FindOpenGL
        Start  11: kwsys.testConsoleBuf
        Start  12: kwsys.testSystemInformation
        Start 186: CTestTestNoExe
395/477 Test #471: CMake.FileDownloadBadHash ..............................   Passed    0.01 sec
396/477 Test #276: RunCMake.CMP0019 .......................................   Passed    0.12 sec
397/477 Test #251: CMakeLib.testXMLParser .................................   Passed    0.12 sec
398/477 Test #375: RunCMake.foreach .......................................   Passed    0.12 sec
399/477 Test #389: RunCMake.separate_arguments ............................   Passed    0.12 sec
400/477 Test #313: RunCMake.FeatureSummary ................................   Passed    0.57 sec
401/477 Test #472: CMake.FileUpload .......................................   Passed    0.31 sec
402/477 Test   #9: kwsys.testEncoding .....................................   Passed    0.31 sec
403/477 Test  #11: kwsys.testConsoleBuf ...................................   Passed    0.30 sec
404/477 Test  #12: kwsys.testSystemInformation ............................   Passed    0.40 sec
405/477 Test #186: CTestTestNoExe .........................................   Passed    0.40 sec
406/477 Test #317: RunCMake.FindOpenGL ....................................   Passed    0.41 sec
        Start 150: ExternalProjectSubdir
        Start 370: RunCMake.find_file
        Start 449: CMake.List
        Start 355: RunCMake.cmake_minimum_required
        Start 305: RunCMake.AndroidTestUtilities
        Start 252: CMakeLib.testXMLSafe
        Start 311: RunCMake.DisallowedCommands
        Start 253: CMakeLib.testFindPackageCommand
        Start 462: CMake.String
        Start 415: RunCMake.CommandLineTar
        Start 453: CMake.Toolchain
        Start 454: CMake.GetFilenameComponentRealpath
407/477 Test #356: RunCMake.cmake_parse_arguments .........................   Passed    0.54 sec
408/477 Test #252: CMakeLib.testXMLSafe ...................................   Passed    0.11 sec
409/477 Test #305: RunCMake.AndroidTestUtilities ..........................   Passed    0.13 sec
410/477 Test #355: RunCMake.cmake_minimum_required ........................   Passed    0.13 sec
411/477 Test #449: CMake.List .............................................   Passed    0.13 sec
412/477 Test #362: RunCMake.ctest_start ...................................   Passed    0.56 sec
413/477 Test #253: CMakeLib.testFindPackageCommand ........................   Passed    0.12 sec
414/477 Test #370: RunCMake.find_file .....................................   Passed    0.23 sec
415/477 Test #150: ExternalProjectSubdir ..................................   Passed    0.23 sec
416/477 Test #316: RunCMake.FindLua .......................................   Passed    0.75 sec
417/477 Test #415: RunCMake.CommandLineTar ................................   Passed    0.33 sec
418/477 Test #453: CMake.Toolchain ........................................   Passed    0.32 sec
419/477 Test #454: CMake.GetFilenameComponentRealpath .....................   Passed    0.32 sec
        Start 460: CMake.GetProperty
        Start  13: kwsys.testDynamicLoader
        Start  14: kwsys.testProcess-1
        Start  15: kwsys.testProcess-2
        Start 383: RunCMake.math
        Start 140: CPackComponentsPrefix
        Start 376: RunCMake.get_filename_component
        Start 298: RunCMake.CMP0064
        Start 293: RunCMake.CMP0054
        Start 352: RunCMake.build_command
        Start 357: RunCMake.continue
        Start 353: RunCMake.execute_process
        Start 294: RunCMake.CMP0055
420/477 Test #311: RunCMake.DisallowedCommands ............................   Passed    0.35 sec
421/477 Test #376: RunCMake.get_filename_component ........................   Passed    0.04 sec
422/477 Test #140: CPackComponentsPrefix ..................................   Passed    0.08 sec
423/477 Test #383: RunCMake.math ..........................................   Passed    0.12 sec
424/477 Test  #15: kwsys.testProcess-2 ....................................   Passed    0.12 sec
425/477 Test  #14: kwsys.testProcess-1 ....................................   Passed    0.18 sec
426/477 Test  #13: kwsys.testDynamicLoader ................................   Passed    0.18 sec
427/477 Test #460: CMake.GetProperty ......................................   Passed    0.18 sec
428/477 Test #298: RunCMake.CMP0064 .......................................   Passed    0.27 sec
429/477 Test #462: CMake.String ...........................................   Passed    0.61 sec
430/477 Test #293: RunCMake.CMP0054 .......................................   Passed    0.27 sec
431/477 Test #352: RunCMake.build_command .................................   Passed    0.27 sec
432/477 Test #294: RunCMake.CMP0055 .......................................   Passed    0.26 sec
433/477 Test #357: RunCMake.continue ......................................   Passed    0.27 sec
434/477 Test #353: RunCMake.execute_process ...............................   Passed    0.27 sec
        Start 314: RunCMake.FPHSA
        Start 473: CMake.ELF
        Start 474: CMake.EndStuff
        Start 320: RunCMake.GeneratorInstance
        Start 475: CMake.GetPrerequisites
        Start 455: CMake.Version
        Start 456: CMake.Message
        Start 464: CMake.CMakeMinimumRequired
        Start 465: CMake.CompilerIdVendor
        Start  23: kwsys.testSharedForward
        Start 119: CPackUseDefaultVersion
        Start 466: CMake.ProcessorCount
        Start 120: CPackUseProjectVersion
        Start 467: CMake.PushCheckState
        Start 240: CTestTestRunScript
435/477 Test #456: CMake.Message ..........................................   Passed    0.01 sec
436/477 Test #455: CMake.Version ..........................................   Passed    0.02 sec
437/477 Test #475: CMake.GetPrerequisites .................................   Passed    0.09 sec
438/477 Test #320: RunCMake.GeneratorInstance .............................   Passed    0.09 sec
439/477 Test #474: CMake.EndStuff .........................................   Passed    0.09 sec
440/477 Test #473: CMake.ELF ..............................................   Passed    0.09 sec
441/477 Test #465: CMake.CompilerIdVendor .................................   Passed    0.08 sec
442/477 Test #119: CPackUseDefaultVersion .................................   Passed    0.18 sec
443/477 Test #464: CMake.CMakeMinimumRequired .............................   Passed    0.18 sec
444/477 Test #120: CPackUseProjectVersion .................................   Passed    0.17 sec
445/477 Test  #23: kwsys.testSharedForward ................................   Passed    0.20 sec
446/477 Test #466: CMake.ProcessorCount ...................................   Passed    0.20 sec
447/477 Test #314: RunCMake.FPHSA .........................................   Passed    0.30 sec
448/477 Test #240: CTestTestRunScript .....................................   Passed    0.28 sec
449/477 Test #467: CMake.PushCheckState ...................................   Passed    0.28 sec
        Start 384: RunCMake.message
        Start 371: RunCMake.find_library
        Start 396: RunCMake.set
        Start 315: RunCMake.FindBoost
        Start 476: CMake.PolicyCheck
        Start 468: CMake.While
        Start   6: kwsys.testCommandLineArguments
        Start 121: CPackUseShortProjectVersion
        Start 403: RunCMake.no_install_prefix
        Start 469: CMake.CMakeHostSystemInformation
        Start   7: kwsys.testCommandLineArguments1
        Start 450: CMake.VariableWatch
        Start   8: kwsys.testDirectory
        Start 451: CMake.Include
        Start 452: CMake.FindBase
450/477 Test   #6: kwsys.testCommandLineArguments .........................   Passed    0.02 sec
451/477 Test #468: CMake.While ............................................   Passed    0.02 sec
452/477 Test #315: RunCMake.FindBoost .....................................   Passed    0.12 sec
453/477 Test #396: RunCMake.set ...........................................   Passed    0.12 sec
454/477 Test #371: RunCMake.find_library ..................................   Passed    0.13 sec
455/477 Test #384: RunCMake.message .......................................   Passed    0.13 sec
456/477 Test #121: CPackUseShortProjectVersion ............................   Passed    0.22 sec
457/477 Test #403: RunCMake.no_install_prefix .............................   Passed    0.22 sec
458/477 Test #450: CMake.VariableWatch ....................................   Passed    0.21 sec
459/477 Test #452: CMake.FindBase .........................................   Passed    0.20 sec
460/477 Test   #7: kwsys.testCommandLineArguments1 ........................   Passed    0.21 sec
461/477 Test #451: CMake.Include ..........................................   Passed    0.20 sec
462/477 Test   #8: kwsys.testDirectory ....................................   Passed    0.21 sec
463/477 Test #469: CMake.CMakeHostSystemInformation .......................   Passed    0.22 sec
        Start  10: kwsys.testFStream
        Start 397: RunCMake.variable_watch
        Start 321: RunCMake.GeneratorPlatform
        Start 322: RunCMake.GeneratorToolset
        Start 459: CMake.ModuleNotices
        Start 331: RunCMake.Swift
464/477 Test #331: RunCMake.Swift .........................................   Passed    0.02 sec
465/477 Test #476: CMake.PolicyCheck ......................................   Passed    0.25 sec
466/477 Test #459: CMake.ModuleNotices ....................................   Passed    0.03 sec
467/477 Test #322: RunCMake.GeneratorToolset ..............................   Passed    0.05 sec
468/477 Test #321: RunCMake.GeneratorPlatform .............................   Passed    0.05 sec
469/477 Test #397: RunCMake.variable_watch ................................   Passed    0.09 sec
470/477 Test  #10: kwsys.testFStream ......................................   Passed    0.19 sec
471/477 Test #302: RunCMake.Ninja .........................................   Passed   81.18 sec
        Start 153: ExternalProjectUpdateSetup
472/477 Test #153: ExternalProjectUpdateSetup .............................   Passed    0.58 sec
        Start 243: BootstrapTest
473/477 Test #243: BootstrapTest ..........................................   Passed    4.50 sec
        Start 154: ExternalProjectUpdate
474/477 Test #154: ExternalProjectUpdate ..................................   Passed    4.64 sec
        Start 142: CMakeTestAllGenerators
475/477 Test #142: CMakeTestAllGenerators .................................   Passed    0.40 sec
        Start 149: ExternalProject
476/477 Test #149: ExternalProject ........................................   Passed    1.05 sec
        Start 152: ExternalProjectLocal
477/477 Test #152: ExternalProjectLocal ...................................   Passed    0.67 sec

99% tests passed, 2 tests failed out of 477

Label Time Summary:
Label1    =   0.29 sec*proc (1 test)
Label2    =   0.29 sec*proc (1 test)

Total Test time (real) =  93.05 sec

The following tests FAILED:
	  5 - kwsys.testSystemTools (Failed)
	477 - CMake.CheckSourceTree (Failed)
Errors while running CTest
Running clang-tidy returned non-zero!
['git', 'diff']
Is Shell: False
program finished with exit code 1
elapsedTime=321.178172
